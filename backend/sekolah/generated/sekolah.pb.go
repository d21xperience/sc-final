// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.28.3
// source: sekolah.proto

package sekolah

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TahunAjaran Structure
type TahunAjaran struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaranId  uint32                 `protobuf:"varint,1,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	Nama           string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	PeriodeAktif   string                 `protobuf:"bytes,3,opt,name=periode_aktif,json=periodeAktif,proto3" json:"periode_aktif,omitempty"`
	TanggalMulai   string                 `protobuf:"bytes,4,opt,name=tanggal_mulai,json=tanggalMulai,proto3" json:"tanggal_mulai,omitempty"`
	TanggalSelesai string                 `protobuf:"bytes,5,opt,name=tanggal_selesai,json=tanggalSelesai,proto3" json:"tanggal_selesai,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TahunAjaran) Reset() {
	*x = TahunAjaran{}
	mi := &file_sekolah_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TahunAjaran) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TahunAjaran) ProtoMessage() {}

func (x *TahunAjaran) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TahunAjaran.ProtoReflect.Descriptor instead.
func (*TahunAjaran) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{0}
}

func (x *TahunAjaran) GetTahunAjaranId() uint32 {
	if x != nil {
		return x.TahunAjaranId
	}
	return 0
}

func (x *TahunAjaran) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *TahunAjaran) GetPeriodeAktif() string {
	if x != nil {
		return x.PeriodeAktif
	}
	return ""
}

func (x *TahunAjaran) GetTanggalMulai() string {
	if x != nil {
		return x.TanggalMulai
	}
	return ""
}

func (x *TahunAjaran) GetTanggalSelesai() string {
	if x != nil {
		return x.TanggalSelesai
	}
	return ""
}

// TahunAjaran CRUD
type CreateTahunAjaranRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	TahunAjaran   *TahunAjaran           `protobuf:"bytes,2,opt,name=tahun_ajaran,json=tahunAjaran,proto3" json:"tahun_ajaran,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTahunAjaranRequest) Reset() {
	*x = CreateTahunAjaranRequest{}
	mi := &file_sekolah_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTahunAjaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTahunAjaranRequest) ProtoMessage() {}

func (x *CreateTahunAjaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTahunAjaranRequest.ProtoReflect.Descriptor instead.
func (*CreateTahunAjaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTahunAjaranRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateTahunAjaranRequest) GetTahunAjaran() *TahunAjaran {
	if x != nil {
		return x.TahunAjaran
	}
	return nil
}

type CreateTahunAjaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTahunAjaranResponse) Reset() {
	*x = CreateTahunAjaranResponse{}
	mi := &file_sekolah_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTahunAjaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTahunAjaranResponse) ProtoMessage() {}

func (x *CreateTahunAjaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTahunAjaranResponse.ProtoReflect.Descriptor instead.
func (*CreateTahunAjaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTahunAjaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateTahunAjaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetTahunAjaranRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`            // Nama schema (wajib)
	TahunAjaranId string                 `protobuf:"bytes,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"` // ID Tahun Ajaran (opsional, kosong jika ingin semua data)
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                                       // Batas data per halaman (opsional, default 10)
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`                                     // Posisi data awal (opsional, default 0)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTahunAjaranRequest) Reset() {
	*x = GetTahunAjaranRequest{}
	mi := &file_sekolah_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTahunAjaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTahunAjaranRequest) ProtoMessage() {}

func (x *GetTahunAjaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTahunAjaranRequest.ProtoReflect.Descriptor instead.
func (*GetTahunAjaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{3}
}

func (x *GetTahunAjaranRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *GetTahunAjaranRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *GetTahunAjaranRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTahunAjaranRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetTahunAjaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TahunAjaran   []*TahunAjaran         `protobuf:"bytes,1,rep,name=tahun_ajaran,json=tahunAjaran,proto3" json:"tahun_ajaran,omitempty"` // Slice dari Tahun Ajaran
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTahunAjaranResponse) Reset() {
	*x = GetTahunAjaranResponse{}
	mi := &file_sekolah_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTahunAjaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTahunAjaranResponse) ProtoMessage() {}

func (x *GetTahunAjaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTahunAjaranResponse.ProtoReflect.Descriptor instead.
func (*GetTahunAjaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{4}
}

func (x *GetTahunAjaranResponse) GetTahunAjaran() []*TahunAjaran {
	if x != nil {
		return x.TahunAjaran
	}
	return nil
}

type UpdateTahunAjaranRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	TahunAjaran   *TahunAjaran           `protobuf:"bytes,2,opt,name=tahun_ajaran,json=tahunAjaran,proto3" json:"tahun_ajaran,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTahunAjaranRequest) Reset() {
	*x = UpdateTahunAjaranRequest{}
	mi := &file_sekolah_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTahunAjaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTahunAjaranRequest) ProtoMessage() {}

func (x *UpdateTahunAjaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTahunAjaranRequest.ProtoReflect.Descriptor instead.
func (*UpdateTahunAjaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTahunAjaranRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *UpdateTahunAjaranRequest) GetTahunAjaran() *TahunAjaran {
	if x != nil {
		return x.TahunAjaran
	}
	return nil
}

type UpdateTahunAjaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTahunAjaranResponse) Reset() {
	*x = UpdateTahunAjaranResponse{}
	mi := &file_sekolah_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTahunAjaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTahunAjaranResponse) ProtoMessage() {}

func (x *UpdateTahunAjaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTahunAjaranResponse.ProtoReflect.Descriptor instead.
func (*UpdateTahunAjaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTahunAjaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateTahunAjaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteTahunAjaranRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	TahunAjaranId string                 `protobuf:"bytes,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTahunAjaranRequest) Reset() {
	*x = DeleteTahunAjaranRequest{}
	mi := &file_sekolah_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTahunAjaranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTahunAjaranRequest) ProtoMessage() {}

func (x *DeleteTahunAjaranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTahunAjaranRequest.ProtoReflect.Descriptor instead.
func (*DeleteTahunAjaranRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTahunAjaranRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *DeleteTahunAjaranRequest) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

type DeleteTahunAjaranResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTahunAjaranResponse) Reset() {
	*x = DeleteTahunAjaranResponse{}
	mi := &file_sekolah_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTahunAjaranResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTahunAjaranResponse) ProtoMessage() {}

func (x *DeleteTahunAjaranResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTahunAjaranResponse.ProtoReflect.Descriptor instead.
func (*DeleteTahunAjaranResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTahunAjaranResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteTahunAjaranResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// Semester Structure
type Semester struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SemesterId     string                 `protobuf:"bytes,1,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	TahunAjaranId  uint32                 `protobuf:"varint,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	NamaSemester   string                 `protobuf:"bytes,3,opt,name=nama_semester,json=namaSemester,proto3" json:"nama_semester,omitempty"`
	Semester       int32                  `protobuf:"varint,4,opt,name=semester,proto3" json:"semester,omitempty"`
	PeriodeAktif   int32                  `protobuf:"varint,5,opt,name=periode_aktif,json=periodeAktif,proto3" json:"periode_aktif,omitempty"`
	TanggalMulai   string                 `protobuf:"bytes,6,opt,name=tanggal_mulai,json=tanggalMulai,proto3" json:"tanggal_mulai,omitempty"`
	TanggalSelesai string                 `protobuf:"bytes,7,opt,name=tanggal_selesai,json=tanggalSelesai,proto3" json:"tanggal_selesai,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Semester) Reset() {
	*x = Semester{}
	mi := &file_sekolah_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Semester) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Semester) ProtoMessage() {}

func (x *Semester) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Semester.ProtoReflect.Descriptor instead.
func (*Semester) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{9}
}

func (x *Semester) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *Semester) GetTahunAjaranId() uint32 {
	if x != nil {
		return x.TahunAjaranId
	}
	return 0
}

func (x *Semester) GetNamaSemester() string {
	if x != nil {
		return x.NamaSemester
	}
	return ""
}

func (x *Semester) GetSemester() int32 {
	if x != nil {
		return x.Semester
	}
	return 0
}

func (x *Semester) GetPeriodeAktif() int32 {
	if x != nil {
		return x.PeriodeAktif
	}
	return 0
}

func (x *Semester) GetTanggalMulai() string {
	if x != nil {
		return x.TanggalMulai
	}
	return ""
}

func (x *Semester) GetTanggalSelesai() string {
	if x != nil {
		return x.TanggalSelesai
	}
	return ""
}

// Semester CRUD
type CreateSemesterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semester      *Semester              `protobuf:"bytes,1,opt,name=semester,proto3" json:"semester,omitempty"`
	TahunAjaranId uint32                 `protobuf:"varint,2,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSemesterRequest) Reset() {
	*x = CreateSemesterRequest{}
	mi := &file_sekolah_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSemesterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSemesterRequest) ProtoMessage() {}

func (x *CreateSemesterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSemesterRequest.ProtoReflect.Descriptor instead.
func (*CreateSemesterRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSemesterRequest) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

func (x *CreateSemesterRequest) GetTahunAjaranId() uint32 {
	if x != nil {
		return x.TahunAjaranId
	}
	return 0
}

type CreateSemesterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSemesterResponse) Reset() {
	*x = CreateSemesterResponse{}
	mi := &file_sekolah_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSemesterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSemesterResponse) ProtoMessage() {}

func (x *CreateSemesterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSemesterResponse.ProtoReflect.Descriptor instead.
func (*CreateSemesterResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSemesterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSemesterResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetSemesterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SemesterId    string                 `protobuf:"bytes,1,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSemesterRequest) Reset() {
	*x = GetSemesterRequest{}
	mi := &file_sekolah_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSemesterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSemesterRequest) ProtoMessage() {}

func (x *GetSemesterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSemesterRequest.ProtoReflect.Descriptor instead.
func (*GetSemesterRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{12}
}

func (x *GetSemesterRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

type GetSemesterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semester      []*Semester            `protobuf:"bytes,1,rep,name=semester,proto3" json:"semester,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSemesterResponse) Reset() {
	*x = GetSemesterResponse{}
	mi := &file_sekolah_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSemesterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSemesterResponse) ProtoMessage() {}

func (x *GetSemesterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSemesterResponse.ProtoReflect.Descriptor instead.
func (*GetSemesterResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{13}
}

func (x *GetSemesterResponse) GetSemester() []*Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

type UpdateSemesterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semester      *Semester              `protobuf:"bytes,1,opt,name=semester,proto3" json:"semester,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSemesterRequest) Reset() {
	*x = UpdateSemesterRequest{}
	mi := &file_sekolah_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSemesterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSemesterRequest) ProtoMessage() {}

func (x *UpdateSemesterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSemesterRequest.ProtoReflect.Descriptor instead.
func (*UpdateSemesterRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateSemesterRequest) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

type UpdateSemesterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSemesterResponse) Reset() {
	*x = UpdateSemesterResponse{}
	mi := &file_sekolah_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSemesterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSemesterResponse) ProtoMessage() {}

func (x *UpdateSemesterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSemesterResponse.ProtoReflect.Descriptor instead.
func (*UpdateSemesterResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateSemesterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSemesterResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteSemesterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SemesterId    string                 `protobuf:"bytes,1,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSemesterRequest) Reset() {
	*x = DeleteSemesterRequest{}
	mi := &file_sekolah_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSemesterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSemesterRequest) ProtoMessage() {}

func (x *DeleteSemesterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSemesterRequest.ProtoReflect.Descriptor instead.
func (*DeleteSemesterRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteSemesterRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

type DeleteSemesterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSemesterResponse) Reset() {
	*x = DeleteSemesterResponse{}
	mi := &file_sekolah_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSemesterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSemesterResponse) ProtoMessage() {}

func (x *DeleteSemesterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSemesterResponse.ProtoReflect.Descriptor instead.
func (*DeleteSemesterResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteSemesterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteSemesterResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// Struktur Sekolah
type Sekolah struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SekolahId       int32                  `protobuf:"varint,1,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	SekolahIdEnkrip string                 `protobuf:"bytes,2,opt,name=sekolah_id_enkrip,json=sekolahIdEnkrip,proto3" json:"sekolah_id_enkrip,omitempty"`
	Kecamatan       string                 `protobuf:"bytes,3,opt,name=kecamatan,proto3" json:"kecamatan,omitempty"`
	Kabupaten       string                 `protobuf:"bytes,4,opt,name=kabupaten,proto3" json:"kabupaten,omitempty"`
	Propinsi        string                 `protobuf:"bytes,5,opt,name=propinsi,proto3" json:"propinsi,omitempty"`
	KodeKecamatan   string                 `protobuf:"bytes,6,opt,name=kode_kecamatan,json=kodeKecamatan,proto3" json:"kode_kecamatan,omitempty"`
	KodeKab         string                 `protobuf:"bytes,7,opt,name=kode_kab,json=kodeKab,proto3" json:"kode_kab,omitempty"`
	KodeProp        string                 `protobuf:"bytes,8,opt,name=kode_prop,json=kodeProp,proto3" json:"kode_prop,omitempty"`
	NamaSekolah     string                 `protobuf:"bytes,9,opt,name=nama_sekolah,json=namaSekolah,proto3" json:"nama_sekolah,omitempty"`
	Npsn            string                 `protobuf:"bytes,10,opt,name=npsn,proto3" json:"npsn,omitempty"`
	AlamatJalan     string                 `protobuf:"bytes,11,opt,name=alamat_jalan,json=alamatJalan,proto3" json:"alamat_jalan,omitempty"`
	Status          string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Sekolah) Reset() {
	*x = Sekolah{}
	mi := &file_sekolah_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sekolah) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sekolah) ProtoMessage() {}

func (x *Sekolah) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sekolah.ProtoReflect.Descriptor instead.
func (*Sekolah) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{18}
}

func (x *Sekolah) GetSekolahId() int32 {
	if x != nil {
		return x.SekolahId
	}
	return 0
}

func (x *Sekolah) GetSekolahIdEnkrip() string {
	if x != nil {
		return x.SekolahIdEnkrip
	}
	return ""
}

func (x *Sekolah) GetKecamatan() string {
	if x != nil {
		return x.Kecamatan
	}
	return ""
}

func (x *Sekolah) GetKabupaten() string {
	if x != nil {
		return x.Kabupaten
	}
	return ""
}

func (x *Sekolah) GetPropinsi() string {
	if x != nil {
		return x.Propinsi
	}
	return ""
}

func (x *Sekolah) GetKodeKecamatan() string {
	if x != nil {
		return x.KodeKecamatan
	}
	return ""
}

func (x *Sekolah) GetKodeKab() string {
	if x != nil {
		return x.KodeKab
	}
	return ""
}

func (x *Sekolah) GetKodeProp() string {
	if x != nil {
		return x.KodeProp
	}
	return ""
}

func (x *Sekolah) GetNamaSekolah() string {
	if x != nil {
		return x.NamaSekolah
	}
	return ""
}

func (x *Sekolah) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *Sekolah) GetAlamatJalan() string {
	if x != nil {
		return x.AlamatJalan
	}
	return ""
}

func (x *Sekolah) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SekolahDapo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SekolahId           string                 `protobuf:"bytes,1,opt,name=sekolah_id,proto3" json:"sekolah_id,omitempty"`
	Nama                string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	Npsn                string                 `protobuf:"bytes,3,opt,name=npsn,proto3" json:"npsn,omitempty"`
	Nss                 string                 `protobuf:"bytes,4,opt,name=nss,proto3" json:"nss,omitempty"`
	Alamat              string                 `protobuf:"bytes,5,opt,name=alamat,proto3" json:"alamat,omitempty"`
	KdPos               string                 `protobuf:"bytes,6,opt,name=kd_pos,json=kdPos,proto3" json:"kd_pos,omitempty"`
	Telepon             string                 `protobuf:"bytes,7,opt,name=telepon,proto3" json:"telepon,omitempty"`
	Fax                 string                 `protobuf:"bytes,8,opt,name=fax,proto3" json:"fax,omitempty"`
	Kelurahan           string                 `protobuf:"bytes,9,opt,name=kelurahan,proto3" json:"kelurahan,omitempty"`
	Kecamatan           string                 `protobuf:"bytes,10,opt,name=kecamatan,proto3" json:"kecamatan,omitempty"`
	KabKota             string                 `protobuf:"bytes,11,opt,name=kab_kota,json=kabKota,proto3" json:"kab_kota,omitempty"`
	Propinsi            string                 `protobuf:"bytes,12,opt,name=propinsi,proto3" json:"propinsi,omitempty"`
	Website             string                 `protobuf:"bytes,13,opt,name=website,proto3" json:"website,omitempty"`
	Email               string                 `protobuf:"bytes,14,opt,name=email,proto3" json:"email,omitempty"`
	NmKepsek            string                 `protobuf:"bytes,15,opt,name=nm_kepsek,json=nmKepsek,proto3" json:"nm_kepsek,omitempty"`
	NipKepsek           string                 `protobuf:"bytes,16,opt,name=nip_kepsek,json=nipKepsek,proto3" json:"nip_kepsek,omitempty"`
	NiyKepsek           string                 `protobuf:"bytes,17,opt,name=niy_kepsek,json=niyKepsek,proto3" json:"niy_kepsek,omitempty"`
	StatusKepemilikanId string                 `protobuf:"bytes,18,opt,name=status_kepemilikan_id,json=statusKepemilikanId,proto3" json:"status_kepemilikan_id,omitempty"`
	KodeAktivasi        string                 `protobuf:"bytes,19,opt,name=kode_aktivasi,json=kodeAktivasi,proto3" json:"kode_aktivasi,omitempty"`
	Jenjang             string                 `protobuf:"bytes,20,opt,name=jenjang,proto3" json:"jenjang,omitempty"`
	BentukPendidikanId  string                 `protobuf:"bytes,21,opt,name=bentuk_pendidikan_id,json=bentukPendidikanId,proto3" json:"bentuk_pendidikan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SekolahDapo) Reset() {
	*x = SekolahDapo{}
	mi := &file_sekolah_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahDapo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahDapo) ProtoMessage() {}

func (x *SekolahDapo) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahDapo.ProtoReflect.Descriptor instead.
func (*SekolahDapo) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{19}
}

func (x *SekolahDapo) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

func (x *SekolahDapo) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *SekolahDapo) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *SekolahDapo) GetNss() string {
	if x != nil {
		return x.Nss
	}
	return ""
}

func (x *SekolahDapo) GetAlamat() string {
	if x != nil {
		return x.Alamat
	}
	return ""
}

func (x *SekolahDapo) GetKdPos() string {
	if x != nil {
		return x.KdPos
	}
	return ""
}

func (x *SekolahDapo) GetTelepon() string {
	if x != nil {
		return x.Telepon
	}
	return ""
}

func (x *SekolahDapo) GetFax() string {
	if x != nil {
		return x.Fax
	}
	return ""
}

func (x *SekolahDapo) GetKelurahan() string {
	if x != nil {
		return x.Kelurahan
	}
	return ""
}

func (x *SekolahDapo) GetKecamatan() string {
	if x != nil {
		return x.Kecamatan
	}
	return ""
}

func (x *SekolahDapo) GetKabKota() string {
	if x != nil {
		return x.KabKota
	}
	return ""
}

func (x *SekolahDapo) GetPropinsi() string {
	if x != nil {
		return x.Propinsi
	}
	return ""
}

func (x *SekolahDapo) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *SekolahDapo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SekolahDapo) GetNmKepsek() string {
	if x != nil {
		return x.NmKepsek
	}
	return ""
}

func (x *SekolahDapo) GetNipKepsek() string {
	if x != nil {
		return x.NipKepsek
	}
	return ""
}

func (x *SekolahDapo) GetNiyKepsek() string {
	if x != nil {
		return x.NiyKepsek
	}
	return ""
}

func (x *SekolahDapo) GetStatusKepemilikanId() string {
	if x != nil {
		return x.StatusKepemilikanId
	}
	return ""
}

func (x *SekolahDapo) GetKodeAktivasi() string {
	if x != nil {
		return x.KodeAktivasi
	}
	return ""
}

func (x *SekolahDapo) GetJenjang() string {
	if x != nil {
		return x.Jenjang
	}
	return ""
}

func (x *SekolahDapo) GetBentukPendidikanId() string {
	if x != nil {
		return x.BentukPendidikanId
	}
	return ""
}

type TabelSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sekolah       *Sekolah               `protobuf:"bytes,1,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TabelSekolahRequest) Reset() {
	*x = TabelSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TabelSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabelSekolahRequest) ProtoMessage() {}

func (x *TabelSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabelSekolahRequest.ProtoReflect.Descriptor instead.
func (*TabelSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{20}
}

func (x *TabelSekolahRequest) GetSekolah() *Sekolah {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

type TabelSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TabelSekolahResponse) Reset() {
	*x = TabelSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TabelSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabelSekolahResponse) ProtoMessage() {}

func (x *TabelSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabelSekolahResponse.ProtoReflect.Descriptor instead.
func (*TabelSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{21}
}

func (x *TabelSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TabelSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SchoolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchoolId      string                 `protobuf:"bytes,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	SchemaName    string                 `protobuf:"bytes,2,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchoolRequest) Reset() {
	*x = SchoolRequest{}
	mi := &file_sekolah_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolRequest) ProtoMessage() {}

func (x *SchoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolRequest.ProtoReflect.Descriptor instead.
func (*SchoolRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{22}
}

func (x *SchoolRequest) GetSchoolId() string {
	if x != nil {
		return x.SchoolId
	}
	return ""
}

func (x *SchoolRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

type SchoolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchoolName    string                 `protobuf:"bytes,1,opt,name=school_name,json=schoolName,proto3" json:"school_name,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchoolResponse) Reset() {
	*x = SchoolResponse{}
	mi := &file_sekolah_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolResponse) ProtoMessage() {}

func (x *SchoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolResponse.ProtoReflect.Descriptor instead.
func (*SchoolResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{23}
}

func (x *SchoolResponse) GetSchoolName() string {
	if x != nil {
		return x.SchoolName
	}
	return ""
}

func (x *SchoolResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type SekolahTabelTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SekolahId     int32                  `protobuf:"varint,1,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	SchemaName    string                 `protobuf:"bytes,2,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SekolahTabelTenantRequest) Reset() {
	*x = SekolahTabelTenantRequest{}
	mi := &file_sekolah_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahTabelTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahTabelTenantRequest) ProtoMessage() {}

func (x *SekolahTabelTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahTabelTenantRequest.ProtoReflect.Descriptor instead.
func (*SekolahTabelTenantRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{24}
}

func (x *SekolahTabelTenantRequest) GetSekolahId() int32 {
	if x != nil {
		return x.SekolahId
	}
	return 0
}

func (x *SekolahTabelTenantRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

type SekolahTabelTenantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SekolahId     int32                  `protobuf:"varint,1,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	NamaSekolah   string                 `protobuf:"bytes,2,opt,name=nama_sekolah,json=namaSekolah,proto3" json:"nama_sekolah,omitempty"`
	SchemaName    string                 `protobuf:"bytes,3,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SekolahTabelTenantResponse) Reset() {
	*x = SekolahTabelTenantResponse{}
	mi := &file_sekolah_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahTabelTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahTabelTenantResponse) ProtoMessage() {}

func (x *SekolahTabelTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahTabelTenantResponse.ProtoReflect.Descriptor instead.
func (*SekolahTabelTenantResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{25}
}

func (x *SekolahTabelTenantResponse) GetSekolahId() int32 {
	if x != nil {
		return x.SekolahId
	}
	return 0
}

func (x *SekolahTabelTenantResponse) GetNamaSekolah() string {
	if x != nil {
		return x.NamaSekolah
	}
	return ""
}

func (x *SekolahTabelTenantResponse) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

type CreateSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	Sekolah       *SekolahDapo           `protobuf:"bytes,2,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSekolahRequest) Reset() {
	*x = CreateSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSekolahRequest) ProtoMessage() {}

func (x *CreateSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSekolahRequest.ProtoReflect.Descriptor instead.
func (*CreateSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{26}
}

func (x *CreateSekolahRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateSekolahRequest) GetSekolah() *SekolahDapo {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

type CreateSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSekolahResponse) Reset() {
	*x = CreateSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSekolahResponse) ProtoMessage() {}

func (x *CreateSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSekolahResponse.ProtoReflect.Descriptor instead.
func (*CreateSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{27}
}

func (x *CreateSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	SekolahId     string                 `protobuf:"bytes,2,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSekolahRequest) Reset() {
	*x = GetSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSekolahRequest) ProtoMessage() {}

func (x *GetSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSekolahRequest.ProtoReflect.Descriptor instead.
func (*GetSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{28}
}

func (x *GetSekolahRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *GetSekolahRequest) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

type GetSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sekolah       *SekolahDapo           `protobuf:"bytes,1,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSekolahResponse) Reset() {
	*x = GetSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSekolahResponse) ProtoMessage() {}

func (x *GetSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSekolahResponse.ProtoReflect.Descriptor instead.
func (*GetSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{29}
}

func (x *GetSekolahResponse) GetSekolah() *SekolahDapo {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

// Siswa Structure
type Siswa struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PesertaDidikId  string                 `protobuf:"bytes,1,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	Nis             string                 `protobuf:"bytes,2,opt,name=nis,proto3" json:"nis,omitempty"`
	Nisn            string                 `protobuf:"bytes,3,opt,name=nisn,proto3" json:"nisn,omitempty"`
	NmSiswa         string                 `protobuf:"bytes,4,opt,name=nm_siswa,json=nmSiswa,proto3" json:"nm_siswa,omitempty"`
	TempatLahir     string                 `protobuf:"bytes,5,opt,name=tempat_lahir,json=tempatLahir,proto3" json:"tempat_lahir,omitempty"`
	TanggalLahir    string                 `protobuf:"bytes,6,opt,name=tanggal_lahir,json=tanggalLahir,proto3" json:"tanggal_lahir,omitempty"`
	JenisKelamin    string                 `protobuf:"bytes,7,opt,name=jenis_kelamin,json=jenisKelamin,proto3" json:"jenis_kelamin,omitempty"`
	Agama           string                 `protobuf:"bytes,8,opt,name=agama,proto3" json:"agama,omitempty"`
	AlamatSiswa     string                 `protobuf:"bytes,9,opt,name=alamat_siswa,json=alamatSiswa,proto3" json:"alamat_siswa,omitempty"`
	TeleponSiswa    string                 `protobuf:"bytes,10,opt,name=telepon_siswa,json=teleponSiswa,proto3" json:"telepon_siswa,omitempty"`
	DiterimaTanggal string                 `protobuf:"bytes,11,opt,name=diterima_tanggal,json=diterimaTanggal,proto3" json:"diterima_tanggal,omitempty"`
	NmAyah          string                 `protobuf:"bytes,12,opt,name=nm_ayah,json=nmAyah,proto3" json:"nm_ayah,omitempty"`
	NmIbu           string                 `protobuf:"bytes,13,opt,name=nm_ibu,json=nmIbu,proto3" json:"nm_ibu,omitempty"`
	PekerjaanAyah   string                 `protobuf:"bytes,14,opt,name=pekerjaan_ayah,json=pekerjaanAyah,proto3" json:"pekerjaan_ayah,omitempty"`
	PekerjaanIbu    string                 `protobuf:"bytes,15,opt,name=pekerjaan_ibu,json=pekerjaanIbu,proto3" json:"pekerjaan_ibu,omitempty"`
	NmWali          string                 `protobuf:"bytes,16,opt,name=nm_wali,json=nmWali,proto3" json:"nm_wali,omitempty"`
	PekerjaanWali   string                 `protobuf:"bytes,17,opt,name=pekerjaan_wali,json=pekerjaanWali,proto3" json:"pekerjaan_wali,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Siswa) Reset() {
	*x = Siswa{}
	mi := &file_sekolah_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Siswa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Siswa) ProtoMessage() {}

func (x *Siswa) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Siswa.ProtoReflect.Descriptor instead.
func (*Siswa) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{30}
}

func (x *Siswa) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *Siswa) GetNis() string {
	if x != nil {
		return x.Nis
	}
	return ""
}

func (x *Siswa) GetNisn() string {
	if x != nil {
		return x.Nisn
	}
	return ""
}

func (x *Siswa) GetNmSiswa() string {
	if x != nil {
		return x.NmSiswa
	}
	return ""
}

func (x *Siswa) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *Siswa) GetTanggalLahir() string {
	if x != nil {
		return x.TanggalLahir
	}
	return ""
}

func (x *Siswa) GetJenisKelamin() string {
	if x != nil {
		return x.JenisKelamin
	}
	return ""
}

func (x *Siswa) GetAgama() string {
	if x != nil {
		return x.Agama
	}
	return ""
}

func (x *Siswa) GetAlamatSiswa() string {
	if x != nil {
		return x.AlamatSiswa
	}
	return ""
}

func (x *Siswa) GetTeleponSiswa() string {
	if x != nil {
		return x.TeleponSiswa
	}
	return ""
}

func (x *Siswa) GetDiterimaTanggal() string {
	if x != nil {
		return x.DiterimaTanggal
	}
	return ""
}

func (x *Siswa) GetNmAyah() string {
	if x != nil {
		return x.NmAyah
	}
	return ""
}

func (x *Siswa) GetNmIbu() string {
	if x != nil {
		return x.NmIbu
	}
	return ""
}

func (x *Siswa) GetPekerjaanAyah() string {
	if x != nil {
		return x.PekerjaanAyah
	}
	return ""
}

func (x *Siswa) GetPekerjaanIbu() string {
	if x != nil {
		return x.PekerjaanIbu
	}
	return ""
}

func (x *Siswa) GetNmWali() string {
	if x != nil {
		return x.NmWali
	}
	return ""
}

func (x *Siswa) GetPekerjaanWali() string {
	if x != nil {
		return x.PekerjaanWali
	}
	return ""
}

type SiswaPelengkap struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PelengkapSiswaId string                 `protobuf:"bytes,1,opt,name=pelengkap_siswa_id,json=pelengkapSiswaId,proto3" json:"pelengkap_siswa_id,omitempty"`
	PesertaDidikId   string                 `protobuf:"bytes,2,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	StatusDalamKel   string                 `protobuf:"bytes,3,opt,name=status_dalam_kel,json=statusDalamKel,proto3" json:"status_dalam_kel,omitempty"`
	AnakKe           string                 `protobuf:"bytes,4,opt,name=anak_ke,json=anakKe,proto3" json:"anak_ke,omitempty"`
	SekolahAsal      string                 `protobuf:"bytes,5,opt,name=sekolah_asal,json=sekolahAsal,proto3" json:"sekolah_asal,omitempty"`
	DiterimaKelas    string                 `protobuf:"bytes,6,opt,name=diterima_kelas,json=diterimaKelas,proto3" json:"diterima_kelas,omitempty"`
	AlamatOrtu       string                 `protobuf:"bytes,7,opt,name=alamat_ortu,json=alamatOrtu,proto3" json:"alamat_ortu,omitempty"`
	TeleponOrtu      string                 `protobuf:"bytes,8,opt,name=telepon_ortu,json=teleponOrtu,proto3" json:"telepon_ortu,omitempty"`
	AlamatWali       string                 `protobuf:"bytes,9,opt,name=alamat_wali,json=alamatWali,proto3" json:"alamat_wali,omitempty"`
	TeleponWali      string                 `protobuf:"bytes,10,opt,name=telepon_wali,json=teleponWali,proto3" json:"telepon_wali,omitempty"`
	FotoSiswa        string                 `protobuf:"bytes,11,opt,name=foto_siswa,json=fotoSiswa,proto3" json:"foto_siswa,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SiswaPelengkap) Reset() {
	*x = SiswaPelengkap{}
	mi := &file_sekolah_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiswaPelengkap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiswaPelengkap) ProtoMessage() {}

func (x *SiswaPelengkap) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiswaPelengkap.ProtoReflect.Descriptor instead.
func (*SiswaPelengkap) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{31}
}

func (x *SiswaPelengkap) GetPelengkapSiswaId() string {
	if x != nil {
		return x.PelengkapSiswaId
	}
	return ""
}

func (x *SiswaPelengkap) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *SiswaPelengkap) GetStatusDalamKel() string {
	if x != nil {
		return x.StatusDalamKel
	}
	return ""
}

func (x *SiswaPelengkap) GetAnakKe() string {
	if x != nil {
		return x.AnakKe
	}
	return ""
}

func (x *SiswaPelengkap) GetSekolahAsal() string {
	if x != nil {
		return x.SekolahAsal
	}
	return ""
}

func (x *SiswaPelengkap) GetDiterimaKelas() string {
	if x != nil {
		return x.DiterimaKelas
	}
	return ""
}

func (x *SiswaPelengkap) GetAlamatOrtu() string {
	if x != nil {
		return x.AlamatOrtu
	}
	return ""
}

func (x *SiswaPelengkap) GetTeleponOrtu() string {
	if x != nil {
		return x.TeleponOrtu
	}
	return ""
}

func (x *SiswaPelengkap) GetAlamatWali() string {
	if x != nil {
		return x.AlamatWali
	}
	return ""
}

func (x *SiswaPelengkap) GetTeleponWali() string {
	if x != nil {
		return x.TeleponWali
	}
	return ""
}

func (x *SiswaPelengkap) GetFotoSiswa() string {
	if x != nil {
		return x.FotoSiswa
	}
	return ""
}

// Siswa CRUD
type CreateSiswaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	Siswa         *Siswa                 `protobuf:"bytes,2,opt,name=siswa,proto3" json:"siswa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSiswaRequest) Reset() {
	*x = CreateSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSiswaRequest) ProtoMessage() {}

func (x *CreateSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSiswaRequest.ProtoReflect.Descriptor instead.
func (*CreateSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{32}
}

func (x *CreateSiswaRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateSiswaRequest) GetSiswa() *Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

type CreateSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSiswaResponse) Reset() {
	*x = CreateSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSiswaResponse) ProtoMessage() {}

func (x *CreateSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSiswaResponse.ProtoReflect.Descriptor instead.
func (*CreateSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{33}
}

func (x *CreateSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// Crate Banyak Siswa
type CreateBanyakSiswaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	Siswa         []*Siswa               `protobuf:"bytes,2,rep,name=siswa,proto3" json:"siswa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakSiswaRequest) Reset() {
	*x = CreateBanyakSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakSiswaRequest) ProtoMessage() {}

func (x *CreateBanyakSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakSiswaRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{34}
}

func (x *CreateBanyakSiswaRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateBanyakSiswaRequest) GetSiswa() []*Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

type CreateBanyakSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakSiswaResponse) Reset() {
	*x = CreateBanyakSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakSiswaResponse) ProtoMessage() {}

func (x *CreateBanyakSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakSiswaResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{35}
}

func (x *CreateBanyakSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetSiswaRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SchemaName     string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	SemesterId     string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	RombelId       string                 `protobuf:"bytes,3,opt,name=rombel_id,json=rombelId,proto3" json:"rombel_id,omitempty"`
	PesertaDidikId string                 `protobuf:"bytes,4,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	Limit          int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`   // Batas data per halaman (opsional, default 10)
	Offset         int32                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"` // Posisi data awal (opsional, default 0)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetSiswaRequest) Reset() {
	*x = GetSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSiswaRequest) ProtoMessage() {}

func (x *GetSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSiswaRequest.ProtoReflect.Descriptor instead.
func (*GetSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{36}
}

func (x *GetSiswaRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *GetSiswaRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetSiswaRequest) GetRombelId() string {
	if x != nil {
		return x.RombelId
	}
	return ""
}

func (x *GetSiswaRequest) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *GetSiswaRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSiswaRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Siswa         []*Siswa               `protobuf:"bytes,1,rep,name=siswa,proto3" json:"siswa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSiswaResponse) Reset() {
	*x = GetSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSiswaResponse) ProtoMessage() {}

func (x *GetSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSiswaResponse.ProtoReflect.Descriptor instead.
func (*GetSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{37}
}

func (x *GetSiswaResponse) GetSiswa() []*Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

type UpdateSiswaRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SchemaName     string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	Siswa          *Siswa                 `protobuf:"bytes,2,opt,name=siswa,proto3" json:"siswa,omitempty"`
	SiswaPelengkap *SiswaPelengkap        `protobuf:"bytes,3,opt,name=siswa_pelengkap,json=siswaPelengkap,proto3" json:"siswa_pelengkap,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateSiswaRequest) Reset() {
	*x = UpdateSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSiswaRequest) ProtoMessage() {}

func (x *UpdateSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSiswaRequest.ProtoReflect.Descriptor instead.
func (*UpdateSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateSiswaRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *UpdateSiswaRequest) GetSiswa() *Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

func (x *UpdateSiswaRequest) GetSiswaPelengkap() *SiswaPelengkap {
	if x != nil {
		return x.SiswaPelengkap
	}
	return nil
}

type UpdateSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSiswaResponse) Reset() {
	*x = UpdateSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSiswaResponse) ProtoMessage() {}

func (x *UpdateSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSiswaResponse.ProtoReflect.Descriptor instead.
func (*UpdateSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteSiswaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	SiswaId       string                 `protobuf:"bytes,2,opt,name=siswa_id,json=siswaId,proto3" json:"siswa_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSiswaRequest) Reset() {
	*x = DeleteSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSiswaRequest) ProtoMessage() {}

func (x *DeleteSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSiswaRequest.ProtoReflect.Descriptor instead.
func (*DeleteSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteSiswaRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *DeleteSiswaRequest) GetSiswaId() string {
	if x != nil {
		return x.SiswaId
	}
	return ""
}

type DeleteSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSiswaResponse) Reset() {
	*x = DeleteSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSiswaResponse) ProtoMessage() {}

func (x *DeleteSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSiswaResponse.ProtoReflect.Descriptor instead.
func (*DeleteSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UploadDataSekolahMultipartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadType    string                 `protobuf:"bytes,1,opt,name=upload_type,json=uploadType,proto3" json:"upload_type,omitempty"` // siswa, nilai_akhir, guru, kelas
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	File          []byte                 `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadDataSekolahMultipartRequest) Reset() {
	*x = UploadDataSekolahMultipartRequest{}
	mi := &file_sekolah_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDataSekolahMultipartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataSekolahMultipartRequest) ProtoMessage() {}

func (x *UploadDataSekolahMultipartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataSekolahMultipartRequest.ProtoReflect.Descriptor instead.
func (*UploadDataSekolahMultipartRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{42}
}

func (x *UploadDataSekolahMultipartRequest) GetUploadType() string {
	if x != nil {
		return x.UploadType
	}
	return ""
}

func (x *UploadDataSekolahMultipartRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UploadDataSekolahMultipartRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadDataSekolahMultipartRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type UploadDataSekolahMultipartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadDataSekolahMultipartResponse) Reset() {
	*x = UploadDataSekolahMultipartResponse{}
	mi := &file_sekolah_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDataSekolahMultipartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataSekolahMultipartResponse) ProtoMessage() {}

func (x *UploadDataSekolahMultipartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataSekolahMultipartResponse.ProtoReflect.Descriptor instead.
func (*UploadDataSekolahMultipartResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{43}
}

func (x *UploadDataSekolahMultipartResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadDataSekolahMultipartResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UploadDataSekolahBase64Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadType    string                 `protobuf:"bytes,1,opt,name=upload_type,json=uploadType,proto3" json:"upload_type,omitempty"` // siswa, nilai_akhir, guru, kelas
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	File          string                 `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadDataSekolahBase64Request) Reset() {
	*x = UploadDataSekolahBase64Request{}
	mi := &file_sekolah_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDataSekolahBase64Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataSekolahBase64Request) ProtoMessage() {}

func (x *UploadDataSekolahBase64Request) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataSekolahBase64Request.ProtoReflect.Descriptor instead.
func (*UploadDataSekolahBase64Request) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{44}
}

func (x *UploadDataSekolahBase64Request) GetUploadType() string {
	if x != nil {
		return x.UploadType
	}
	return ""
}

func (x *UploadDataSekolahBase64Request) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UploadDataSekolahBase64Request) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadDataSekolahBase64Request) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

type UploadDataSekolahBase64Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadDataSekolahBase64Response) Reset() {
	*x = UploadDataSekolahBase64Response{}
	mi := &file_sekolah_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDataSekolahBase64Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataSekolahBase64Response) ProtoMessage() {}

func (x *UploadDataSekolahBase64Response) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataSekolahBase64Response.ProtoReflect.Descriptor instead.
func (*UploadDataSekolahBase64Response) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{45}
}

func (x *UploadDataSekolahBase64Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadDataSekolahBase64Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UploadDataSekolahWithStreamGrpcRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadType    string                 `protobuf:"bytes,1,opt,name=upload_type,json=uploadType,proto3" json:"upload_type,omitempty"` // siswa, nilai_akhir, guru, kelas
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	File          string                 `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadDataSekolahWithStreamGrpcRequest) Reset() {
	*x = UploadDataSekolahWithStreamGrpcRequest{}
	mi := &file_sekolah_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDataSekolahWithStreamGrpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataSekolahWithStreamGrpcRequest) ProtoMessage() {}

func (x *UploadDataSekolahWithStreamGrpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataSekolahWithStreamGrpcRequest.ProtoReflect.Descriptor instead.
func (*UploadDataSekolahWithStreamGrpcRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{46}
}

func (x *UploadDataSekolahWithStreamGrpcRequest) GetUploadType() string {
	if x != nil {
		return x.UploadType
	}
	return ""
}

func (x *UploadDataSekolahWithStreamGrpcRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UploadDataSekolahWithStreamGrpcRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadDataSekolahWithStreamGrpcRequest) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

type UploadDataSekolahWithStreamGrpcResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadDataSekolahWithStreamGrpcResponse) Reset() {
	*x = UploadDataSekolahWithStreamGrpcResponse{}
	mi := &file_sekolah_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDataSekolahWithStreamGrpcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataSekolahWithStreamGrpcResponse) ProtoMessage() {}

func (x *UploadDataSekolahWithStreamGrpcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataSekolahWithStreamGrpcResponse.ProtoReflect.Descriptor instead.
func (*UploadDataSekolahWithStreamGrpcResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{47}
}

func (x *UploadDataSekolahWithStreamGrpcResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadDataSekolahWithStreamGrpcResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Mapel struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	IdMapMapel          string                 `protobuf:"bytes,1,opt,name=id_map_mapel,json=idMapMapel,proto3" json:"id_map_mapel,omitempty"`
	MataPelajaranId     string                 `protobuf:"bytes,2,opt,name=mata_pelajaran_id,json=mataPelajaranId,proto3" json:"mata_pelajaran_id,omitempty"`
	NmLokal             string                 `protobuf:"bytes,3,opt,name=nm_lokal,json=nmLokal,proto3" json:"nm_lokal,omitempty"`
	AreaKompetensi      string                 `protobuf:"bytes,4,opt,name=area_kompetensi,json=areaKompetensi,proto3" json:"area_kompetensi,omitempty"`
	KlpMpl              string                 `protobuf:"bytes,5,opt,name=klp_mpl,json=klpMpl,proto3" json:"klp_mpl,omitempty"`
	KurikulumId         string                 `protobuf:"bytes,6,opt,name=kurikulum_id,json=kurikulumId,proto3" json:"kurikulum_id,omitempty"`
	UrutRapor           int32                  `protobuf:"varint,7,opt,name=urut_rapor,json=urutRapor,proto3" json:"urut_rapor,omitempty"`
	TingkatPendidikanId string                 `protobuf:"bytes,8,opt,name=tingkat_pendidikan_id,json=tingkatPendidikanId,proto3" json:"tingkat_pendidikan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Mapel) Reset() {
	*x = Mapel{}
	mi := &file_sekolah_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mapel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mapel) ProtoMessage() {}

func (x *Mapel) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mapel.ProtoReflect.Descriptor instead.
func (*Mapel) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{48}
}

func (x *Mapel) GetIdMapMapel() string {
	if x != nil {
		return x.IdMapMapel
	}
	return ""
}

func (x *Mapel) GetMataPelajaranId() string {
	if x != nil {
		return x.MataPelajaranId
	}
	return ""
}

func (x *Mapel) GetNmLokal() string {
	if x != nil {
		return x.NmLokal
	}
	return ""
}

func (x *Mapel) GetAreaKompetensi() string {
	if x != nil {
		return x.AreaKompetensi
	}
	return ""
}

func (x *Mapel) GetKlpMpl() string {
	if x != nil {
		return x.KlpMpl
	}
	return ""
}

func (x *Mapel) GetKurikulumId() string {
	if x != nil {
		return x.KurikulumId
	}
	return ""
}

func (x *Mapel) GetUrutRapor() int32 {
	if x != nil {
		return x.UrutRapor
	}
	return 0
}

func (x *Mapel) GetTingkatPendidikanId() string {
	if x != nil {
		return x.TingkatPendidikanId
	}
	return ""
}

type CreateMapelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mapel         *Mapel                 `protobuf:"bytes,1,opt,name=mapel,proto3" json:"mapel,omitempty"`
	SchemaName    string                 `protobuf:"bytes,2,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMapelRequest) Reset() {
	*x = CreateMapelRequest{}
	mi := &file_sekolah_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMapelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMapelRequest) ProtoMessage() {}

func (x *CreateMapelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMapelRequest.ProtoReflect.Descriptor instead.
func (*CreateMapelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{49}
}

func (x *CreateMapelRequest) GetMapel() *Mapel {
	if x != nil {
		return x.Mapel
	}
	return nil
}

func (x *CreateMapelRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

type CreateMapelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMapelResponse) Reset() {
	*x = CreateMapelResponse{}
	mi := &file_sekolah_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMapelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMapelResponse) ProtoMessage() {}

func (x *CreateMapelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMapelResponse.ProtoReflect.Descriptor instead.
func (*CreateMapelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{50}
}

func (x *CreateMapelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateMapelResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateBanyakMapelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	Mapel         []*Mapel               `protobuf:"bytes,2,rep,name=mapel,proto3" json:"mapel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakMapelRequest) Reset() {
	*x = CreateBanyakMapelRequest{}
	mi := &file_sekolah_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakMapelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakMapelRequest) ProtoMessage() {}

func (x *CreateBanyakMapelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakMapelRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakMapelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{51}
}

func (x *CreateBanyakMapelRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateBanyakMapelRequest) GetMapel() []*Mapel {
	if x != nil {
		return x.Mapel
	}
	return nil
}

type CreateBanyakMapelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakMapelResponse) Reset() {
	*x = CreateBanyakMapelResponse{}
	mi := &file_sekolah_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakMapelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakMapelResponse) ProtoMessage() {}

func (x *CreateBanyakMapelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakMapelResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakMapelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{52}
}

func (x *CreateBanyakMapelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakMapelResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetMapelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	MapelId       string                 `protobuf:"bytes,2,opt,name=mapel_id,json=mapelId,proto3" json:"mapel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMapelRequest) Reset() {
	*x = GetMapelRequest{}
	mi := &file_sekolah_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMapelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapelRequest) ProtoMessage() {}

func (x *GetMapelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapelRequest.ProtoReflect.Descriptor instead.
func (*GetMapelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{53}
}

func (x *GetMapelRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *GetMapelRequest) GetMapelId() string {
	if x != nil {
		return x.MapelId
	}
	return ""
}

type GetMapelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mapel         []*Mapel               `protobuf:"bytes,1,rep,name=mapel,proto3" json:"mapel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMapelResponse) Reset() {
	*x = GetMapelResponse{}
	mi := &file_sekolah_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMapelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapelResponse) ProtoMessage() {}

func (x *GetMapelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapelResponse.ProtoReflect.Descriptor instead.
func (*GetMapelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{54}
}

func (x *GetMapelResponse) GetMapel() []*Mapel {
	if x != nil {
		return x.Mapel
	}
	return nil
}

type UpdateMapelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	MapelId       string                 `protobuf:"bytes,2,opt,name=mapel_id,json=mapelId,proto3" json:"mapel_id,omitempty"`
	Mapel         *Mapel                 `protobuf:"bytes,3,opt,name=mapel,proto3" json:"mapel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMapelRequest) Reset() {
	*x = UpdateMapelRequest{}
	mi := &file_sekolah_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMapelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMapelRequest) ProtoMessage() {}

func (x *UpdateMapelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMapelRequest.ProtoReflect.Descriptor instead.
func (*UpdateMapelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{55}
}

func (x *UpdateMapelRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *UpdateMapelRequest) GetMapelId() string {
	if x != nil {
		return x.MapelId
	}
	return ""
}

func (x *UpdateMapelRequest) GetMapel() *Mapel {
	if x != nil {
		return x.Mapel
	}
	return nil
}

type UpdateMapelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMapelResponse) Reset() {
	*x = UpdateMapelResponse{}
	mi := &file_sekolah_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMapelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMapelResponse) ProtoMessage() {}

func (x *UpdateMapelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMapelResponse.ProtoReflect.Descriptor instead.
func (*UpdateMapelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateMapelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateMapelResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteMapelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MapelId       string                 `protobuf:"bytes,1,opt,name=mapel_id,json=mapelId,proto3" json:"mapel_id,omitempty"`
	SchemaName    string                 `protobuf:"bytes,2,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMapelRequest) Reset() {
	*x = DeleteMapelRequest{}
	mi := &file_sekolah_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMapelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMapelRequest) ProtoMessage() {}

func (x *DeleteMapelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMapelRequest.ProtoReflect.Descriptor instead.
func (*DeleteMapelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{57}
}

func (x *DeleteMapelRequest) GetMapelId() string {
	if x != nil {
		return x.MapelId
	}
	return ""
}

func (x *DeleteMapelRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

type DeleteMapelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMapelResponse) Reset() {
	*x = DeleteMapelResponse{}
	mi := &file_sekolah_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMapelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMapelResponse) ProtoMessage() {}

func (x *DeleteMapelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMapelResponse.ProtoReflect.Descriptor instead.
func (*DeleteMapelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteMapelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteMapelResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type NilaiAkhir struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IdNilaiAkhir    string                 `protobuf:"bytes,1,opt,name=id_nilai_akhir,json=idNilaiAkhir,proto3" json:"id_nilai_akhir,omitempty"`
	AnggotaRombelId string                 `protobuf:"bytes,2,opt,name=anggota_rombel_id,json=anggotaRombelId,proto3" json:"anggota_rombel_id,omitempty"`
	MataPelajaranId int32                  `protobuf:"varint,3,opt,name=mata_pelajaran_id,json=mataPelajaranId,proto3" json:"mata_pelajaran_id,omitempty"`
	SemesterId      string                 `protobuf:"bytes,4,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	NilaiPeng       int32                  `protobuf:"varint,5,opt,name=nilai_peng,json=nilaiPeng,proto3" json:"nilai_peng,omitempty"`
	PredikatPeng    string                 `protobuf:"bytes,6,opt,name=predikat_peng,json=predikatPeng,proto3" json:"predikat_peng,omitempty"`
	NilaiKet        int32                  `protobuf:"varint,7,opt,name=nilai_ket,json=nilaiKet,proto3" json:"nilai_ket,omitempty"`
	PredikatKet     string                 `protobuf:"bytes,8,opt,name=predikat_ket,json=predikatKet,proto3" json:"predikat_ket,omitempty"`
	NilaiSik        int32                  `protobuf:"varint,9,opt,name=nilai_sik,json=nilaiSik,proto3" json:"nilai_sik,omitempty"`
	PredikatSik     string                 `protobuf:"bytes,10,opt,name=predikat_sik,json=predikatSik,proto3" json:"predikat_sik,omitempty"`
	NilaiSiksos     int32                  `protobuf:"varint,11,opt,name=nilai_siksos,json=nilaiSiksos,proto3" json:"nilai_siksos,omitempty"`
	PredikatSiksos  string                 `protobuf:"bytes,12,opt,name=predikat_siksos,json=predikatSiksos,proto3" json:"predikat_siksos,omitempty"`
	PesertaDidikId  string                 `protobuf:"bytes,13,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	IdMinat         string                 `protobuf:"bytes,14,opt,name=id_minat,json=idMinat,proto3" json:"id_minat,omitempty"`
	Semester        int32                  `protobuf:"varint,15,opt,name=semester,proto3" json:"semester,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NilaiAkhir) Reset() {
	*x = NilaiAkhir{}
	mi := &file_sekolah_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NilaiAkhir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilaiAkhir) ProtoMessage() {}

func (x *NilaiAkhir) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilaiAkhir.ProtoReflect.Descriptor instead.
func (*NilaiAkhir) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{59}
}

func (x *NilaiAkhir) GetIdNilaiAkhir() string {
	if x != nil {
		return x.IdNilaiAkhir
	}
	return ""
}

func (x *NilaiAkhir) GetAnggotaRombelId() string {
	if x != nil {
		return x.AnggotaRombelId
	}
	return ""
}

func (x *NilaiAkhir) GetMataPelajaranId() int32 {
	if x != nil {
		return x.MataPelajaranId
	}
	return 0
}

func (x *NilaiAkhir) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *NilaiAkhir) GetNilaiPeng() int32 {
	if x != nil {
		return x.NilaiPeng
	}
	return 0
}

func (x *NilaiAkhir) GetPredikatPeng() string {
	if x != nil {
		return x.PredikatPeng
	}
	return ""
}

func (x *NilaiAkhir) GetNilaiKet() int32 {
	if x != nil {
		return x.NilaiKet
	}
	return 0
}

func (x *NilaiAkhir) GetPredikatKet() string {
	if x != nil {
		return x.PredikatKet
	}
	return ""
}

func (x *NilaiAkhir) GetNilaiSik() int32 {
	if x != nil {
		return x.NilaiSik
	}
	return 0
}

func (x *NilaiAkhir) GetPredikatSik() string {
	if x != nil {
		return x.PredikatSik
	}
	return ""
}

func (x *NilaiAkhir) GetNilaiSiksos() int32 {
	if x != nil {
		return x.NilaiSiksos
	}
	return 0
}

func (x *NilaiAkhir) GetPredikatSiksos() string {
	if x != nil {
		return x.PredikatSiksos
	}
	return ""
}

func (x *NilaiAkhir) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *NilaiAkhir) GetIdMinat() string {
	if x != nil {
		return x.IdMinat
	}
	return ""
}

func (x *NilaiAkhir) GetSemester() int32 {
	if x != nil {
		return x.Semester
	}
	return 0
}

type CreateNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	NilaiAkhir    []*NilaiAkhir          `protobuf:"bytes,2,rep,name=nilai_akhir,json=nilaiAkhir,proto3" json:"nilai_akhir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNilaiAkhirRequest) Reset() {
	*x = CreateNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNilaiAkhirRequest) ProtoMessage() {}

func (x *CreateNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*CreateNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{60}
}

func (x *CreateNilaiAkhirRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateNilaiAkhirRequest) GetNilaiAkhir() []*NilaiAkhir {
	if x != nil {
		return x.NilaiAkhir
	}
	return nil
}

type CreateNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNilaiAkhirResponse) Reset() {
	*x = CreateNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNilaiAkhirResponse) ProtoMessage() {}

func (x *CreateNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*CreateNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{61}
}

func (x *CreateNilaiAkhirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateNilaiAkhirResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	IdNilaiAkhir  string                 `protobuf:"bytes,2,opt,name=id_nilai_akhir,json=idNilaiAkhir,proto3" json:"id_nilai_akhir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNilaiAkhirRequest) Reset() {
	*x = GetNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNilaiAkhirRequest) ProtoMessage() {}

func (x *GetNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*GetNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{62}
}

func (x *GetNilaiAkhirRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *GetNilaiAkhirRequest) GetIdNilaiAkhir() string {
	if x != nil {
		return x.IdNilaiAkhir
	}
	return ""
}

type GetNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nilai         []*NilaiAkhir          `protobuf:"bytes,1,rep,name=nilai,proto3" json:"nilai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNilaiAkhirResponse) Reset() {
	*x = GetNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNilaiAkhirResponse) ProtoMessage() {}

func (x *GetNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*GetNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{63}
}

func (x *GetNilaiAkhirResponse) GetNilai() []*NilaiAkhir {
	if x != nil {
		return x.Nilai
	}
	return nil
}

type UpdateNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	IdNilaiAkhir  string                 `protobuf:"bytes,2,opt,name=id_nilai_akhir,json=idNilaiAkhir,proto3" json:"id_nilai_akhir,omitempty"`
	Nilai         *NilaiAkhir            `protobuf:"bytes,3,opt,name=nilai,proto3" json:"nilai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNilaiAkhirRequest) Reset() {
	*x = UpdateNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNilaiAkhirRequest) ProtoMessage() {}

func (x *UpdateNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*UpdateNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateNilaiAkhirRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *UpdateNilaiAkhirRequest) GetIdNilaiAkhir() string {
	if x != nil {
		return x.IdNilaiAkhir
	}
	return ""
}

func (x *UpdateNilaiAkhirRequest) GetNilai() *NilaiAkhir {
	if x != nil {
		return x.Nilai
	}
	return nil
}

type UpdateNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNilaiAkhirResponse) Reset() {
	*x = UpdateNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNilaiAkhirResponse) ProtoMessage() {}

func (x *UpdateNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*UpdateNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateNilaiAkhirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateNilaiAkhirResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	IdNilaiAkhir  string                 `protobuf:"bytes,2,opt,name=id_nilai_akhir,json=idNilaiAkhir,proto3" json:"id_nilai_akhir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNilaiAkhirRequest) Reset() {
	*x = DeleteNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNilaiAkhirRequest) ProtoMessage() {}

func (x *DeleteNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*DeleteNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{66}
}

func (x *DeleteNilaiAkhirRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *DeleteNilaiAkhirRequest) GetIdNilaiAkhir() string {
	if x != nil {
		return x.IdNilaiAkhir
	}
	return ""
}

type DeleteNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNilaiAkhirResponse) Reset() {
	*x = DeleteNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNilaiAkhirResponse) ProtoMessage() {}

func (x *DeleteNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*DeleteNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{67}
}

func (x *DeleteNilaiAkhirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteNilaiAkhirResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Kelas struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RombonganBelajarId  string                 `protobuf:"bytes,1,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	SekolahId           string                 `protobuf:"bytes,2,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	SemesterId          string                 `protobuf:"bytes,3,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	JurusanId           string                 `protobuf:"bytes,4,opt,name=jurusan_id,json=jurusanId,proto3" json:"jurusan_id,omitempty"`
	PtkId               string                 `protobuf:"bytes,5,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	NmKelas             string                 `protobuf:"bytes,6,opt,name=nm_kelas,json=nmKelas,proto3" json:"nm_kelas,omitempty"`
	TingkatPendidikanId int32                  `protobuf:"varint,7,opt,name=tingkat_pendidikan_id,json=tingkatPendidikanId,proto3" json:"tingkat_pendidikan_id,omitempty"`
	JenisRombel         int32                  `protobuf:"varint,8,opt,name=jenis_rombel,json=jenisRombel,proto3" json:"jenis_rombel,omitempty"`
	NamaJurusanSp       string                 `protobuf:"bytes,9,opt,name=nama_jurusan_sp,json=namaJurusanSp,proto3" json:"nama_jurusan_sp,omitempty"`
	JurusanSpId         *string                `protobuf:"bytes,10,opt,name=jurusan_sp_id,json=jurusanSpId,proto3,oneof" json:"jurusan_sp_id,omitempty"`
	KurikulumId         int32                  `protobuf:"varint,11,opt,name=kurikulum_id,json=kurikulumId,proto3" json:"kurikulum_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Kelas) Reset() {
	*x = Kelas{}
	mi := &file_sekolah_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kelas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kelas) ProtoMessage() {}

func (x *Kelas) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kelas.ProtoReflect.Descriptor instead.
func (*Kelas) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{68}
}

func (x *Kelas) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *Kelas) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

func (x *Kelas) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *Kelas) GetJurusanId() string {
	if x != nil {
		return x.JurusanId
	}
	return ""
}

func (x *Kelas) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *Kelas) GetNmKelas() string {
	if x != nil {
		return x.NmKelas
	}
	return ""
}

func (x *Kelas) GetTingkatPendidikanId() int32 {
	if x != nil {
		return x.TingkatPendidikanId
	}
	return 0
}

func (x *Kelas) GetJenisRombel() int32 {
	if x != nil {
		return x.JenisRombel
	}
	return 0
}

func (x *Kelas) GetNamaJurusanSp() string {
	if x != nil {
		return x.NamaJurusanSp
	}
	return ""
}

func (x *Kelas) GetJurusanSpId() string {
	if x != nil && x.JurusanSpId != nil {
		return *x.JurusanSpId
	}
	return ""
}

func (x *Kelas) GetKurikulumId() int32 {
	if x != nil {
		return x.KurikulumId
	}
	return 0
}

type CreateKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	Kelas         *Kelas                 `protobuf:"bytes,2,opt,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKelasRequest) Reset() {
	*x = CreateKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKelasRequest) ProtoMessage() {}

func (x *CreateKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKelasRequest.ProtoReflect.Descriptor instead.
func (*CreateKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{69}
}

func (x *CreateKelasRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateKelasRequest) GetKelas() *Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type CreateKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKelasResponse) Reset() {
	*x = CreateKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKelasResponse) ProtoMessage() {}

func (x *CreateKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKelasResponse.ProtoReflect.Descriptor instead.
func (*CreateKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{70}
}

func (x *CreateKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateBanyakKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	Kelas         []*Kelas               `protobuf:"bytes,2,rep,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakKelasRequest) Reset() {
	*x = CreateBanyakKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakKelasRequest) ProtoMessage() {}

func (x *CreateBanyakKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakKelasRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{71}
}

func (x *CreateBanyakKelasRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateBanyakKelasRequest) GetKelas() []*Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type CreateBanyakKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakKelasResponse) Reset() {
	*x = CreateBanyakKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakKelasResponse) ProtoMessage() {}

func (x *CreateBanyakKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakKelasResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{72}
}

func (x *CreateBanyakKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	SemesterId    string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	KelasId       string                 `protobuf:"bytes,3,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	Limit         *int32                 `protobuf:"varint,5,opt,name=limit,proto3,oneof" json:"limit,omitempty"`   // Batas data per halaman (opsional, default 10)
	Offset        *int32                 `protobuf:"varint,6,opt,name=offset,proto3,oneof" json:"offset,omitempty"` // Posisi data awal (opsional, default 0)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKelasRequest) Reset() {
	*x = GetKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKelasRequest) ProtoMessage() {}

func (x *GetKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKelasRequest.ProtoReflect.Descriptor instead.
func (*GetKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{73}
}

func (x *GetKelasRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *GetKelasRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

func (x *GetKelasRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetKelasRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type GetKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kelas         []*Kelas               `protobuf:"bytes,1,rep,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKelasResponse) Reset() {
	*x = GetKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKelasResponse) ProtoMessage() {}

func (x *GetKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKelasResponse.ProtoReflect.Descriptor instead.
func (*GetKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{74}
}

func (x *GetKelasResponse) GetKelas() []*Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type UpdateKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	KelasId       string                 `protobuf:"bytes,2,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	Kelas         *Kelas                 `protobuf:"bytes,3,opt,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKelasRequest) Reset() {
	*x = UpdateKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKelasRequest) ProtoMessage() {}

func (x *UpdateKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKelasRequest.ProtoReflect.Descriptor instead.
func (*UpdateKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{75}
}

func (x *UpdateKelasRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *UpdateKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

func (x *UpdateKelasRequest) GetKelas() *Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type UpdateKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKelasResponse) Reset() {
	*x = UpdateKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKelasResponse) ProtoMessage() {}

func (x *UpdateKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKelasResponse.ProtoReflect.Descriptor instead.
func (*UpdateKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{76}
}

func (x *UpdateKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	KelasId       string                 `protobuf:"bytes,2,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteKelasRequest) Reset() {
	*x = DeleteKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKelasRequest) ProtoMessage() {}

func (x *DeleteKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKelasRequest.ProtoReflect.Descriptor instead.
func (*DeleteKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{77}
}

func (x *DeleteKelasRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *DeleteKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

type DeleteKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteKelasResponse) Reset() {
	*x = DeleteKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKelasResponse) ProtoMessage() {}

func (x *DeleteKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKelasResponse.ProtoReflect.Descriptor instead.
func (*DeleteKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{78}
}

func (x *DeleteKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type AnggotaKelas struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	AnggotaRombelId    string                 `protobuf:"bytes,1,opt,name=anggota_rombel_id,json=anggotaRombelId,proto3" json:"anggota_rombel_id,omitempty"`
	PesertaDidikId     string                 `protobuf:"bytes,2,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	RombonganBelajarId string                 `protobuf:"bytes,3,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	SemesterId         string                 `protobuf:"bytes,4,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	NmSiswa            *string                `protobuf:"bytes,5,opt,name=nm_siswa,json=nmSiswa,proto3,oneof" json:"nm_siswa,omitempty"`
	NmKelas            *string                `protobuf:"bytes,6,opt,name=nm_kelas,json=nmKelas,proto3,oneof" json:"nm_kelas,omitempty"`
	NmWlKelas          *string                `protobuf:"bytes,7,opt,name=nm_wl_kelas,json=nmWlKelas,proto3,oneof" json:"nm_wl_kelas,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AnggotaKelas) Reset() {
	*x = AnggotaKelas{}
	mi := &file_sekolah_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnggotaKelas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnggotaKelas) ProtoMessage() {}

func (x *AnggotaKelas) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnggotaKelas.ProtoReflect.Descriptor instead.
func (*AnggotaKelas) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{79}
}

func (x *AnggotaKelas) GetAnggotaRombelId() string {
	if x != nil {
		return x.AnggotaRombelId
	}
	return ""
}

func (x *AnggotaKelas) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *AnggotaKelas) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *AnggotaKelas) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *AnggotaKelas) GetNmSiswa() string {
	if x != nil && x.NmSiswa != nil {
		return *x.NmSiswa
	}
	return ""
}

func (x *AnggotaKelas) GetNmKelas() string {
	if x != nil && x.NmKelas != nil {
		return *x.NmKelas
	}
	return ""
}

func (x *AnggotaKelas) GetNmWlKelas() string {
	if x != nil && x.NmWlKelas != nil {
		return *x.NmWlKelas
	}
	return ""
}

type CreateAnggotaKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	AnggotaKelas  *AnggotaKelas          `protobuf:"bytes,2,opt,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAnggotaKelasRequest) Reset() {
	*x = CreateAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnggotaKelasRequest) ProtoMessage() {}

func (x *CreateAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*CreateAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{80}
}

func (x *CreateAnggotaKelasRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateAnggotaKelasRequest) GetAnggotaKelas() *AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type CreateAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAnggotaKelasResponse) Reset() {
	*x = CreateAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnggotaKelasResponse) ProtoMessage() {}

func (x *CreateAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*CreateAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{81}
}

func (x *CreateAnggotaKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAnggotaKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateBanyakAnggotaKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	AnggotaKelas  []*AnggotaKelas        `protobuf:"bytes,2,rep,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakAnggotaKelasRequest) Reset() {
	*x = CreateBanyakAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakAnggotaKelasRequest) ProtoMessage() {}

func (x *CreateBanyakAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{82}
}

func (x *CreateBanyakAnggotaKelasRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateBanyakAnggotaKelasRequest) GetAnggotaKelas() []*AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type CreateBanyakAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakAnggotaKelasResponse) Reset() {
	*x = CreateBanyakAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakAnggotaKelasResponse) ProtoMessage() {}

func (x *CreateBanyakAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{83}
}

func (x *CreateBanyakAnggotaKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakAnggotaKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetAnggotaKelasRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SchemaName         string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	SemesterId         string                 `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id,omitempty"`
	KelasId            string                 `protobuf:"bytes,3,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	RombonganBelajarId string                 `protobuf:"bytes,4,opt,name=rombongan_belajar_id,json=rombonganBelajarId,proto3" json:"rombongan_belajar_id,omitempty"`
	Limit              int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"` // Batas data per halaman (opsional, default 10)
	Offset             int32                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetAnggotaKelasRequest) Reset() {
	*x = GetAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnggotaKelasRequest) ProtoMessage() {}

func (x *GetAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*GetAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{84}
}

func (x *GetAnggotaKelasRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *GetAnggotaKelasRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetAnggotaKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

func (x *GetAnggotaKelasRequest) GetRombonganBelajarId() string {
	if x != nil {
		return x.RombonganBelajarId
	}
	return ""
}

func (x *GetAnggotaKelasRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAnggotaKelasRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AnggotaKelas  []*AnggotaKelas        `protobuf:"bytes,1,rep,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAnggotaKelasResponse) Reset() {
	*x = GetAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnggotaKelasResponse) ProtoMessage() {}

func (x *GetAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*GetAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{85}
}

func (x *GetAnggotaKelasResponse) GetAnggotaKelas() []*AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type UpdateAnggotaKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	KelasId       string                 `protobuf:"bytes,2,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	AnggotaKelas  *AnggotaKelas          `protobuf:"bytes,3,opt,name=anggota_kelas,json=anggotaKelas,proto3" json:"anggota_kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAnggotaKelasRequest) Reset() {
	*x = UpdateAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnggotaKelasRequest) ProtoMessage() {}

func (x *UpdateAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*UpdateAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{86}
}

func (x *UpdateAnggotaKelasRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *UpdateAnggotaKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

func (x *UpdateAnggotaKelasRequest) GetAnggotaKelas() *AnggotaKelas {
	if x != nil {
		return x.AnggotaKelas
	}
	return nil
}

type UpdateAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAnggotaKelasResponse) Reset() {
	*x = UpdateAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnggotaKelasResponse) ProtoMessage() {}

func (x *UpdateAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*UpdateAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{87}
}

func (x *UpdateAnggotaKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateAnggotaKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteAnggotaKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	KelasId       string                 `protobuf:"bytes,2,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAnggotaKelasRequest) Reset() {
	*x = DeleteAnggotaKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAnggotaKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnggotaKelasRequest) ProtoMessage() {}

func (x *DeleteAnggotaKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnggotaKelasRequest.ProtoReflect.Descriptor instead.
func (*DeleteAnggotaKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{88}
}

func (x *DeleteAnggotaKelasRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *DeleteAnggotaKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

type DeleteAnggotaKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAnggotaKelasResponse) Reset() {
	*x = DeleteAnggotaKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAnggotaKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnggotaKelasResponse) ProtoMessage() {}

func (x *DeleteAnggotaKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnggotaKelasResponse.ProtoReflect.Descriptor instead.
func (*DeleteAnggotaKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{89}
}

func (x *DeleteAnggotaKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteAnggotaKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// PTK Structure
type PTK struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PtkId             string                 `protobuf:"bytes,1,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	Nama              string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	Nip               string                 `protobuf:"bytes,3,opt,name=nip,proto3" json:"nip,omitempty"`
	JenisPtkId        int32                  `protobuf:"varint,4,opt,name=jenis_ptk_id,json=jenisPtkId,proto3" json:"jenis_ptk_id,omitempty"`
	JenisKelamin      string                 `protobuf:"bytes,5,opt,name=jenis_kelamin,json=jenisKelamin,proto3" json:"jenis_kelamin,omitempty"`
	TempatLahir       string                 `protobuf:"bytes,6,opt,name=tempat_lahir,json=tempatLahir,proto3" json:"tempat_lahir,omitempty"`
	TanggalLahir      string                 `protobuf:"bytes,7,opt,name=tanggal_lahir,json=tanggalLahir,proto3" json:"tanggal_lahir,omitempty"`
	Nuptk             string                 `protobuf:"bytes,8,opt,name=nuptk,proto3" json:"nuptk,omitempty"`
	AlamatJalan       string                 `protobuf:"bytes,9,opt,name=alamat_jalan,json=alamatJalan,proto3" json:"alamat_jalan,omitempty"`
	StatusKeaktifanId int32                  `protobuf:"varint,10,opt,name=status_keaktifan_id,json=statusKeaktifanId,proto3" json:"status_keaktifan_id,omitempty"`
	SoftDelete        int32                  `protobuf:"varint,11,opt,name=soft_delete,json=softDelete,proto3" json:"soft_delete,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PTK) Reset() {
	*x = PTK{}
	mi := &file_sekolah_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PTK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTK) ProtoMessage() {}

func (x *PTK) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTK.ProtoReflect.Descriptor instead.
func (*PTK) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{90}
}

func (x *PTK) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *PTK) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *PTK) GetNip() string {
	if x != nil {
		return x.Nip
	}
	return ""
}

func (x *PTK) GetJenisPtkId() int32 {
	if x != nil {
		return x.JenisPtkId
	}
	return 0
}

func (x *PTK) GetJenisKelamin() string {
	if x != nil {
		return x.JenisKelamin
	}
	return ""
}

func (x *PTK) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *PTK) GetTanggalLahir() string {
	if x != nil {
		return x.TanggalLahir
	}
	return ""
}

func (x *PTK) GetNuptk() string {
	if x != nil {
		return x.Nuptk
	}
	return ""
}

func (x *PTK) GetAlamatJalan() string {
	if x != nil {
		return x.AlamatJalan
	}
	return ""
}

func (x *PTK) GetStatusKeaktifanId() int32 {
	if x != nil {
		return x.StatusKeaktifanId
	}
	return 0
}

func (x *PTK) GetSoftDelete() int32 {
	if x != nil {
		return x.SoftDelete
	}
	return 0
}

type PTKPelengkap struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PtkPelengkapId string                 `protobuf:"bytes,1,opt,name=ptk_pelengkap_id,json=ptkPelengkapId,proto3" json:"ptk_pelengkap_id,omitempty"`
	PtkId          string                 `protobuf:"bytes,2,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	GelarDepan     string                 `protobuf:"bytes,3,opt,name=gelar_depan,json=gelarDepan,proto3" json:"gelar_depan,omitempty"`
	GelarBelakang  int32                  `protobuf:"varint,4,opt,name=gelar_belakang,json=gelarBelakang,proto3" json:"gelar_belakang,omitempty"`
	NipNiy         string                 `protobuf:"bytes,5,opt,name=nip_niy,json=nipNiy,proto3" json:"nip_niy,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PTKPelengkap) Reset() {
	*x = PTKPelengkap{}
	mi := &file_sekolah_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PTKPelengkap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTKPelengkap) ProtoMessage() {}

func (x *PTKPelengkap) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTKPelengkap.ProtoReflect.Descriptor instead.
func (*PTKPelengkap) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{91}
}

func (x *PTKPelengkap) GetPtkPelengkapId() string {
	if x != nil {
		return x.PtkPelengkapId
	}
	return ""
}

func (x *PTKPelengkap) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *PTKPelengkap) GetGelarDepan() string {
	if x != nil {
		return x.GelarDepan
	}
	return ""
}

func (x *PTKPelengkap) GetGelarBelakang() int32 {
	if x != nil {
		return x.GelarBelakang
	}
	return 0
}

func (x *PTKPelengkap) GetNipNiy() string {
	if x != nil {
		return x.NipNiy
	}
	return ""
}

// Request and Response for CRUD
// PTK CRUD
type CreatePTKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	PTK           *PTK                   `protobuf:"bytes,2,opt,name=PTK,proto3" json:"PTK,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePTKRequest) Reset() {
	*x = CreatePTKRequest{}
	mi := &file_sekolah_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePTKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePTKRequest) ProtoMessage() {}

func (x *CreatePTKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePTKRequest.ProtoReflect.Descriptor instead.
func (*CreatePTKRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{92}
}

func (x *CreatePTKRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreatePTKRequest) GetPTK() *PTK {
	if x != nil {
		return x.PTK
	}
	return nil
}

type CreatePTKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePTKResponse) Reset() {
	*x = CreatePTKResponse{}
	mi := &file_sekolah_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePTKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePTKResponse) ProtoMessage() {}

func (x *CreatePTKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePTKResponse.ProtoReflect.Descriptor instead.
func (*CreatePTKResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{93}
}

func (x *CreatePTKResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreatePTKResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetPTKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	PTKId         string                 `protobuf:"bytes,2,opt,name=PTK_id,json=PTKId,proto3" json:"PTK_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPTKRequest) Reset() {
	*x = GetPTKRequest{}
	mi := &file_sekolah_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPTKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPTKRequest) ProtoMessage() {}

func (x *GetPTKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPTKRequest.ProtoReflect.Descriptor instead.
func (*GetPTKRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{94}
}

func (x *GetPTKRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *GetPTKRequest) GetPTKId() string {
	if x != nil {
		return x.PTKId
	}
	return ""
}

type GetPTKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PTK           *PTK                   `protobuf:"bytes,1,opt,name=PTK,proto3" json:"PTK,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPTKResponse) Reset() {
	*x = GetPTKResponse{}
	mi := &file_sekolah_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPTKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPTKResponse) ProtoMessage() {}

func (x *GetPTKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPTKResponse.ProtoReflect.Descriptor instead.
func (*GetPTKResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{95}
}

func (x *GetPTKResponse) GetPTK() *PTK {
	if x != nil {
		return x.PTK
	}
	return nil
}

type UpdatePTKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	PTKId         string                 `protobuf:"bytes,2,opt,name=PTK_id,json=PTKId,proto3" json:"PTK_id,omitempty"`
	PTK           *PTK                   `protobuf:"bytes,3,opt,name=PTK,proto3" json:"PTK,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePTKRequest) Reset() {
	*x = UpdatePTKRequest{}
	mi := &file_sekolah_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePTKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePTKRequest) ProtoMessage() {}

func (x *UpdatePTKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePTKRequest.ProtoReflect.Descriptor instead.
func (*UpdatePTKRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{96}
}

func (x *UpdatePTKRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *UpdatePTKRequest) GetPTKId() string {
	if x != nil {
		return x.PTKId
	}
	return ""
}

func (x *UpdatePTKRequest) GetPTK() *PTK {
	if x != nil {
		return x.PTK
	}
	return nil
}

type UpdatePTKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePTKResponse) Reset() {
	*x = UpdatePTKResponse{}
	mi := &file_sekolah_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePTKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePTKResponse) ProtoMessage() {}

func (x *UpdatePTKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePTKResponse.ProtoReflect.Descriptor instead.
func (*UpdatePTKResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{97}
}

func (x *UpdatePTKResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdatePTKResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeletePTKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	PTKId         string                 `protobuf:"bytes,2,opt,name=PTK_id,json=PTKId,proto3" json:"PTK_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePTKRequest) Reset() {
	*x = DeletePTKRequest{}
	mi := &file_sekolah_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePTKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePTKRequest) ProtoMessage() {}

func (x *DeletePTKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePTKRequest.ProtoReflect.Descriptor instead.
func (*DeletePTKRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{98}
}

func (x *DeletePTKRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *DeletePTKRequest) GetPTKId() string {
	if x != nil {
		return x.PTKId
	}
	return ""
}

type DeletePTKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePTKResponse) Reset() {
	*x = DeletePTKResponse{}
	mi := &file_sekolah_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePTKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePTKResponse) ProtoMessage() {}

func (x *DeletePTKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePTKResponse.ProtoReflect.Descriptor instead.
func (*DeletePTKResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{99}
}

func (x *DeletePTKResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeletePTKResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type PTKTerdaftar struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PtkTerdaftarId string                 `protobuf:"bytes,1,opt,name=ptk_terdaftar_id,json=ptkTerdaftarId,proto3" json:"ptk_terdaftar_id,omitempty"`
	PtkId          string                 `protobuf:"bytes,2,opt,name=ptk_id,json=ptkId,proto3" json:"ptk_id,omitempty"`
	TahunAjaranId  string                 `protobuf:"bytes,3,opt,name=tahun_ajaran_id,json=tahunAjaranId,proto3" json:"tahun_ajaran_id,omitempty"`
	JenisKeluarId  string                 `protobuf:"bytes,4,opt,name=jenis_keluar_id,json=jenisKeluarId,proto3" json:"jenis_keluar_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PTKTerdaftar) Reset() {
	*x = PTKTerdaftar{}
	mi := &file_sekolah_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PTKTerdaftar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTKTerdaftar) ProtoMessage() {}

func (x *PTKTerdaftar) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTKTerdaftar.ProtoReflect.Descriptor instead.
func (*PTKTerdaftar) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{100}
}

func (x *PTKTerdaftar) GetPtkTerdaftarId() string {
	if x != nil {
		return x.PtkTerdaftarId
	}
	return ""
}

func (x *PTKTerdaftar) GetPtkId() string {
	if x != nil {
		return x.PtkId
	}
	return ""
}

func (x *PTKTerdaftar) GetTahunAjaranId() string {
	if x != nil {
		return x.TahunAjaranId
	}
	return ""
}

func (x *PTKTerdaftar) GetJenisKeluarId() string {
	if x != nil {
		return x.JenisKeluarId
	}
	return ""
}

type CreatePTKTerdaftarRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	PTKTerdaftar  *PTKTerdaftar          `protobuf:"bytes,2,opt,name=PTKTerdaftar,proto3" json:"PTKTerdaftar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePTKTerdaftarRequest) Reset() {
	*x = CreatePTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePTKTerdaftarRequest) ProtoMessage() {}

func (x *CreatePTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*CreatePTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{101}
}

func (x *CreatePTKTerdaftarRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreatePTKTerdaftarRequest) GetPTKTerdaftar() *PTKTerdaftar {
	if x != nil {
		return x.PTKTerdaftar
	}
	return nil
}

type CreatePTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePTKTerdaftarResponse) Reset() {
	*x = CreatePTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePTKTerdaftarResponse) ProtoMessage() {}

func (x *CreatePTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*CreatePTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{102}
}

func (x *CreatePTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreatePTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateBanyakPTKTerdaftarRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	PtkTerdaftar  []*PTKTerdaftar        `protobuf:"bytes,2,rep,name=ptk_terdaftar,json=ptkTerdaftar,proto3" json:"ptk_terdaftar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakPTKTerdaftarRequest) Reset() {
	*x = CreateBanyakPTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakPTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakPTKTerdaftarRequest) ProtoMessage() {}

func (x *CreateBanyakPTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakPTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakPTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{103}
}

func (x *CreateBanyakPTKTerdaftarRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateBanyakPTKTerdaftarRequest) GetPtkTerdaftar() []*PTKTerdaftar {
	if x != nil {
		return x.PtkTerdaftar
	}
	return nil
}

type CreateBanyakPTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakPTKTerdaftarResponse) Reset() {
	*x = CreateBanyakPTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakPTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakPTKTerdaftarResponse) ProtoMessage() {}

func (x *CreateBanyakPTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakPTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakPTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{104}
}

func (x *CreateBanyakPTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakPTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetPTKTerdaftarRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SchemaName     string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	PtkTerdaftarId string                 `protobuf:"bytes,2,opt,name=ptk_terdaftar_id,json=ptkTerdaftarId,proto3" json:"ptk_terdaftar_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPTKTerdaftarRequest) Reset() {
	*x = GetPTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPTKTerdaftarRequest) ProtoMessage() {}

func (x *GetPTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*GetPTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{105}
}

func (x *GetPTKTerdaftarRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *GetPTKTerdaftarRequest) GetPtkTerdaftarId() string {
	if x != nil {
		return x.PtkTerdaftarId
	}
	return ""
}

type GetPTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PtkTerdaftar  []*PTKTerdaftar        `protobuf:"bytes,1,rep,name=ptk_terdaftar,json=ptkTerdaftar,proto3" json:"ptk_terdaftar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPTKTerdaftarResponse) Reset() {
	*x = GetPTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPTKTerdaftarResponse) ProtoMessage() {}

func (x *GetPTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*GetPTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{106}
}

func (x *GetPTKTerdaftarResponse) GetPtkTerdaftar() []*PTKTerdaftar {
	if x != nil {
		return x.PtkTerdaftar
	}
	return nil
}

type UpdatePTKTerdaftarRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SchemaName     string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	PtkTerdaftarId string                 `protobuf:"bytes,2,opt,name=ptk_terdaftar_id,json=ptkTerdaftarId,proto3" json:"ptk_terdaftar_id,omitempty"`
	PTKTerdaftar   *PTKTerdaftar          `protobuf:"bytes,3,opt,name=PTKTerdaftar,proto3" json:"PTKTerdaftar,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdatePTKTerdaftarRequest) Reset() {
	*x = UpdatePTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePTKTerdaftarRequest) ProtoMessage() {}

func (x *UpdatePTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*UpdatePTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{107}
}

func (x *UpdatePTKTerdaftarRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *UpdatePTKTerdaftarRequest) GetPtkTerdaftarId() string {
	if x != nil {
		return x.PtkTerdaftarId
	}
	return ""
}

func (x *UpdatePTKTerdaftarRequest) GetPTKTerdaftar() *PTKTerdaftar {
	if x != nil {
		return x.PTKTerdaftar
	}
	return nil
}

type UpdatePTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePTKTerdaftarResponse) Reset() {
	*x = UpdatePTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePTKTerdaftarResponse) ProtoMessage() {}

func (x *UpdatePTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*UpdatePTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{108}
}

func (x *UpdatePTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdatePTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeletePTKTerdaftarRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SchemaName     string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	PtkTerdaftarId string                 `protobuf:"bytes,2,opt,name=ptk_terdaftar_id,json=ptkTerdaftarId,proto3" json:"ptk_terdaftar_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeletePTKTerdaftarRequest) Reset() {
	*x = DeletePTKTerdaftarRequest{}
	mi := &file_sekolah_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePTKTerdaftarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePTKTerdaftarRequest) ProtoMessage() {}

func (x *DeletePTKTerdaftarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePTKTerdaftarRequest.ProtoReflect.Descriptor instead.
func (*DeletePTKTerdaftarRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{109}
}

func (x *DeletePTKTerdaftarRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *DeletePTKTerdaftarRequest) GetPtkTerdaftarId() string {
	if x != nil {
		return x.PtkTerdaftarId
	}
	return ""
}

type DeletePTKTerdaftarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePTKTerdaftarResponse) Reset() {
	*x = DeletePTKTerdaftarResponse{}
	mi := &file_sekolah_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePTKTerdaftarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePTKTerdaftarResponse) ProtoMessage() {}

func (x *DeletePTKTerdaftarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePTKTerdaftarResponse.ProtoReflect.Descriptor instead.
func (*DeletePTKTerdaftarResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{110}
}

func (x *DeletePTKTerdaftarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeletePTKTerdaftarResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Ijazah struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	ID                          string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PesertaDidikId              string                 `protobuf:"bytes,2,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	Nama                        string                 `protobuf:"bytes,3,opt,name=nama,proto3" json:"nama,omitempty"`
	Nis                         string                 `protobuf:"bytes,4,opt,name=nis,proto3" json:"nis,omitempty"`
	Nisn                        string                 `protobuf:"bytes,5,opt,name=nisn,proto3" json:"nisn,omitempty"`
	Npsn                        string                 `protobuf:"bytes,6,opt,name=npsn,proto3" json:"npsn,omitempty"`
	NomorIjazah                 string                 `protobuf:"bytes,7,opt,name=nomor_ijazah,json=nomorIjazah,proto3" json:"nomor_ijazah,omitempty"`
	TempatLahir                 string                 `protobuf:"bytes,8,opt,name=tempat_lahir,json=tempatLahir,proto3" json:"tempat_lahir,omitempty"`
	TanggalLahir                string                 `protobuf:"bytes,9,opt,name=tanggal_lahir,json=tanggalLahir,proto3" json:"tanggal_lahir,omitempty"`
	NamaOrtuwali                string                 `protobuf:"bytes,10,opt,name=nama_ortuwali,json=namaOrtuwali,proto3" json:"nama_ortuwali,omitempty"`
	PaketKeahlian               string                 `protobuf:"bytes,11,opt,name=paket_keahlian,json=paketKeahlian,proto3" json:"paket_keahlian,omitempty"`
	Kabupatenkota               string                 `protobuf:"bytes,12,opt,name=kabupatenkota,proto3" json:"kabupatenkota,omitempty"`
	Provinsi                    string                 `protobuf:"bytes,13,opt,name=provinsi,proto3" json:"provinsi,omitempty"`
	ProgramKeahlian             string                 `protobuf:"bytes,14,opt,name=program_keahlian,json=programKeahlian,proto3" json:"program_keahlian,omitempty"`
	SekolahPenyelenggaraUjianUs string                 `protobuf:"bytes,15,opt,name=sekolah_penyelenggara_ujian_us,json=sekolahPenyelenggaraUjianUs,proto3" json:"sekolah_penyelenggara_ujian_us,omitempty"`
	SekolahPenyelenggaraUjianUn string                 `protobuf:"bytes,16,opt,name=sekolah_penyelenggara_ujian_un,json=sekolahPenyelenggaraUjianUn,proto3" json:"sekolah_penyelenggara_ujian_un,omitempty"`
	AsalSekolah                 string                 `protobuf:"bytes,17,opt,name=asal_sekolah,json=asalSekolah,proto3" json:"asal_sekolah,omitempty"`
	TempatIjazah                string                 `protobuf:"bytes,18,opt,name=tempat_ijazah,json=tempatIjazah,proto3" json:"tempat_ijazah,omitempty"`
	TanggalIjazah               string                 `protobuf:"bytes,19,opt,name=tanggal_ijazah,json=tanggalIjazah,proto3" json:"tanggal_ijazah,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Ijazah) Reset() {
	*x = Ijazah{}
	mi := &file_sekolah_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ijazah) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ijazah) ProtoMessage() {}

func (x *Ijazah) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ijazah.ProtoReflect.Descriptor instead.
func (*Ijazah) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{111}
}

func (x *Ijazah) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Ijazah) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *Ijazah) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *Ijazah) GetNis() string {
	if x != nil {
		return x.Nis
	}
	return ""
}

func (x *Ijazah) GetNisn() string {
	if x != nil {
		return x.Nisn
	}
	return ""
}

func (x *Ijazah) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *Ijazah) GetNomorIjazah() string {
	if x != nil {
		return x.NomorIjazah
	}
	return ""
}

func (x *Ijazah) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *Ijazah) GetTanggalLahir() string {
	if x != nil {
		return x.TanggalLahir
	}
	return ""
}

func (x *Ijazah) GetNamaOrtuwali() string {
	if x != nil {
		return x.NamaOrtuwali
	}
	return ""
}

func (x *Ijazah) GetPaketKeahlian() string {
	if x != nil {
		return x.PaketKeahlian
	}
	return ""
}

func (x *Ijazah) GetKabupatenkota() string {
	if x != nil {
		return x.Kabupatenkota
	}
	return ""
}

func (x *Ijazah) GetProvinsi() string {
	if x != nil {
		return x.Provinsi
	}
	return ""
}

func (x *Ijazah) GetProgramKeahlian() string {
	if x != nil {
		return x.ProgramKeahlian
	}
	return ""
}

func (x *Ijazah) GetSekolahPenyelenggaraUjianUs() string {
	if x != nil {
		return x.SekolahPenyelenggaraUjianUs
	}
	return ""
}

func (x *Ijazah) GetSekolahPenyelenggaraUjianUn() string {
	if x != nil {
		return x.SekolahPenyelenggaraUjianUn
	}
	return ""
}

func (x *Ijazah) GetAsalSekolah() string {
	if x != nil {
		return x.AsalSekolah
	}
	return ""
}

func (x *Ijazah) GetTempatIjazah() string {
	if x != nil {
		return x.TempatIjazah
	}
	return ""
}

func (x *Ijazah) GetTanggalIjazah() string {
	if x != nil {
		return x.TanggalIjazah
	}
	return ""
}

type CreateIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	Ijazah        *Ijazah                `protobuf:"bytes,2,opt,name=ijazah,proto3" json:"ijazah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIjazahRequest) Reset() {
	*x = CreateIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIjazahRequest) ProtoMessage() {}

func (x *CreateIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIjazahRequest.ProtoReflect.Descriptor instead.
func (*CreateIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{112}
}

func (x *CreateIjazahRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateIjazahRequest) GetIjazah() *Ijazah {
	if x != nil {
		return x.Ijazah
	}
	return nil
}

type CreateIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIjazahResponse) Reset() {
	*x = CreateIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIjazahResponse) ProtoMessage() {}

func (x *CreateIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIjazahResponse.ProtoReflect.Descriptor instead.
func (*CreateIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{113}
}

func (x *CreateIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateBanyakIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	Ijazah        []*Ijazah              `protobuf:"bytes,2,rep,name=ijazah,proto3" json:"ijazah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakIjazahRequest) Reset() {
	*x = CreateBanyakIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakIjazahRequest) ProtoMessage() {}

func (x *CreateBanyakIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakIjazahRequest.ProtoReflect.Descriptor instead.
func (*CreateBanyakIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{114}
}

func (x *CreateBanyakIjazahRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *CreateBanyakIjazahRequest) GetIjazah() []*Ijazah {
	if x != nil {
		return x.Ijazah
	}
	return nil
}

type CreateBanyakIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBanyakIjazahResponse) Reset() {
	*x = CreateBanyakIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBanyakIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBanyakIjazahResponse) ProtoMessage() {}

func (x *CreateBanyakIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBanyakIjazahResponse.ProtoReflect.Descriptor instead.
func (*CreateBanyakIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{115}
}

func (x *CreateBanyakIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBanyakIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaName    string                 `protobuf:"bytes,1,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	IjazahId      string                 `protobuf:"bytes,2,opt,name=ijazah_id,json=ijazahId,proto3" json:"ijazah_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIjazahRequest) Reset() {
	*x = GetIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIjazahRequest) ProtoMessage() {}

func (x *GetIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIjazahRequest.ProtoReflect.Descriptor instead.
func (*GetIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{116}
}

func (x *GetIjazahRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *GetIjazahRequest) GetIjazahId() string {
	if x != nil {
		return x.IjazahId
	}
	return ""
}

type GetIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ijazah        []*Ijazah              `protobuf:"bytes,1,rep,name=ijazah,proto3" json:"ijazah,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIjazahResponse) Reset() {
	*x = GetIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIjazahResponse) ProtoMessage() {}

func (x *GetIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIjazahResponse.ProtoReflect.Descriptor instead.
func (*GetIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{117}
}

func (x *GetIjazahResponse) GetIjazah() []*Ijazah {
	if x != nil {
		return x.Ijazah
	}
	return nil
}

func (x *GetIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ijazah        *Ijazah                `protobuf:"bytes,1,opt,name=ijazah,proto3" json:"ijazah,omitempty"`
	SchemaName    string                 `protobuf:"bytes,2,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateIjazahRequest) Reset() {
	*x = UpdateIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIjazahRequest) ProtoMessage() {}

func (x *UpdateIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIjazahRequest.ProtoReflect.Descriptor instead.
func (*UpdateIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{118}
}

func (x *UpdateIjazahRequest) GetIjazah() *Ijazah {
	if x != nil {
		return x.Ijazah
	}
	return nil
}

func (x *UpdateIjazahRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

type UpdateIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateIjazahResponse) Reset() {
	*x = UpdateIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIjazahResponse) ProtoMessage() {}

func (x *UpdateIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIjazahResponse.ProtoReflect.Descriptor instead.
func (*UpdateIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{119}
}

func (x *UpdateIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IjazahId      string                 `protobuf:"bytes,1,opt,name=ijazah_id,json=ijazahId,proto3" json:"ijazah_id,omitempty"`
	SchemaName    string                 `protobuf:"bytes,2,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIjazahRequest) Reset() {
	*x = DeleteIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIjazahRequest) ProtoMessage() {}

func (x *DeleteIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIjazahRequest.ProtoReflect.Descriptor instead.
func (*DeleteIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{120}
}

func (x *DeleteIjazahRequest) GetIjazahId() string {
	if x != nil {
		return x.IjazahId
	}
	return ""
}

func (x *DeleteIjazahRequest) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

type DeleteIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIjazahResponse) Reset() {
	*x = DeleteIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIjazahResponse) ProtoMessage() {}

func (x *DeleteIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIjazahResponse.ProtoReflect.Descriptor instead.
func (*DeleteIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{121}
}

func (x *DeleteIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UploadIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IjazahFile    []byte                 `protobuf:"bytes,1,opt,name=ijazah_file,json=ijazahFile,proto3" json:"ijazah_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadIjazahRequest) Reset() {
	*x = UploadIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadIjazahRequest) ProtoMessage() {}

func (x *UploadIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadIjazahRequest.ProtoReflect.Descriptor instead.
func (*UploadIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{122}
}

func (x *UploadIjazahRequest) GetIjazahFile() []byte {
	if x != nil {
		return x.IjazahFile
	}
	return nil
}

type UploadIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadIjazahResponse) Reset() {
	*x = UploadIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadIjazahResponse) ProtoMessage() {}

func (x *UploadIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadIjazahResponse.ProtoReflect.Descriptor instead.
func (*UploadIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{123}
}

func (x *UploadIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UploadIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// TRANSKRIP
type TranskripNilai struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PesertaDidikId string                 `protobuf:"bytes,1,opt,name=peserta_didik_id,json=pesertaDidikId,proto3" json:"peserta_didik_id,omitempty"`
	MapelId        string                 `protobuf:"bytes,2,opt,name=mapel_id,json=mapelId,proto3" json:"mapel_id,omitempty"`
	Nilai          int32                  `protobuf:"varint,3,opt,name=nilai,proto3" json:"nilai,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TranskripNilai) Reset() {
	*x = TranskripNilai{}
	mi := &file_sekolah_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranskripNilai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranskripNilai) ProtoMessage() {}

func (x *TranskripNilai) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranskripNilai.ProtoReflect.Descriptor instead.
func (*TranskripNilai) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{124}
}

func (x *TranskripNilai) GetPesertaDidikId() string {
	if x != nil {
		return x.PesertaDidikId
	}
	return ""
}

func (x *TranskripNilai) GetMapelId() string {
	if x != nil {
		return x.MapelId
	}
	return ""
}

func (x *TranskripNilai) GetNilai() int32 {
	if x != nil {
		return x.Nilai
	}
	return 0
}

type CreateTranskripNilaiRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TranskripNilai []*TranskripNilai      `protobuf:"bytes,1,rep,name=transkrip_nilai,json=transkripNilai,proto3" json:"transkrip_nilai,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateTranskripNilaiRequest) Reset() {
	*x = CreateTranskripNilaiRequest{}
	mi := &file_sekolah_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTranskripNilaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTranskripNilaiRequest) ProtoMessage() {}

func (x *CreateTranskripNilaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTranskripNilaiRequest.ProtoReflect.Descriptor instead.
func (*CreateTranskripNilaiRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{125}
}

func (x *CreateTranskripNilaiRequest) GetTranskripNilai() []*TranskripNilai {
	if x != nil {
		return x.TranskripNilai
	}
	return nil
}

type CreateTranskripNilaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTranskripNilaiResponse) Reset() {
	*x = CreateTranskripNilaiResponse{}
	mi := &file_sekolah_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTranskripNilaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTranskripNilaiResponse) ProtoMessage() {}

func (x *CreateTranskripNilaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTranskripNilaiResponse.ProtoReflect.Descriptor instead.
func (*CreateTranskripNilaiResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{126}
}

func (x *CreateTranskripNilaiResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateTranskripNilaiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTranskripNilaiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TranskripNilaiId string                 `protobuf:"bytes,1,opt,name=transkrip_nilai_id,json=transkripNilaiId,proto3" json:"transkrip_nilai_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetTranskripNilaiRequest) Reset() {
	*x = GetTranskripNilaiRequest{}
	mi := &file_sekolah_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranskripNilaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranskripNilaiRequest) ProtoMessage() {}

func (x *GetTranskripNilaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranskripNilaiRequest.ProtoReflect.Descriptor instead.
func (*GetTranskripNilaiRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{127}
}

func (x *GetTranskripNilaiRequest) GetTranskripNilaiId() string {
	if x != nil {
		return x.TranskripNilaiId
	}
	return ""
}

type GetTranskripNilaiResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TranskripNilai []*TranskripNilai      `protobuf:"bytes,1,rep,name=transkrip_nilai,json=transkripNilai,proto3" json:"transkrip_nilai,omitempty"`
	Status         bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message        string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetTranskripNilaiResponse) Reset() {
	*x = GetTranskripNilaiResponse{}
	mi := &file_sekolah_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranskripNilaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranskripNilaiResponse) ProtoMessage() {}

func (x *GetTranskripNilaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranskripNilaiResponse.ProtoReflect.Descriptor instead.
func (*GetTranskripNilaiResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{128}
}

func (x *GetTranskripNilaiResponse) GetTranskripNilai() []*TranskripNilai {
	if x != nil {
		return x.TranskripNilai
	}
	return nil
}

func (x *GetTranskripNilaiResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetTranskripNilaiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateTranskripNilaiRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TranskripNilai *TranskripNilai        `protobuf:"bytes,1,opt,name=transkrip_nilai,json=transkripNilai,proto3" json:"transkrip_nilai,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateTranskripNilaiRequest) Reset() {
	*x = UpdateTranskripNilaiRequest{}
	mi := &file_sekolah_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTranskripNilaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTranskripNilaiRequest) ProtoMessage() {}

func (x *UpdateTranskripNilaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTranskripNilaiRequest.ProtoReflect.Descriptor instead.
func (*UpdateTranskripNilaiRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{129}
}

func (x *UpdateTranskripNilaiRequest) GetTranskripNilai() *TranskripNilai {
	if x != nil {
		return x.TranskripNilai
	}
	return nil
}

type UpdateTranskripNilaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTranskripNilaiResponse) Reset() {
	*x = UpdateTranskripNilaiResponse{}
	mi := &file_sekolah_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTranskripNilaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTranskripNilaiResponse) ProtoMessage() {}

func (x *UpdateTranskripNilaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTranskripNilaiResponse.ProtoReflect.Descriptor instead.
func (*UpdateTranskripNilaiResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{130}
}

func (x *UpdateTranskripNilaiResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateTranskripNilaiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTranskripNilaiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TranskripNilaiId uint64                 `protobuf:"varint,1,opt,name=transkrip_nilai_id,json=transkripNilaiId,proto3" json:"transkrip_nilai_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteTranskripNilaiRequest) Reset() {
	*x = DeleteTranskripNilaiRequest{}
	mi := &file_sekolah_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTranskripNilaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTranskripNilaiRequest) ProtoMessage() {}

func (x *DeleteTranskripNilaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTranskripNilaiRequest.ProtoReflect.Descriptor instead.
func (*DeleteTranskripNilaiRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{131}
}

func (x *DeleteTranskripNilaiRequest) GetTranskripNilaiId() uint64 {
	if x != nil {
		return x.TranskripNilaiId
	}
	return 0
}

type DeleteTranskripNilaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTranskripNilaiResponse) Reset() {
	*x = DeleteTranskripNilaiResponse{}
	mi := &file_sekolah_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTranskripNilaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTranskripNilaiResponse) ProtoMessage() {}

func (x *DeleteTranskripNilaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTranskripNilaiResponse.ProtoReflect.Descriptor instead.
func (*DeleteTranskripNilaiResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{132}
}

func (x *DeleteTranskripNilaiResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DeleteTranskripNilaiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UploadTranskripNilaiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TranskripFile []byte                 `protobuf:"bytes,1,opt,name=transkrip_file,json=transkripFile,proto3" json:"transkrip_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadTranskripNilaiRequest) Reset() {
	*x = UploadTranskripNilaiRequest{}
	mi := &file_sekolah_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadTranskripNilaiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadTranskripNilaiRequest) ProtoMessage() {}

func (x *UploadTranskripNilaiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadTranskripNilaiRequest.ProtoReflect.Descriptor instead.
func (*UploadTranskripNilaiRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{133}
}

func (x *UploadTranskripNilaiRequest) GetTranskripFile() []byte {
	if x != nil {
		return x.TranskripFile
	}
	return nil
}

type UploadTranskripNilaiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadTranskripNilaiResponse) Reset() {
	*x = UploadTranskripNilaiResponse{}
	mi := &file_sekolah_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadTranskripNilaiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadTranskripNilaiResponse) ProtoMessage() {}

func (x *UploadTranskripNilaiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadTranskripNilaiResponse.ProtoReflect.Descriptor instead.
func (*UploadTranskripNilaiResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{134}
}

func (x *UploadTranskripNilaiResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UploadTranskripNilaiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_sekolah_proto protoreflect.FileDescriptor

var file_sekolah_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f,
	0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6b,
	0x74, 0x69, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x65, 0x41, 0x6b, 0x74, 0x69, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67,
	0x61, 0x6c, 0x5f, 0x6d, 0x75, 0x6c, 0x61, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x61, 0x69, 0x12, 0x27, 0x0a, 0x0f,
	0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x61, 0x69, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x53, 0x65,
	0x6c, 0x65, 0x73, 0x61, 0x69, 0x22, 0x74, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x0b,
	0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x22, 0x4d, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x51, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61,
	0x6e, 0x52, 0x0b, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x22, 0x74,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61,
	0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74,
	0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x61, 0x68, 0x75,
	0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x0b, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x22, 0x4d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x63, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x68,
	0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x87, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6b, 0x74, 0x69, 0x66, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x65, 0x41, 0x6b,
	0x74, 0x69, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x6d,
	0x75, 0x6c, 0x61, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x61, 0x69, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x61, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x73, 0x61,
	0x69, 0x22, 0x6e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68,
	0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49,
	0x64, 0x22, 0x4a, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x46, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x22, 0x4a, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xfd, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x5f, 0x65, 0x6e,
	0x6b, 0x72, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x49, 0x64, 0x45, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6b,
	0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x61, 0x62,
	0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x61,
	0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x69,
	0x6e, 0x73, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x69,
	0x6e, 0x73, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x63, 0x61,
	0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x6f, 0x64,
	0x65, 0x4b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x6f,
	0x64, 0x65, 0x5f, 0x6b, 0x61, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x6f,
	0x64, 0x65, 0x4b, 0x61, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x61,
	0x6d, 0x61, 0x74, 0x5f, 0x6a, 0x61, 0x6c, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x4a, 0x61, 0x6c, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xe5, 0x04, 0x0a, 0x0b, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x44, 0x61, 0x70, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x5f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x70, 0x73, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x64, 0x5f, 0x70, 0x6f, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x64, 0x50, 0x6f, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x78, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x61, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x6c,
	0x75, 0x72, 0x61, 0x68, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65,
	0x6c, 0x75, 0x72, 0x61, 0x68, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d,
	0x61, 0x74, 0x61, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x63, 0x61,
	0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x61, 0x62, 0x5f, 0x6b, 0x6f, 0x74,
	0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x61, 0x62, 0x4b, 0x6f, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x6d, 0x5f, 0x6b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x6d, 0x4b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x69, 0x70,
	0x5f, 0x6b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x69, 0x70, 0x4b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x69, 0x79, 0x5f,
	0x6b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x69,
	0x79, 0x4b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65,
	0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6b,
	0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x73, 0x69, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6b, 0x6f, 0x64, 0x65, 0x41, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x73, 0x69,
	0x12, 0x18, 0x0a, 0x07, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x65,
	0x6e, 0x74, 0x75, 0x6b, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x65, 0x6e, 0x74, 0x75, 0x6b,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x13,
	0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x22,
	0x48, 0x0a, 0x14, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4d, 0x0a, 0x0d, 0x53, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5b, 0x0a, 0x19, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x54, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x1a, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x61, 0x62,
	0x65, 0x6c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x07,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x44,
	0x61, 0x70, 0x6f, 0x52, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x22, 0x49, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x53, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x44, 0x61, 0x70, 0x6f, 0x52, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x22, 0xa4, 0x04, 0x0a, 0x05, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x28, 0x0a, 0x10,
	0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44,
	0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x73, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x73, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x6d, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x6d, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x61,
	0x74, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x65, 0x6d, 0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61,
	0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x6d, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x65, 0x6c,
	0x61, 0x6d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x61, 0x6d, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x67, 0x61, 0x6d, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c,
	0x61, 0x6d, 0x61, 0x74, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x53, 0x69, 0x73,
	0x77, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x5f, 0x74,
	0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6d, 0x5f, 0x61, 0x79, 0x61, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6d, 0x41, 0x79, 0x61, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x6d, 0x5f, 0x69, 0x62, 0x75,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6d, 0x49, 0x62, 0x75, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x5f, 0x61, 0x79, 0x61, 0x68, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e,
	0x41, 0x79, 0x61, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61,
	0x6e, 0x5f, 0x69, 0x62, 0x75, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x6b,
	0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x49, 0x62, 0x75, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6d, 0x5f,
	0x77, 0x61, 0x6c, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6d, 0x57, 0x61,
	0x6c, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x5f,
	0x77, 0x61, 0x6c, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x6b, 0x65,
	0x72, 0x6a, 0x61, 0x61, 0x6e, 0x57, 0x61, 0x6c, 0x69, 0x22, 0x9c, 0x03, 0x0a, 0x0e, 0x53, 0x69,
	0x73, 0x77, 0x61, 0x50, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x12, 0x2c, 0x0a, 0x12,
	0x70, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x65, 0x6c, 0x65, 0x6e, 0x67,
	0x6b, 0x61, 0x70, 0x53, 0x69, 0x73, 0x77, 0x61, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65,
	0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64,
	0x69, 0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64,
	0x61, 0x6c, 0x61, 0x6d, 0x5f, 0x6b, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x6c, 0x61, 0x6d, 0x4b, 0x65, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x6e, 0x61, 0x6b, 0x5f, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6e, 0x61, 0x6b, 0x4b, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x5f, 0x61, 0x73, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x41, 0x73, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x6f, 0x72, 0x74, 0x75,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x4f, 0x72,
	0x74, 0x75, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x5f, 0x6f, 0x72,
	0x74, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x6e, 0x4f, 0x72, 0x74, 0x75, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f,
	0x77, 0x61, 0x6c, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x61, 0x6d,
	0x61, 0x74, 0x57, 0x61, 0x6c, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x6e, 0x5f, 0x77, 0x61, 0x6c, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x57, 0x61, 0x6c, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x74,
	0x6f, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x6f, 0x74, 0x6f, 0x53, 0x69, 0x73, 0x77, 0x61, 0x22, 0x5b, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x05,
	0x73, 0x69, 0x73, 0x77, 0x61, 0x22, 0x47, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x61,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x53, 0x69,
	0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x73,
	0x69, 0x73, 0x77, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x05, 0x73, 0x69, 0x73, 0x77,
	0x61, 0x22, 0x4d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61,
	0x6b, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xc8, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6d, 0x62, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x38, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x05,
	0x73, 0x69, 0x73, 0x77, 0x61, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x05, 0x73, 0x69,
	0x73, 0x77, 0x61, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x5f, 0x70, 0x65, 0x6c,
	0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x50, 0x65, 0x6c, 0x65,
	0x6e, 0x67, 0x6b, 0x61, 0x70, 0x52, 0x0e, 0x73, 0x69, 0x73, 0x77, 0x61, 0x50, 0x65, 0x6c, 0x65,
	0x6e, 0x67, 0x6b, 0x61, 0x70, 0x22, 0x47, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x73, 0x77, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x73, 0x77, 0x61, 0x49, 0x64,
	0x22, 0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x21, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x56, 0x0a, 0x22, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x42,
	0x61, 0x73, 0x65, 0x36, 0x34, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x53,
	0x0a, 0x1f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x26, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x22, 0x5b, 0x0a, 0x27, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x72, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa8, 0x02,
	0x0a, 0x05, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x64, 0x5f, 0x6d, 0x61,
	0x70, 0x5f, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x64, 0x4d, 0x61, 0x70, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x61, 0x50, 0x65, 0x6c, 0x61, 0x6a, 0x61,
	0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x6c, 0x6f, 0x6b, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6d, 0x4c, 0x6f, 0x6b, 0x61, 0x6c,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6b, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x4b,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x6c, 0x70,
	0x5f, 0x6d, 0x70, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x6c, 0x70, 0x4d,
	0x70, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75,
	0x6c, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x72, 0x75, 0x74, 0x5f, 0x72, 0x61,
	0x70, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x72, 0x75, 0x74, 0x52,
	0x61, 0x70, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x05, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x05, 0x6d,
	0x61, 0x70, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x61,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x4d, 0x61,
	0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6d,
	0x61, 0x70, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x65,
	0x6c, 0x22, 0x4d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61,
	0x6b, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x49, 0x64, 0x22,
	0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4d, 0x61, 0x70,
	0x65, 0x6c, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x22, 0x76, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x6d,
	0x61, 0x70, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x65,
	0x6c, 0x22, 0x47, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9c, 0x04, 0x0a, 0x0a, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41,
	0x6b, 0x68, 0x69, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x64, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x5f, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6e,
	0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x52, 0x6f,
	0x6d, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x61, 0x5f, 0x70,
	0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x61, 0x50, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x70, 0x65, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x50, 0x65,
	0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x6b, 0x61, 0x74, 0x5f, 0x70,
	0x65, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x5f, 0x6b, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x69, 0x6c, 0x61,
	0x69, 0x4b, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x64, 0x69, 0x6b, 0x61, 0x74,
	0x5f, 0x6b, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x6b, 0x61, 0x74, 0x4b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x5f, 0x73, 0x69, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x69, 0x6c, 0x61,
	0x69, 0x53, 0x69, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x64, 0x69, 0x6b, 0x61, 0x74,
	0x5f, 0x73, 0x69, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x6b, 0x61, 0x74, 0x53, 0x69, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x5f, 0x73, 0x69, 0x6b, 0x73, 0x6f, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e,
	0x69, 0x6c, 0x61, 0x69, 0x53, 0x69, 0x6b, 0x73, 0x6f, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x6b, 0x61, 0x74, 0x5f, 0x73, 0x69, 0x6b, 0x73, 0x6f, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x6b, 0x61, 0x74, 0x53, 0x69, 0x6b,
	0x73, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x64, 0x4d, 0x69, 0x6e, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x22, 0x70, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x0b, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x0a, 0x6e, 0x69, 0x6c, 0x61,
	0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x22, 0x4c, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x64, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b,
	0x68, 0x69, 0x72, 0x22, 0x42, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41,
	0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72,
	0x52, 0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x64, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x5f, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x6e, 0x69,
	0x6c, 0x61, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x05,
	0x6e, 0x69, 0x6c, 0x61, 0x69, 0x22, 0x4c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x60, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x69, 0x6c,
	0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x69, 0x64, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x61, 0x6b, 0x68, 0x69,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x41, 0x6b, 0x68, 0x69, 0x72, 0x22, 0x4c, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xa7, 0x03, 0x0a, 0x05, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a,
	0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f, 0x6d,
	0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x70, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x74, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6d, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x74, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x5f, 0x72, 0x6f,
	0x6d, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6a, 0x65, 0x6e, 0x69,
	0x73, 0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x61, 0x5f,
	0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x73, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x61, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x53, 0x70, 0x12,
	0x27, 0x0a, 0x0d, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x73, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x6a, 0x75, 0x72, 0x75, 0x73, 0x61,
	0x6e, 0x53, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x75, 0x72, 0x69,
	0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x6a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x5f, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x22, 0x5b, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x52, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x47, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x61, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e,
	0x79, 0x61, 0x6b, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x4d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6b,
	0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x6c, 0x61, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x76, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x05,
	0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x47, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x49, 0x64,
	0x22, 0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc6, 0x02, 0x0a, 0x0c, 0x41, 0x6e,
	0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6e,
	0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x52, 0x6f,
	0x6d, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74,
	0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65,
	0x6c, 0x61, 0x6a, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x6d, 0x53, 0x69, 0x73, 0x77, 0x61,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6e, 0x6d, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6e, 0x6d, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x6e, 0x6d, 0x5f, 0x77, 0x6c, 0x5f, 0x6b, 0x65, 0x6c,
	0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x6e, 0x6d, 0x57, 0x6c,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x6d, 0x5f,
	0x73, 0x69, 0x73, 0x77, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x6d, 0x5f, 0x6b, 0x65, 0x6c,
	0x61, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x6d, 0x5f, 0x77, 0x6c, 0x5f, 0x6b, 0x65, 0x6c,
	0x61, 0x73, 0x22, 0x78, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3a, 0x0a, 0x0d, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c,
	0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x4e, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7e, 0x0a, 0x1f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x41, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3a, 0x0a, 0x0d, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c,
	0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x54, 0x0a, 0x20,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x41, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74,
	0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x6f,
	0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x6f, 0x6d, 0x62, 0x6f, 0x6e,
	0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x55, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61,
	0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x22, 0x93, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x61,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x41, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x0c, 0x61, 0x6e, 0x67, 0x67, 0x6f,
	0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x4e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x57, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x49, 0x64,
	0x22, 0x4e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74,
	0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xdb, 0x02, 0x0a, 0x03, 0x50, 0x54, 0x4b, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x74, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x74, 0x6b, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6e, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x5f, 0x70,
	0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6a, 0x65, 0x6e,
	0x69, 0x73, 0x50, 0x74, 0x6b, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x65, 0x6e, 0x69, 0x73,
	0x5f, 0x6b, 0x65, 0x6c, 0x61, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x65, 0x6c, 0x61, 0x6d, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c,
	0x61, 0x68, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x75, 0x70, 0x74, 0x6b, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x75, 0x70, 0x74, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c,
	0x61, 0x6d, 0x61, 0x74, 0x5f, 0x6a, 0x61, 0x6c, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x4a, 0x61, 0x6c, 0x61, 0x6e, 0x12, 0x2e, 0x0a,
	0x13, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6b, 0x65, 0x61, 0x6b, 0x74, 0x69, 0x66, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4b, 0x65, 0x61, 0x6b, 0x74, 0x69, 0x66, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0xb0,
	0x01, 0x0a, 0x0c, 0x50, 0x54, 0x4b, 0x50, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x74, 0x6b, 0x5f, 0x70, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x6b, 0x50, 0x65,
	0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x74, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x74, 0x6b, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x65, 0x6c, 0x61, 0x72, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x65, 0x6c, 0x61, 0x72, 0x44, 0x65, 0x70, 0x61,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x65, 0x6c, 0x61, 0x72, 0x5f, 0x62, 0x65, 0x6c, 0x61, 0x6b,
	0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x67, 0x65, 0x6c, 0x61, 0x72,
	0x42, 0x65, 0x6c, 0x61, 0x6b, 0x61, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x69, 0x70, 0x5f,
	0x6e, 0x69, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x69, 0x70, 0x4e, 0x69,
	0x79, 0x22, 0x53, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x50, 0x54, 0x4b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54,
	0x4b, 0x52, 0x03, 0x50, 0x54, 0x4b, 0x22, 0x45, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x54, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x47, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x50, 0x54, 0x4b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x50, 0x54, 0x4b, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x50, 0x54, 0x4b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x50, 0x54, 0x4b, 0x52, 0x03, 0x50, 0x54, 0x4b, 0x22, 0x6a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x50, 0x54, 0x4b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50,
	0x54, 0x4b, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x03, 0x50, 0x54, 0x4b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x52,
	0x03, 0x50, 0x54, 0x4b, 0x22, 0x45, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54,
	0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4a, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x50, 0x54, 0x4b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x50, 0x54, 0x4b, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9f,
	0x01, 0x0a, 0x0c, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x6b, 0x54, 0x65,
	0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x74, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x74, 0x6b, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6a, 0x65, 0x6e, 0x69,
	0x73, 0x5f, 0x6b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x49, 0x64,
	0x22, 0x77, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72,
	0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0c, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50,
	0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x0c, 0x50, 0x54, 0x4b,
	0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x22, 0x4e, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7e, 0x0a, 0x1f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a,
	0x0d, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50,
	0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x0c, 0x70, 0x74, 0x6b,
	0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x22, 0x54, 0x0a, 0x20, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x63, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x74,
	0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x54, 0x65,
	0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0d, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x0c, 0x70,
	0x74, 0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x22, 0xa1, 0x01, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x74,
	0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x6b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0c, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61,
	0x66, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x52, 0x0c, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x22,
	0x4e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x66, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x6b, 0x54, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xad, 0x05, 0x0a, 0x06, 0x49, 0x6a, 0x61, 0x7a,
	0x61, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69,
	0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65,
	0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e,
	0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x73, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x69, 0x73, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f,
	0x6d, 0x6f, 0x72, 0x5f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x6f, 0x6d, 0x6f, 0x72, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x5f, 0x6c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x68, 0x69,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c,
	0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x6f, 0x72,
	0x74, 0x75, 0x77, 0x61, 0x6c, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x61,
	0x6d, 0x61, 0x4f, 0x72, 0x74, 0x75, 0x77, 0x61, 0x6c, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x6b, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x6b, 0x65, 0x74, 0x4b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61,
	0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x6b, 0x6f,
	0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x61, 0x62, 0x75, 0x70, 0x61,
	0x74, 0x65, 0x6e, 0x6b, 0x6f, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x73, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x73, 0x69, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6b,
	0x65, 0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x12, 0x43,
	0x0a, 0x1e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x70, 0x65, 0x6e, 0x79, 0x65, 0x6c,
	0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x5f, 0x75, 0x6a, 0x69, 0x61, 0x6e, 0x5f, 0x75, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x50,
	0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x55, 0x6a, 0x69, 0x61,
	0x6e, 0x55, 0x73, 0x12, 0x43, 0x0a, 0x1e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x70,
	0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x5f, 0x75, 0x6a, 0x69,
	0x61, 0x6e, 0x5f, 0x75, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x50, 0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72,
	0x61, 0x55, 0x6a, 0x69, 0x61, 0x6e, 0x55, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x73, 0x61, 0x6c,
	0x5f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x73, 0x61, 0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x65, 0x6d, 0x70, 0x61, 0x74, 0x5f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x69, 0x6a, 0x61, 0x7a,
	0x61, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61,
	0x6c, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x22, 0x5f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68,
	0x52, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x22, 0x48, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x65, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79,
	0x61, 0x6b, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49, 0x6a, 0x61, 0x7a, 0x61,
	0x68, 0x52, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x22, 0x4e, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49, 0x6a, 0x61, 0x7a, 0x61,
	0x68, 0x52, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49, 0x6a, 0x61,
	0x7a, 0x61, 0x68, 0x52, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x53, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x48, 0x0a,
	0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6b, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x73,
	0x65, 0x72, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69,
	0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e,
	0x69, 0x6c, 0x61, 0x69, 0x22, 0x5f, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x22, 0x50, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x49,
	0x64, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72,
	0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x5f, 0x6e, 0x69, 0x6c,
	0x61, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x5f,
	0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x22, 0x50, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72,
	0x69, 0x70, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x1b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69,
	0x70, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x50, 0x0a, 0x1c, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xe8, 0x04,
	0x0a, 0x12, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x2d, 0x61, 0x6a, 0x61,
	0x72, 0x61, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x1e, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x68, 0x75, 0x6e,
	0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x2f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x2d, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x93, 0x01,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61,
	0x72, 0x61, 0x6e, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x31, 0x3a, 0x01, 0x2a, 0x1a, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f,
	0x74, 0x61, 0x68, 0x75, 0x6e, 0x2d, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0xa2, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x68, 0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x68, 0x75, 0x6e, 0x41,
	0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x68,
	0x75, 0x6e, 0x41, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x2a, 0x3e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x2f, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x2d, 0x61, 0x6a, 0x61, 0x72, 0x61, 0x6e, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x61, 0x6a,
	0x61, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x32, 0xd5, 0x03, 0x0a, 0x0f, 0x53, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x65, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x71, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x1a, 0x13, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x6e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x32, 0xcd, 0x04, 0x0a, 0x0e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x73, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a,
	0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x73, 0x69, 0x2d, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x8b, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2d, 0x74, 0x65, 0x72, 0x64, 0x61,
	0x66, 0x74, 0x61, 0x72, 0x12, 0x6c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22,
	0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x7c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x12, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2f, 0x12, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2f, 0x7b, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x7d,
	0x32, 0x98, 0x05, 0x0a, 0x0c, 0x53, 0x69, 0x73, 0x77, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x7a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61,
	0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x93, 0x01,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x53, 0x69,
	0x73, 0x77, 0x61, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x53, 0x69, 0x73,
	0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f,
	0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6b, 0x12, 0x75, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12,
	0x18, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73,
	0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x7b, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x7a, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x1a,
	0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x2a, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x2f, 0x7b, 0x73, 0x69, 0x73, 0x77, 0x61, 0x5f, 0x69, 0x64, 0x7d, 0x32, 0x84, 0x04, 0x0a, 0x18,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x57, 0x69,
	0x74, 0x68, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x12, 0x2a, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22,
	0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x12, 0x95, 0x01, 0x0a,
	0x1b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x57, 0x69, 0x74, 0x68, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x27, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x36, 0x34, 0x12, 0xab, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x70, 0x63, 0x12, 0x2f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72,
	0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x72, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x28, 0x01, 0x32, 0x86, 0x05, 0x0a, 0x0c, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70,
	0x65, 0x6c, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f,
	0x6d, 0x61, 0x70, 0x65, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x90, 0x01, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x4d, 0x61, 0x70,
	0x65, 0x6c, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x4d, 0x61, 0x70, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6d, 0x61, 0x70, 0x65,
	0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x12,
	0x64, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x18, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f,
	0x6d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x82, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x1a, 0x2d, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x2f, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x7b, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x7f, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x2a, 0x2d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x2f, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x2f, 0x7b, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x32, 0xf8, 0x04, 0x0a, 0x11,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x8f, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b,
	0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b, 0x68,
	0x69, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x61, 0x6b, 0x68,
	0x69, 0x72, 0x7d, 0x12, 0xa0, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b,
	0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x41, 0x3a, 0x01, 0x2a, 0x1a, 0x3c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f,
	0x61, 0x6b, 0x68, 0x69, 0x72, 0x7d, 0x12, 0x9d, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x2a, 0x3c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x5f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f,
	0x61, 0x6b, 0x68, 0x69, 0x72, 0x7d, 0x32, 0xdd, 0x04, 0x0a, 0x0c, 0x4b, 0x65, 0x6c, 0x61, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x8a, 0x01, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73,
	0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b,
	0x65, 0x6c, 0x61, 0x73, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x12, 0x67, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b, 0x65, 0x6c,
	0x61, 0x73, 0x12, 0x70, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x1a, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6b,
	0x65, 0x6c, 0x61, 0x73, 0x12, 0x70, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x32, 0xaa, 0x06, 0x0a, 0x13, 0x41, 0x6e, 0x67, 0x67, 0x6f,
	0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x97,
	0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74,
	0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0xb0, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x41, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x39, 0x3a, 0x01, 0x2a, 0x22, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f,
	0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x12, 0x84, 0x01, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12,
	0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e,
	0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b, 0x65, 0x6c,
	0x61, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67,
	0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74,
	0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x3a, 0x01, 0x2a, 0x1a, 0x35, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b, 0x65, 0x6c,
	0x61, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x6b, 0x65, 0x6c, 0x61, 0x73,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0x9c, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x67, 0x67,
	0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x2a, 0x35, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x6e, 0x67, 0x67, 0x6f, 0x74, 0x61, 0x2d, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f,
	0x69, 0x64, 0x7d, 0x32, 0xa9, 0x03, 0x0a, 0x0a, 0x50, 0x54, 0x4b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x64, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x12,
	0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01,
	0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x50, 0x54,
	0x4b, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x5a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x50,
	0x54, 0x4b, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x50, 0x54, 0x4b, 0x2f, 0x7b, 0x50, 0x54, 0x4b,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54,
	0x4b, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x3a, 0x01, 0x2a, 0x1a, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f,
	0x50, 0x54, 0x4b, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x50, 0x54, 0x4b, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x6a, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b,
	0x12, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x54, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a,
	0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x50, 0x54, 0x4b, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x50, 0x54, 0x4b, 0x5f, 0x69, 0x64, 0x7d, 0x32,
	0xbf, 0x06, 0x0a, 0x13, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x22,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a,
	0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x50, 0x54, 0x4b,
	0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0xb0, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61,
	0x6b, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x28, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x6e, 0x79, 0x61, 0x6b, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x79, 0x61, 0x6b, 0x50, 0x54,
	0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x3a, 0x01, 0x2a, 0x22, 0x34, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x70, 0x74, 0x6b, 0x2d, 0x74, 0x65, 0x72, 0x64,
	0x61, 0x66, 0x74, 0x61, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6b, 0x12, 0x84, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x54, 0x65,
	0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x12, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x70, 0x74, 0x6b,
	0x2d, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0xaa, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x45, 0x3a, 0x01, 0x2a, 0x1a, 0x40, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f,
	0x70, 0x74, 0x6b, 0x2d, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66,
	0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xa7, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x12, 0x22,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x54, 0x4b, 0x54, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x2a,
	0x40, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x70, 0x74, 0x6b, 0x2d, 0x74, 0x65,
	0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b,
	0x70, 0x74, 0x6b, 0x5f, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x32, 0x99, 0x04, 0x0a, 0x0d, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61,
	0x7a, 0x61, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x5a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12,
	0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6a, 0x61,
	0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x66,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x1c,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61,
	0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x1a, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x63, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x2a, 0x0e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x70, 0x0a, 0x0c, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6a, 0x61, 0x7a,
	0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x74, 0x2f,
	0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0xb7, 0x05,
	0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x12, 0x24, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x2d, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x12, 0x7a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x2d, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x86, 0x01, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x1a, 0x16, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x2d,
	0x6e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x24,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61,
	0x6e, 0x6b, 0x72, 0x69, 0x70, 0x2d, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x89, 0x01, 0x0a, 0x15,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x4e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6b, 0x72, 0x69, 0x70, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x19, 0x5a, 0x17, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x3b, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sekolah_proto_rawDescOnce sync.Once
	file_sekolah_proto_rawDescData = file_sekolah_proto_rawDesc
)

func file_sekolah_proto_rawDescGZIP() []byte {
	file_sekolah_proto_rawDescOnce.Do(func() {
		file_sekolah_proto_rawDescData = protoimpl.X.CompressGZIP(file_sekolah_proto_rawDescData)
	})
	return file_sekolah_proto_rawDescData
}

var file_sekolah_proto_msgTypes = make([]protoimpl.MessageInfo, 135)
var file_sekolah_proto_goTypes = []any{
	(*TahunAjaran)(nil),                             // 0: sekolah.TahunAjaran
	(*CreateTahunAjaranRequest)(nil),                // 1: sekolah.CreateTahunAjaranRequest
	(*CreateTahunAjaranResponse)(nil),               // 2: sekolah.CreateTahunAjaranResponse
	(*GetTahunAjaranRequest)(nil),                   // 3: sekolah.GetTahunAjaranRequest
	(*GetTahunAjaranResponse)(nil),                  // 4: sekolah.GetTahunAjaranResponse
	(*UpdateTahunAjaranRequest)(nil),                // 5: sekolah.UpdateTahunAjaranRequest
	(*UpdateTahunAjaranResponse)(nil),               // 6: sekolah.UpdateTahunAjaranResponse
	(*DeleteTahunAjaranRequest)(nil),                // 7: sekolah.DeleteTahunAjaranRequest
	(*DeleteTahunAjaranResponse)(nil),               // 8: sekolah.DeleteTahunAjaranResponse
	(*Semester)(nil),                                // 9: sekolah.Semester
	(*CreateSemesterRequest)(nil),                   // 10: sekolah.CreateSemesterRequest
	(*CreateSemesterResponse)(nil),                  // 11: sekolah.CreateSemesterResponse
	(*GetSemesterRequest)(nil),                      // 12: sekolah.GetSemesterRequest
	(*GetSemesterResponse)(nil),                     // 13: sekolah.GetSemesterResponse
	(*UpdateSemesterRequest)(nil),                   // 14: sekolah.UpdateSemesterRequest
	(*UpdateSemesterResponse)(nil),                  // 15: sekolah.UpdateSemesterResponse
	(*DeleteSemesterRequest)(nil),                   // 16: sekolah.DeleteSemesterRequest
	(*DeleteSemesterResponse)(nil),                  // 17: sekolah.DeleteSemesterResponse
	(*Sekolah)(nil),                                 // 18: sekolah.Sekolah
	(*SekolahDapo)(nil),                             // 19: sekolah.SekolahDapo
	(*TabelSekolahRequest)(nil),                     // 20: sekolah.TabelSekolahRequest
	(*TabelSekolahResponse)(nil),                    // 21: sekolah.TabelSekolahResponse
	(*SchoolRequest)(nil),                           // 22: sekolah.SchoolRequest
	(*SchoolResponse)(nil),                          // 23: sekolah.SchoolResponse
	(*SekolahTabelTenantRequest)(nil),               // 24: sekolah.SekolahTabelTenantRequest
	(*SekolahTabelTenantResponse)(nil),              // 25: sekolah.SekolahTabelTenantResponse
	(*CreateSekolahRequest)(nil),                    // 26: sekolah.CreateSekolahRequest
	(*CreateSekolahResponse)(nil),                   // 27: sekolah.CreateSekolahResponse
	(*GetSekolahRequest)(nil),                       // 28: sekolah.GetSekolahRequest
	(*GetSekolahResponse)(nil),                      // 29: sekolah.GetSekolahResponse
	(*Siswa)(nil),                                   // 30: sekolah.Siswa
	(*SiswaPelengkap)(nil),                          // 31: sekolah.SiswaPelengkap
	(*CreateSiswaRequest)(nil),                      // 32: sekolah.CreateSiswaRequest
	(*CreateSiswaResponse)(nil),                     // 33: sekolah.CreateSiswaResponse
	(*CreateBanyakSiswaRequest)(nil),                // 34: sekolah.CreateBanyakSiswaRequest
	(*CreateBanyakSiswaResponse)(nil),               // 35: sekolah.CreateBanyakSiswaResponse
	(*GetSiswaRequest)(nil),                         // 36: sekolah.GetSiswaRequest
	(*GetSiswaResponse)(nil),                        // 37: sekolah.GetSiswaResponse
	(*UpdateSiswaRequest)(nil),                      // 38: sekolah.UpdateSiswaRequest
	(*UpdateSiswaResponse)(nil),                     // 39: sekolah.UpdateSiswaResponse
	(*DeleteSiswaRequest)(nil),                      // 40: sekolah.DeleteSiswaRequest
	(*DeleteSiswaResponse)(nil),                     // 41: sekolah.DeleteSiswaResponse
	(*UploadDataSekolahMultipartRequest)(nil),       // 42: sekolah.UploadDataSekolahMultipartRequest
	(*UploadDataSekolahMultipartResponse)(nil),      // 43: sekolah.UploadDataSekolahMultipartResponse
	(*UploadDataSekolahBase64Request)(nil),          // 44: sekolah.UploadDataSekolahBase64Request
	(*UploadDataSekolahBase64Response)(nil),         // 45: sekolah.UploadDataSekolahBase64Response
	(*UploadDataSekolahWithStreamGrpcRequest)(nil),  // 46: sekolah.UploadDataSekolahWithStreamGrpcRequest
	(*UploadDataSekolahWithStreamGrpcResponse)(nil), // 47: sekolah.UploadDataSekolahWithStreamGrpcResponse
	(*Mapel)(nil),                                   // 48: sekolah.Mapel
	(*CreateMapelRequest)(nil),                      // 49: sekolah.CreateMapelRequest
	(*CreateMapelResponse)(nil),                     // 50: sekolah.CreateMapelResponse
	(*CreateBanyakMapelRequest)(nil),                // 51: sekolah.CreateBanyakMapelRequest
	(*CreateBanyakMapelResponse)(nil),               // 52: sekolah.CreateBanyakMapelResponse
	(*GetMapelRequest)(nil),                         // 53: sekolah.GetMapelRequest
	(*GetMapelResponse)(nil),                        // 54: sekolah.GetMapelResponse
	(*UpdateMapelRequest)(nil),                      // 55: sekolah.UpdateMapelRequest
	(*UpdateMapelResponse)(nil),                     // 56: sekolah.UpdateMapelResponse
	(*DeleteMapelRequest)(nil),                      // 57: sekolah.DeleteMapelRequest
	(*DeleteMapelResponse)(nil),                     // 58: sekolah.DeleteMapelResponse
	(*NilaiAkhir)(nil),                              // 59: sekolah.NilaiAkhir
	(*CreateNilaiAkhirRequest)(nil),                 // 60: sekolah.CreateNilaiAkhirRequest
	(*CreateNilaiAkhirResponse)(nil),                // 61: sekolah.CreateNilaiAkhirResponse
	(*GetNilaiAkhirRequest)(nil),                    // 62: sekolah.GetNilaiAkhirRequest
	(*GetNilaiAkhirResponse)(nil),                   // 63: sekolah.GetNilaiAkhirResponse
	(*UpdateNilaiAkhirRequest)(nil),                 // 64: sekolah.UpdateNilaiAkhirRequest
	(*UpdateNilaiAkhirResponse)(nil),                // 65: sekolah.UpdateNilaiAkhirResponse
	(*DeleteNilaiAkhirRequest)(nil),                 // 66: sekolah.DeleteNilaiAkhirRequest
	(*DeleteNilaiAkhirResponse)(nil),                // 67: sekolah.DeleteNilaiAkhirResponse
	(*Kelas)(nil),                                   // 68: sekolah.Kelas
	(*CreateKelasRequest)(nil),                      // 69: sekolah.CreateKelasRequest
	(*CreateKelasResponse)(nil),                     // 70: sekolah.CreateKelasResponse
	(*CreateBanyakKelasRequest)(nil),                // 71: sekolah.CreateBanyakKelasRequest
	(*CreateBanyakKelasResponse)(nil),               // 72: sekolah.CreateBanyakKelasResponse
	(*GetKelasRequest)(nil),                         // 73: sekolah.GetKelasRequest
	(*GetKelasResponse)(nil),                        // 74: sekolah.GetKelasResponse
	(*UpdateKelasRequest)(nil),                      // 75: sekolah.UpdateKelasRequest
	(*UpdateKelasResponse)(nil),                     // 76: sekolah.UpdateKelasResponse
	(*DeleteKelasRequest)(nil),                      // 77: sekolah.DeleteKelasRequest
	(*DeleteKelasResponse)(nil),                     // 78: sekolah.DeleteKelasResponse
	(*AnggotaKelas)(nil),                            // 79: sekolah.AnggotaKelas
	(*CreateAnggotaKelasRequest)(nil),               // 80: sekolah.CreateAnggotaKelasRequest
	(*CreateAnggotaKelasResponse)(nil),              // 81: sekolah.CreateAnggotaKelasResponse
	(*CreateBanyakAnggotaKelasRequest)(nil),         // 82: sekolah.CreateBanyakAnggotaKelasRequest
	(*CreateBanyakAnggotaKelasResponse)(nil),        // 83: sekolah.CreateBanyakAnggotaKelasResponse
	(*GetAnggotaKelasRequest)(nil),                  // 84: sekolah.GetAnggotaKelasRequest
	(*GetAnggotaKelasResponse)(nil),                 // 85: sekolah.GetAnggotaKelasResponse
	(*UpdateAnggotaKelasRequest)(nil),               // 86: sekolah.UpdateAnggotaKelasRequest
	(*UpdateAnggotaKelasResponse)(nil),              // 87: sekolah.UpdateAnggotaKelasResponse
	(*DeleteAnggotaKelasRequest)(nil),               // 88: sekolah.DeleteAnggotaKelasRequest
	(*DeleteAnggotaKelasResponse)(nil),              // 89: sekolah.DeleteAnggotaKelasResponse
	(*PTK)(nil),                                     // 90: sekolah.PTK
	(*PTKPelengkap)(nil),                            // 91: sekolah.PTKPelengkap
	(*CreatePTKRequest)(nil),                        // 92: sekolah.CreatePTKRequest
	(*CreatePTKResponse)(nil),                       // 93: sekolah.CreatePTKResponse
	(*GetPTKRequest)(nil),                           // 94: sekolah.GetPTKRequest
	(*GetPTKResponse)(nil),                          // 95: sekolah.GetPTKResponse
	(*UpdatePTKRequest)(nil),                        // 96: sekolah.UpdatePTKRequest
	(*UpdatePTKResponse)(nil),                       // 97: sekolah.UpdatePTKResponse
	(*DeletePTKRequest)(nil),                        // 98: sekolah.DeletePTKRequest
	(*DeletePTKResponse)(nil),                       // 99: sekolah.DeletePTKResponse
	(*PTKTerdaftar)(nil),                            // 100: sekolah.PTKTerdaftar
	(*CreatePTKTerdaftarRequest)(nil),               // 101: sekolah.CreatePTKTerdaftarRequest
	(*CreatePTKTerdaftarResponse)(nil),              // 102: sekolah.CreatePTKTerdaftarResponse
	(*CreateBanyakPTKTerdaftarRequest)(nil),         // 103: sekolah.CreateBanyakPTKTerdaftarRequest
	(*CreateBanyakPTKTerdaftarResponse)(nil),        // 104: sekolah.CreateBanyakPTKTerdaftarResponse
	(*GetPTKTerdaftarRequest)(nil),                  // 105: sekolah.GetPTKTerdaftarRequest
	(*GetPTKTerdaftarResponse)(nil),                 // 106: sekolah.GetPTKTerdaftarResponse
	(*UpdatePTKTerdaftarRequest)(nil),               // 107: sekolah.UpdatePTKTerdaftarRequest
	(*UpdatePTKTerdaftarResponse)(nil),              // 108: sekolah.UpdatePTKTerdaftarResponse
	(*DeletePTKTerdaftarRequest)(nil),               // 109: sekolah.DeletePTKTerdaftarRequest
	(*DeletePTKTerdaftarResponse)(nil),              // 110: sekolah.DeletePTKTerdaftarResponse
	(*Ijazah)(nil),                                  // 111: sekolah.Ijazah
	(*CreateIjazahRequest)(nil),                     // 112: sekolah.CreateIjazahRequest
	(*CreateIjazahResponse)(nil),                    // 113: sekolah.CreateIjazahResponse
	(*CreateBanyakIjazahRequest)(nil),               // 114: sekolah.CreateBanyakIjazahRequest
	(*CreateBanyakIjazahResponse)(nil),              // 115: sekolah.CreateBanyakIjazahResponse
	(*GetIjazahRequest)(nil),                        // 116: sekolah.GetIjazahRequest
	(*GetIjazahResponse)(nil),                       // 117: sekolah.GetIjazahResponse
	(*UpdateIjazahRequest)(nil),                     // 118: sekolah.UpdateIjazahRequest
	(*UpdateIjazahResponse)(nil),                    // 119: sekolah.UpdateIjazahResponse
	(*DeleteIjazahRequest)(nil),                     // 120: sekolah.DeleteIjazahRequest
	(*DeleteIjazahResponse)(nil),                    // 121: sekolah.DeleteIjazahResponse
	(*UploadIjazahRequest)(nil),                     // 122: sekolah.UploadIjazahRequest
	(*UploadIjazahResponse)(nil),                    // 123: sekolah.UploadIjazahResponse
	(*TranskripNilai)(nil),                          // 124: sekolah.TranskripNilai
	(*CreateTranskripNilaiRequest)(nil),             // 125: sekolah.CreateTranskripNilaiRequest
	(*CreateTranskripNilaiResponse)(nil),            // 126: sekolah.CreateTranskripNilaiResponse
	(*GetTranskripNilaiRequest)(nil),                // 127: sekolah.GetTranskripNilaiRequest
	(*GetTranskripNilaiResponse)(nil),               // 128: sekolah.GetTranskripNilaiResponse
	(*UpdateTranskripNilaiRequest)(nil),             // 129: sekolah.UpdateTranskripNilaiRequest
	(*UpdateTranskripNilaiResponse)(nil),            // 130: sekolah.UpdateTranskripNilaiResponse
	(*DeleteTranskripNilaiRequest)(nil),             // 131: sekolah.DeleteTranskripNilaiRequest
	(*DeleteTranskripNilaiResponse)(nil),            // 132: sekolah.DeleteTranskripNilaiResponse
	(*UploadTranskripNilaiRequest)(nil),             // 133: sekolah.UploadTranskripNilaiRequest
	(*UploadTranskripNilaiResponse)(nil),            // 134: sekolah.UploadTranskripNilaiResponse
}
var file_sekolah_proto_depIdxs = []int32{
	0,   // 0: sekolah.CreateTahunAjaranRequest.tahun_ajaran:type_name -> sekolah.TahunAjaran
	0,   // 1: sekolah.GetTahunAjaranResponse.tahun_ajaran:type_name -> sekolah.TahunAjaran
	0,   // 2: sekolah.UpdateTahunAjaranRequest.tahun_ajaran:type_name -> sekolah.TahunAjaran
	9,   // 3: sekolah.CreateSemesterRequest.semester:type_name -> sekolah.Semester
	9,   // 4: sekolah.GetSemesterResponse.semester:type_name -> sekolah.Semester
	9,   // 5: sekolah.UpdateSemesterRequest.semester:type_name -> sekolah.Semester
	18,  // 6: sekolah.TabelSekolahRequest.sekolah:type_name -> sekolah.Sekolah
	19,  // 7: sekolah.CreateSekolahRequest.sekolah:type_name -> sekolah.SekolahDapo
	19,  // 8: sekolah.GetSekolahResponse.sekolah:type_name -> sekolah.SekolahDapo
	30,  // 9: sekolah.CreateSiswaRequest.siswa:type_name -> sekolah.Siswa
	30,  // 10: sekolah.CreateBanyakSiswaRequest.siswa:type_name -> sekolah.Siswa
	30,  // 11: sekolah.GetSiswaResponse.siswa:type_name -> sekolah.Siswa
	30,  // 12: sekolah.UpdateSiswaRequest.siswa:type_name -> sekolah.Siswa
	31,  // 13: sekolah.UpdateSiswaRequest.siswa_pelengkap:type_name -> sekolah.SiswaPelengkap
	48,  // 14: sekolah.CreateMapelRequest.mapel:type_name -> sekolah.Mapel
	48,  // 15: sekolah.CreateBanyakMapelRequest.mapel:type_name -> sekolah.Mapel
	48,  // 16: sekolah.GetMapelResponse.mapel:type_name -> sekolah.Mapel
	48,  // 17: sekolah.UpdateMapelRequest.mapel:type_name -> sekolah.Mapel
	59,  // 18: sekolah.CreateNilaiAkhirRequest.nilai_akhir:type_name -> sekolah.NilaiAkhir
	59,  // 19: sekolah.GetNilaiAkhirResponse.nilai:type_name -> sekolah.NilaiAkhir
	59,  // 20: sekolah.UpdateNilaiAkhirRequest.nilai:type_name -> sekolah.NilaiAkhir
	68,  // 21: sekolah.CreateKelasRequest.kelas:type_name -> sekolah.Kelas
	68,  // 22: sekolah.CreateBanyakKelasRequest.kelas:type_name -> sekolah.Kelas
	68,  // 23: sekolah.GetKelasResponse.kelas:type_name -> sekolah.Kelas
	68,  // 24: sekolah.UpdateKelasRequest.kelas:type_name -> sekolah.Kelas
	79,  // 25: sekolah.CreateAnggotaKelasRequest.anggota_kelas:type_name -> sekolah.AnggotaKelas
	79,  // 26: sekolah.CreateBanyakAnggotaKelasRequest.anggota_kelas:type_name -> sekolah.AnggotaKelas
	79,  // 27: sekolah.GetAnggotaKelasResponse.anggota_kelas:type_name -> sekolah.AnggotaKelas
	79,  // 28: sekolah.UpdateAnggotaKelasRequest.anggota_kelas:type_name -> sekolah.AnggotaKelas
	90,  // 29: sekolah.CreatePTKRequest.PTK:type_name -> sekolah.PTK
	90,  // 30: sekolah.GetPTKResponse.PTK:type_name -> sekolah.PTK
	90,  // 31: sekolah.UpdatePTKRequest.PTK:type_name -> sekolah.PTK
	100, // 32: sekolah.CreatePTKTerdaftarRequest.PTKTerdaftar:type_name -> sekolah.PTKTerdaftar
	100, // 33: sekolah.CreateBanyakPTKTerdaftarRequest.ptk_terdaftar:type_name -> sekolah.PTKTerdaftar
	100, // 34: sekolah.GetPTKTerdaftarResponse.ptk_terdaftar:type_name -> sekolah.PTKTerdaftar
	100, // 35: sekolah.UpdatePTKTerdaftarRequest.PTKTerdaftar:type_name -> sekolah.PTKTerdaftar
	111, // 36: sekolah.CreateIjazahRequest.ijazah:type_name -> sekolah.Ijazah
	111, // 37: sekolah.CreateBanyakIjazahRequest.ijazah:type_name -> sekolah.Ijazah
	111, // 38: sekolah.GetIjazahResponse.ijazah:type_name -> sekolah.Ijazah
	111, // 39: sekolah.UpdateIjazahRequest.ijazah:type_name -> sekolah.Ijazah
	124, // 40: sekolah.CreateTranskripNilaiRequest.transkrip_nilai:type_name -> sekolah.TranskripNilai
	124, // 41: sekolah.GetTranskripNilaiResponse.transkrip_nilai:type_name -> sekolah.TranskripNilai
	124, // 42: sekolah.UpdateTranskripNilaiRequest.transkrip_nilai:type_name -> sekolah.TranskripNilai
	1,   // 43: sekolah.TahunAjaranService.CreateTahunAjaran:input_type -> sekolah.CreateTahunAjaranRequest
	3,   // 44: sekolah.TahunAjaranService.GetTahunAjaran:input_type -> sekolah.GetTahunAjaranRequest
	5,   // 45: sekolah.TahunAjaranService.UpdateTahunAjaran:input_type -> sekolah.UpdateTahunAjaranRequest
	7,   // 46: sekolah.TahunAjaranService.DeleteTahunAjaran:input_type -> sekolah.DeleteTahunAjaranRequest
	10,  // 47: sekolah.SemesterService.CreateSemester:input_type -> sekolah.CreateSemesterRequest
	12,  // 48: sekolah.SemesterService.GetSemester:input_type -> sekolah.GetSemesterRequest
	14,  // 49: sekolah.SemesterService.UpdateSemester:input_type -> sekolah.UpdateSemesterRequest
	16,  // 50: sekolah.SemesterService.DeleteSemester:input_type -> sekolah.DeleteSemesterRequest
	22,  // 51: sekolah.SekolahService.GetSchoolInfo:input_type -> sekolah.SchoolRequest
	20,  // 52: sekolah.SekolahService.RegistrasiSekolah:input_type -> sekolah.TabelSekolahRequest
	24,  // 53: sekolah.SekolahService.GetSekolahTabelTenant:input_type -> sekolah.SekolahTabelTenantRequest
	26,  // 54: sekolah.SekolahService.CreateSekolah:input_type -> sekolah.CreateSekolahRequest
	28,  // 55: sekolah.SekolahService.GetSekolah:input_type -> sekolah.GetSekolahRequest
	32,  // 56: sekolah.SiswaService.CreateSiswa:input_type -> sekolah.CreateSiswaRequest
	34,  // 57: sekolah.SiswaService.CreateBanyakSiswa:input_type -> sekolah.CreateBanyakSiswaRequest
	36,  // 58: sekolah.SiswaService.GetSiswa:input_type -> sekolah.GetSiswaRequest
	38,  // 59: sekolah.SiswaService.UpdateSiswa:input_type -> sekolah.UpdateSiswaRequest
	40,  // 60: sekolah.SiswaService.DeleteSiswa:input_type -> sekolah.DeleteSiswaRequest
	42,  // 61: sekolah.UploadDataSekolahService.UploadDataSekolahWithMultipart:input_type -> sekolah.UploadDataSekolahMultipartRequest
	44,  // 62: sekolah.UploadDataSekolahService.UploadDataSekolahWithBase64:input_type -> sekolah.UploadDataSekolahBase64Request
	46,  // 63: sekolah.UploadDataSekolahService.UploadDataSekolahWithStreamGrpc:input_type -> sekolah.UploadDataSekolahWithStreamGrpcRequest
	49,  // 64: sekolah.MapelService.CreateMapel:input_type -> sekolah.CreateMapelRequest
	51,  // 65: sekolah.MapelService.CreateBanyakMapel:input_type -> sekolah.CreateBanyakMapelRequest
	53,  // 66: sekolah.MapelService.GetMapel:input_type -> sekolah.GetMapelRequest
	55,  // 67: sekolah.MapelService.UpdateMapel:input_type -> sekolah.UpdateMapelRequest
	57,  // 68: sekolah.MapelService.DeleteMapel:input_type -> sekolah.DeleteMapelRequest
	60,  // 69: sekolah.NilaiAkhirService.CreateNilaiAkhir:input_type -> sekolah.CreateNilaiAkhirRequest
	62,  // 70: sekolah.NilaiAkhirService.GetNilaiAkhir:input_type -> sekolah.GetNilaiAkhirRequest
	64,  // 71: sekolah.NilaiAkhirService.UpdateNilaiAkhir:input_type -> sekolah.UpdateNilaiAkhirRequest
	66,  // 72: sekolah.NilaiAkhirService.DeleteNilaiAkhir:input_type -> sekolah.DeleteNilaiAkhirRequest
	69,  // 73: sekolah.KelasService.CreateKelas:input_type -> sekolah.CreateKelasRequest
	71,  // 74: sekolah.KelasService.CreateBanyakKelas:input_type -> sekolah.CreateBanyakKelasRequest
	73,  // 75: sekolah.KelasService.GetKelas:input_type -> sekolah.GetKelasRequest
	75,  // 76: sekolah.KelasService.UpdateKelas:input_type -> sekolah.UpdateKelasRequest
	77,  // 77: sekolah.KelasService.DeleteKelas:input_type -> sekolah.DeleteKelasRequest
	80,  // 78: sekolah.AnggotaKelasService.CreateAnggotaKelas:input_type -> sekolah.CreateAnggotaKelasRequest
	82,  // 79: sekolah.AnggotaKelasService.CreateBanyakAnggotaKelas:input_type -> sekolah.CreateBanyakAnggotaKelasRequest
	84,  // 80: sekolah.AnggotaKelasService.GetAnggotaKelas:input_type -> sekolah.GetAnggotaKelasRequest
	86,  // 81: sekolah.AnggotaKelasService.UpdateAnggotaKelas:input_type -> sekolah.UpdateAnggotaKelasRequest
	88,  // 82: sekolah.AnggotaKelasService.DeleteAnggotaKelas:input_type -> sekolah.DeleteAnggotaKelasRequest
	92,  // 83: sekolah.PTKService.CreatePTK:input_type -> sekolah.CreatePTKRequest
	94,  // 84: sekolah.PTKService.GetPTK:input_type -> sekolah.GetPTKRequest
	96,  // 85: sekolah.PTKService.UpdatePTK:input_type -> sekolah.UpdatePTKRequest
	98,  // 86: sekolah.PTKService.DeletePTK:input_type -> sekolah.DeletePTKRequest
	101, // 87: sekolah.PTKTerdaftarService.CreatePTKTerdaftar:input_type -> sekolah.CreatePTKTerdaftarRequest
	103, // 88: sekolah.PTKTerdaftarService.CreateBanyakPTKTerdaftar:input_type -> sekolah.CreateBanyakPTKTerdaftarRequest
	105, // 89: sekolah.PTKTerdaftarService.GetPTKTerdaftar:input_type -> sekolah.GetPTKTerdaftarRequest
	107, // 90: sekolah.PTKTerdaftarService.UpdatePTKTerdaftar:input_type -> sekolah.UpdatePTKTerdaftarRequest
	109, // 91: sekolah.PTKTerdaftarService.DeletePTKTerdaftar:input_type -> sekolah.DeletePTKTerdaftarRequest
	112, // 92: sekolah.IjazahService.CreateIjazah:input_type -> sekolah.CreateIjazahRequest
	116, // 93: sekolah.IjazahService.GetIjazah:input_type -> sekolah.GetIjazahRequest
	118, // 94: sekolah.IjazahService.UpdateIjazah:input_type -> sekolah.UpdateIjazahRequest
	120, // 95: sekolah.IjazahService.DeleteIjazah:input_type -> sekolah.DeleteIjazahRequest
	122, // 96: sekolah.IjazahService.UploadIjazah:input_type -> sekolah.UploadIjazahRequest
	125, // 97: sekolah.TranskripNilaiService.CreateTranskripNilai:input_type -> sekolah.CreateTranskripNilaiRequest
	127, // 98: sekolah.TranskripNilaiService.GetTranskripNilai:input_type -> sekolah.GetTranskripNilaiRequest
	129, // 99: sekolah.TranskripNilaiService.UpdateTranskripNilai:input_type -> sekolah.UpdateTranskripNilaiRequest
	131, // 100: sekolah.TranskripNilaiService.DeleteTranskripNilai:input_type -> sekolah.DeleteTranskripNilaiRequest
	133, // 101: sekolah.TranskripNilaiService.UploadITranskripNilai:input_type -> sekolah.UploadTranskripNilaiRequest
	2,   // 102: sekolah.TahunAjaranService.CreateTahunAjaran:output_type -> sekolah.CreateTahunAjaranResponse
	4,   // 103: sekolah.TahunAjaranService.GetTahunAjaran:output_type -> sekolah.GetTahunAjaranResponse
	6,   // 104: sekolah.TahunAjaranService.UpdateTahunAjaran:output_type -> sekolah.UpdateTahunAjaranResponse
	8,   // 105: sekolah.TahunAjaranService.DeleteTahunAjaran:output_type -> sekolah.DeleteTahunAjaranResponse
	11,  // 106: sekolah.SemesterService.CreateSemester:output_type -> sekolah.CreateSemesterResponse
	13,  // 107: sekolah.SemesterService.GetSemester:output_type -> sekolah.GetSemesterResponse
	15,  // 108: sekolah.SemesterService.UpdateSemester:output_type -> sekolah.UpdateSemesterResponse
	17,  // 109: sekolah.SemesterService.DeleteSemester:output_type -> sekolah.DeleteSemesterResponse
	23,  // 110: sekolah.SekolahService.GetSchoolInfo:output_type -> sekolah.SchoolResponse
	21,  // 111: sekolah.SekolahService.RegistrasiSekolah:output_type -> sekolah.TabelSekolahResponse
	25,  // 112: sekolah.SekolahService.GetSekolahTabelTenant:output_type -> sekolah.SekolahTabelTenantResponse
	27,  // 113: sekolah.SekolahService.CreateSekolah:output_type -> sekolah.CreateSekolahResponse
	29,  // 114: sekolah.SekolahService.GetSekolah:output_type -> sekolah.GetSekolahResponse
	33,  // 115: sekolah.SiswaService.CreateSiswa:output_type -> sekolah.CreateSiswaResponse
	35,  // 116: sekolah.SiswaService.CreateBanyakSiswa:output_type -> sekolah.CreateBanyakSiswaResponse
	37,  // 117: sekolah.SiswaService.GetSiswa:output_type -> sekolah.GetSiswaResponse
	39,  // 118: sekolah.SiswaService.UpdateSiswa:output_type -> sekolah.UpdateSiswaResponse
	41,  // 119: sekolah.SiswaService.DeleteSiswa:output_type -> sekolah.DeleteSiswaResponse
	43,  // 120: sekolah.UploadDataSekolahService.UploadDataSekolahWithMultipart:output_type -> sekolah.UploadDataSekolahMultipartResponse
	45,  // 121: sekolah.UploadDataSekolahService.UploadDataSekolahWithBase64:output_type -> sekolah.UploadDataSekolahBase64Response
	47,  // 122: sekolah.UploadDataSekolahService.UploadDataSekolahWithStreamGrpc:output_type -> sekolah.UploadDataSekolahWithStreamGrpcResponse
	50,  // 123: sekolah.MapelService.CreateMapel:output_type -> sekolah.CreateMapelResponse
	52,  // 124: sekolah.MapelService.CreateBanyakMapel:output_type -> sekolah.CreateBanyakMapelResponse
	54,  // 125: sekolah.MapelService.GetMapel:output_type -> sekolah.GetMapelResponse
	56,  // 126: sekolah.MapelService.UpdateMapel:output_type -> sekolah.UpdateMapelResponse
	58,  // 127: sekolah.MapelService.DeleteMapel:output_type -> sekolah.DeleteMapelResponse
	61,  // 128: sekolah.NilaiAkhirService.CreateNilaiAkhir:output_type -> sekolah.CreateNilaiAkhirResponse
	63,  // 129: sekolah.NilaiAkhirService.GetNilaiAkhir:output_type -> sekolah.GetNilaiAkhirResponse
	65,  // 130: sekolah.NilaiAkhirService.UpdateNilaiAkhir:output_type -> sekolah.UpdateNilaiAkhirResponse
	67,  // 131: sekolah.NilaiAkhirService.DeleteNilaiAkhir:output_type -> sekolah.DeleteNilaiAkhirResponse
	70,  // 132: sekolah.KelasService.CreateKelas:output_type -> sekolah.CreateKelasResponse
	72,  // 133: sekolah.KelasService.CreateBanyakKelas:output_type -> sekolah.CreateBanyakKelasResponse
	74,  // 134: sekolah.KelasService.GetKelas:output_type -> sekolah.GetKelasResponse
	76,  // 135: sekolah.KelasService.UpdateKelas:output_type -> sekolah.UpdateKelasResponse
	78,  // 136: sekolah.KelasService.DeleteKelas:output_type -> sekolah.DeleteKelasResponse
	81,  // 137: sekolah.AnggotaKelasService.CreateAnggotaKelas:output_type -> sekolah.CreateAnggotaKelasResponse
	83,  // 138: sekolah.AnggotaKelasService.CreateBanyakAnggotaKelas:output_type -> sekolah.CreateBanyakAnggotaKelasResponse
	85,  // 139: sekolah.AnggotaKelasService.GetAnggotaKelas:output_type -> sekolah.GetAnggotaKelasResponse
	87,  // 140: sekolah.AnggotaKelasService.UpdateAnggotaKelas:output_type -> sekolah.UpdateAnggotaKelasResponse
	89,  // 141: sekolah.AnggotaKelasService.DeleteAnggotaKelas:output_type -> sekolah.DeleteAnggotaKelasResponse
	93,  // 142: sekolah.PTKService.CreatePTK:output_type -> sekolah.CreatePTKResponse
	95,  // 143: sekolah.PTKService.GetPTK:output_type -> sekolah.GetPTKResponse
	97,  // 144: sekolah.PTKService.UpdatePTK:output_type -> sekolah.UpdatePTKResponse
	99,  // 145: sekolah.PTKService.DeletePTK:output_type -> sekolah.DeletePTKResponse
	102, // 146: sekolah.PTKTerdaftarService.CreatePTKTerdaftar:output_type -> sekolah.CreatePTKTerdaftarResponse
	104, // 147: sekolah.PTKTerdaftarService.CreateBanyakPTKTerdaftar:output_type -> sekolah.CreateBanyakPTKTerdaftarResponse
	106, // 148: sekolah.PTKTerdaftarService.GetPTKTerdaftar:output_type -> sekolah.GetPTKTerdaftarResponse
	108, // 149: sekolah.PTKTerdaftarService.UpdatePTKTerdaftar:output_type -> sekolah.UpdatePTKTerdaftarResponse
	110, // 150: sekolah.PTKTerdaftarService.DeletePTKTerdaftar:output_type -> sekolah.DeletePTKTerdaftarResponse
	113, // 151: sekolah.IjazahService.CreateIjazah:output_type -> sekolah.CreateIjazahResponse
	117, // 152: sekolah.IjazahService.GetIjazah:output_type -> sekolah.GetIjazahResponse
	119, // 153: sekolah.IjazahService.UpdateIjazah:output_type -> sekolah.UpdateIjazahResponse
	121, // 154: sekolah.IjazahService.DeleteIjazah:output_type -> sekolah.DeleteIjazahResponse
	123, // 155: sekolah.IjazahService.UploadIjazah:output_type -> sekolah.UploadIjazahResponse
	126, // 156: sekolah.TranskripNilaiService.CreateTranskripNilai:output_type -> sekolah.CreateTranskripNilaiResponse
	128, // 157: sekolah.TranskripNilaiService.GetTranskripNilai:output_type -> sekolah.GetTranskripNilaiResponse
	130, // 158: sekolah.TranskripNilaiService.UpdateTranskripNilai:output_type -> sekolah.UpdateTranskripNilaiResponse
	132, // 159: sekolah.TranskripNilaiService.DeleteTranskripNilai:output_type -> sekolah.DeleteTranskripNilaiResponse
	134, // 160: sekolah.TranskripNilaiService.UploadITranskripNilai:output_type -> sekolah.UploadTranskripNilaiResponse
	102, // [102:161] is the sub-list for method output_type
	43,  // [43:102] is the sub-list for method input_type
	43,  // [43:43] is the sub-list for extension type_name
	43,  // [43:43] is the sub-list for extension extendee
	0,   // [0:43] is the sub-list for field type_name
}

func init() { file_sekolah_proto_init() }
func file_sekolah_proto_init() {
	if File_sekolah_proto != nil {
		return
	}
	file_sekolah_proto_msgTypes[68].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[73].OneofWrappers = []any{}
	file_sekolah_proto_msgTypes[79].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sekolah_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   135,
			NumExtensions: 0,
			NumServices:   13,
		},
		GoTypes:           file_sekolah_proto_goTypes,
		DependencyIndexes: file_sekolah_proto_depIdxs,
		MessageInfos:      file_sekolah_proto_msgTypes,
	}.Build()
	File_sekolah_proto = out.File
	file_sekolah_proto_rawDesc = nil
	file_sekolah_proto_goTypes = nil
	file_sekolah_proto_depIdxs = nil
}
