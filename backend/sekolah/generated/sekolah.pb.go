// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.28.3
// source: sekolah.proto

package sekolah

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Struktur Sekolah
type Sekolah struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SekolahId       int32                  `protobuf:"varint,1,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	SekolahIdEnkrip string                 `protobuf:"bytes,2,opt,name=sekolah_id_enkrip,json=sekolahIdEnkrip,proto3" json:"sekolah_id_enkrip,omitempty"`
	Kecamatan       string                 `protobuf:"bytes,3,opt,name=kecamatan,proto3" json:"kecamatan,omitempty"`
	Kabupaten       string                 `protobuf:"bytes,4,opt,name=kabupaten,proto3" json:"kabupaten,omitempty"`
	Propinsi        string                 `protobuf:"bytes,5,opt,name=propinsi,proto3" json:"propinsi,omitempty"`
	KodeKecamatan   string                 `protobuf:"bytes,6,opt,name=kode_kecamatan,json=kodeKecamatan,proto3" json:"kode_kecamatan,omitempty"`
	KodeKab         string                 `protobuf:"bytes,7,opt,name=kode_kab,json=kodeKab,proto3" json:"kode_kab,omitempty"`
	KodeProp        string                 `protobuf:"bytes,8,opt,name=kode_prop,json=kodeProp,proto3" json:"kode_prop,omitempty"`
	NamaSekolah     string                 `protobuf:"bytes,9,opt,name=nama_sekolah,json=namaSekolah,proto3" json:"nama_sekolah,omitempty"`
	Npsn            string                 `protobuf:"bytes,10,opt,name=npsn,proto3" json:"npsn,omitempty"`
	AlamatJalan     string                 `protobuf:"bytes,11,opt,name=alamat_jalan,json=alamatJalan,proto3" json:"alamat_jalan,omitempty"`
	Status          string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Sekolah) Reset() {
	*x = Sekolah{}
	mi := &file_sekolah_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sekolah) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sekolah) ProtoMessage() {}

func (x *Sekolah) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sekolah.ProtoReflect.Descriptor instead.
func (*Sekolah) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{0}
}

func (x *Sekolah) GetSekolahId() int32 {
	if x != nil {
		return x.SekolahId
	}
	return 0
}

func (x *Sekolah) GetSekolahIdEnkrip() string {
	if x != nil {
		return x.SekolahIdEnkrip
	}
	return ""
}

func (x *Sekolah) GetKecamatan() string {
	if x != nil {
		return x.Kecamatan
	}
	return ""
}

func (x *Sekolah) GetKabupaten() string {
	if x != nil {
		return x.Kabupaten
	}
	return ""
}

func (x *Sekolah) GetPropinsi() string {
	if x != nil {
		return x.Propinsi
	}
	return ""
}

func (x *Sekolah) GetKodeKecamatan() string {
	if x != nil {
		return x.KodeKecamatan
	}
	return ""
}

func (x *Sekolah) GetKodeKab() string {
	if x != nil {
		return x.KodeKab
	}
	return ""
}

func (x *Sekolah) GetKodeProp() string {
	if x != nil {
		return x.KodeProp
	}
	return ""
}

func (x *Sekolah) GetNamaSekolah() string {
	if x != nil {
		return x.NamaSekolah
	}
	return ""
}

func (x *Sekolah) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *Sekolah) GetAlamatJalan() string {
	if x != nil {
		return x.AlamatJalan
	}
	return ""
}

func (x *Sekolah) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SekolahDapo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SekolahId           string                 `protobuf:"bytes,1,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	Nama                string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	Npsn                string                 `protobuf:"bytes,3,opt,name=npsn,proto3" json:"npsn,omitempty"`
	Nss                 string                 `protobuf:"bytes,4,opt,name=nss,proto3" json:"nss,omitempty"`
	Alamat              string                 `protobuf:"bytes,5,opt,name=alamat,proto3" json:"alamat,omitempty"`
	KdPos               string                 `protobuf:"bytes,6,opt,name=kd_pos,json=kdPos,proto3" json:"kd_pos,omitempty"`
	Telepon             string                 `protobuf:"bytes,7,opt,name=telepon,proto3" json:"telepon,omitempty"`
	Fax                 string                 `protobuf:"bytes,8,opt,name=fax,proto3" json:"fax,omitempty"`
	Kelurahan           string                 `protobuf:"bytes,9,opt,name=kelurahan,proto3" json:"kelurahan,omitempty"`
	Kecamatan           string                 `protobuf:"bytes,10,opt,name=kecamatan,proto3" json:"kecamatan,omitempty"`
	KabKota             string                 `protobuf:"bytes,11,opt,name=kab_kota,json=kabKota,proto3" json:"kab_kota,omitempty"`
	Propinsi            string                 `protobuf:"bytes,12,opt,name=propinsi,proto3" json:"propinsi,omitempty"`
	Website             string                 `protobuf:"bytes,13,opt,name=website,proto3" json:"website,omitempty"`
	Email               string                 `protobuf:"bytes,14,opt,name=email,proto3" json:"email,omitempty"`
	NmKepsek            string                 `protobuf:"bytes,15,opt,name=nm_kepsek,json=nmKepsek,proto3" json:"nm_kepsek,omitempty"`
	NipKepsek           string                 `protobuf:"bytes,16,opt,name=nip_kepsek,json=nipKepsek,proto3" json:"nip_kepsek,omitempty"`
	NiyKepsek           string                 `protobuf:"bytes,17,opt,name=niy_kepsek,json=niyKepsek,proto3" json:"niy_kepsek,omitempty"`
	StatusKepemilikanId string                 `protobuf:"bytes,18,opt,name=status_kepemilikan_id,json=statusKepemilikanId,proto3" json:"status_kepemilikan_id,omitempty"`
	KodeAktivasi        string                 `protobuf:"bytes,19,opt,name=kode_aktivasi,json=kodeAktivasi,proto3" json:"kode_aktivasi,omitempty"`
	Jenjang             string                 `protobuf:"bytes,20,opt,name=jenjang,proto3" json:"jenjang,omitempty"`
	BentukPendidikanId  string                 `protobuf:"bytes,21,opt,name=bentuk_pendidikan_id,json=bentukPendidikanId,proto3" json:"bentuk_pendidikan_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SekolahDapo) Reset() {
	*x = SekolahDapo{}
	mi := &file_sekolah_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahDapo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahDapo) ProtoMessage() {}

func (x *SekolahDapo) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahDapo.ProtoReflect.Descriptor instead.
func (*SekolahDapo) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{1}
}

func (x *SekolahDapo) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

func (x *SekolahDapo) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *SekolahDapo) GetNpsn() string {
	if x != nil {
		return x.Npsn
	}
	return ""
}

func (x *SekolahDapo) GetNss() string {
	if x != nil {
		return x.Nss
	}
	return ""
}

func (x *SekolahDapo) GetAlamat() string {
	if x != nil {
		return x.Alamat
	}
	return ""
}

func (x *SekolahDapo) GetKdPos() string {
	if x != nil {
		return x.KdPos
	}
	return ""
}

func (x *SekolahDapo) GetTelepon() string {
	if x != nil {
		return x.Telepon
	}
	return ""
}

func (x *SekolahDapo) GetFax() string {
	if x != nil {
		return x.Fax
	}
	return ""
}

func (x *SekolahDapo) GetKelurahan() string {
	if x != nil {
		return x.Kelurahan
	}
	return ""
}

func (x *SekolahDapo) GetKecamatan() string {
	if x != nil {
		return x.Kecamatan
	}
	return ""
}

func (x *SekolahDapo) GetKabKota() string {
	if x != nil {
		return x.KabKota
	}
	return ""
}

func (x *SekolahDapo) GetPropinsi() string {
	if x != nil {
		return x.Propinsi
	}
	return ""
}

func (x *SekolahDapo) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *SekolahDapo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SekolahDapo) GetNmKepsek() string {
	if x != nil {
		return x.NmKepsek
	}
	return ""
}

func (x *SekolahDapo) GetNipKepsek() string {
	if x != nil {
		return x.NipKepsek
	}
	return ""
}

func (x *SekolahDapo) GetNiyKepsek() string {
	if x != nil {
		return x.NiyKepsek
	}
	return ""
}

func (x *SekolahDapo) GetStatusKepemilikanId() string {
	if x != nil {
		return x.StatusKepemilikanId
	}
	return ""
}

func (x *SekolahDapo) GetKodeAktivasi() string {
	if x != nil {
		return x.KodeAktivasi
	}
	return ""
}

func (x *SekolahDapo) GetJenjang() string {
	if x != nil {
		return x.Jenjang
	}
	return ""
}

func (x *SekolahDapo) GetBentukPendidikanId() string {
	if x != nil {
		return x.BentukPendidikanId
	}
	return ""
}

type TabelSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sekolah       *Sekolah               `protobuf:"bytes,1,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TabelSekolahRequest) Reset() {
	*x = TabelSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TabelSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabelSekolahRequest) ProtoMessage() {}

func (x *TabelSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabelSekolahRequest.ProtoReflect.Descriptor instead.
func (*TabelSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{2}
}

func (x *TabelSekolahRequest) GetSekolah() *Sekolah {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

type TabelSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TabelSekolahResponse) Reset() {
	*x = TabelSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TabelSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabelSekolahResponse) ProtoMessage() {}

func (x *TabelSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabelSekolahResponse.ProtoReflect.Descriptor instead.
func (*TabelSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{3}
}

func (x *TabelSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TabelSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SchoolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchoolId      string                 `protobuf:"bytes,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchoolRequest) Reset() {
	*x = SchoolRequest{}
	mi := &file_sekolah_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolRequest) ProtoMessage() {}

func (x *SchoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolRequest.ProtoReflect.Descriptor instead.
func (*SchoolRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{4}
}

func (x *SchoolRequest) GetSchoolId() string {
	if x != nil {
		return x.SchoolId
	}
	return ""
}

type SchoolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchoolName    string                 `protobuf:"bytes,1,opt,name=school_name,json=schoolName,proto3" json:"school_name,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchoolResponse) Reset() {
	*x = SchoolResponse{}
	mi := &file_sekolah_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolResponse) ProtoMessage() {}

func (x *SchoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolResponse.ProtoReflect.Descriptor instead.
func (*SchoolResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{5}
}

func (x *SchoolResponse) GetSchoolName() string {
	if x != nil {
		return x.SchoolName
	}
	return ""
}

func (x *SchoolResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type SekolahTabelTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SekolahId     int32                  `protobuf:"varint,1,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SekolahTabelTenantRequest) Reset() {
	*x = SekolahTabelTenantRequest{}
	mi := &file_sekolah_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahTabelTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahTabelTenantRequest) ProtoMessage() {}

func (x *SekolahTabelTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahTabelTenantRequest.ProtoReflect.Descriptor instead.
func (*SekolahTabelTenantRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{6}
}

func (x *SekolahTabelTenantRequest) GetSekolahId() int32 {
	if x != nil {
		return x.SekolahId
	}
	return 0
}

type SekolahTabelTenantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SekolahId     int32                  `protobuf:"varint,1,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	Nama          string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	NamaSchema    string                 `protobuf:"bytes,3,opt,name=nama_schema,json=namaSchema,proto3" json:"nama_schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SekolahTabelTenantResponse) Reset() {
	*x = SekolahTabelTenantResponse{}
	mi := &file_sekolah_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SekolahTabelTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SekolahTabelTenantResponse) ProtoMessage() {}

func (x *SekolahTabelTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SekolahTabelTenantResponse.ProtoReflect.Descriptor instead.
func (*SekolahTabelTenantResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{7}
}

func (x *SekolahTabelTenantResponse) GetSekolahId() int32 {
	if x != nil {
		return x.SekolahId
	}
	return 0
}

func (x *SekolahTabelTenantResponse) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *SekolahTabelTenantResponse) GetNamaSchema() string {
	if x != nil {
		return x.NamaSchema
	}
	return ""
}

type CreateSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Sekolah       *SekolahDapo           `protobuf:"bytes,2,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSekolahRequest) Reset() {
	*x = CreateSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSekolahRequest) ProtoMessage() {}

func (x *CreateSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSekolahRequest.ProtoReflect.Descriptor instead.
func (*CreateSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateSekolahRequest) GetSekolah() *SekolahDapo {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

type CreateSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSekolahResponse) Reset() {
	*x = CreateSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSekolahResponse) ProtoMessage() {}

func (x *CreateSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSekolahResponse.ProtoReflect.Descriptor instead.
func (*CreateSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSekolahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSekolahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetSekolahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SekolahId     string                 `protobuf:"bytes,2,opt,name=sekolah_id,json=sekolahId,proto3" json:"sekolah_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSekolahRequest) Reset() {
	*x = GetSekolahRequest{}
	mi := &file_sekolah_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSekolahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSekolahRequest) ProtoMessage() {}

func (x *GetSekolahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSekolahRequest.ProtoReflect.Descriptor instead.
func (*GetSekolahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{10}
}

func (x *GetSekolahRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetSekolahRequest) GetSekolahId() string {
	if x != nil {
		return x.SekolahId
	}
	return ""
}

type GetSekolahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sekolah       *SekolahDapo           `protobuf:"bytes,1,opt,name=sekolah,proto3" json:"sekolah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSekolahResponse) Reset() {
	*x = GetSekolahResponse{}
	mi := &file_sekolah_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSekolahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSekolahResponse) ProtoMessage() {}

func (x *GetSekolahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSekolahResponse.ProtoReflect.Descriptor instead.
func (*GetSekolahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{11}
}

func (x *GetSekolahResponse) GetSekolah() *SekolahDapo {
	if x != nil {
		return x.Sekolah
	}
	return nil
}

// Siswa Structure
type Siswa struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PesertaDidikID  string                 `protobuf:"bytes,1,opt,name=PesertaDidikID,proto3" json:"PesertaDidikID,omitempty"`
	NIS             string                 `protobuf:"bytes,2,opt,name=NIS,proto3" json:"NIS,omitempty"`
	NISN            string                 `protobuf:"bytes,3,opt,name=NISN,proto3" json:"NISN,omitempty"`
	NamaSiswa       string                 `protobuf:"bytes,4,opt,name=NamaSiswa,proto3" json:"NamaSiswa,omitempty"`
	TempatLahir     string                 `protobuf:"bytes,5,opt,name=TempatLahir,proto3" json:"TempatLahir,omitempty"`
	TanggalLahir    string                 `protobuf:"bytes,6,opt,name=TanggalLahir,proto3" json:"TanggalLahir,omitempty"`
	JenisKelamin    string                 `protobuf:"bytes,7,opt,name=JenisKelamin,proto3" json:"JenisKelamin,omitempty"`
	Agama           string                 `protobuf:"bytes,8,opt,name=Agama,proto3" json:"Agama,omitempty"`
	AlamatSiswa     string                 `protobuf:"bytes,9,opt,name=AlamatSiswa,proto3" json:"AlamatSiswa,omitempty"`
	TeleponSiswa    string                 `protobuf:"bytes,10,opt,name=TeleponSiswa,proto3" json:"TeleponSiswa,omitempty"`
	DiterimaTanggal string                 `protobuf:"bytes,11,opt,name=DiterimaTanggal,proto3" json:"DiterimaTanggal,omitempty"`
	NamaAyah        string                 `protobuf:"bytes,12,opt,name=NamaAyah,proto3" json:"NamaAyah,omitempty"`
	NamaIbu         string                 `protobuf:"bytes,13,opt,name=NamaIbu,proto3" json:"NamaIbu,omitempty"`
	PekerjaanAyah   string                 `protobuf:"bytes,14,opt,name=PekerjaanAyah,proto3" json:"PekerjaanAyah,omitempty"`
	PekerjaanIbu    string                 `protobuf:"bytes,15,opt,name=PekerjaanIbu,proto3" json:"PekerjaanIbu,omitempty"`
	NamaWali        string                 `protobuf:"bytes,16,opt,name=NamaWali,proto3" json:"NamaWali,omitempty"`
	PekerjaanWali   string                 `protobuf:"bytes,17,opt,name=PekerjaanWali,proto3" json:"PekerjaanWali,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Siswa) Reset() {
	*x = Siswa{}
	mi := &file_sekolah_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Siswa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Siswa) ProtoMessage() {}

func (x *Siswa) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Siswa.ProtoReflect.Descriptor instead.
func (*Siswa) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{12}
}

func (x *Siswa) GetPesertaDidikID() string {
	if x != nil {
		return x.PesertaDidikID
	}
	return ""
}

func (x *Siswa) GetNIS() string {
	if x != nil {
		return x.NIS
	}
	return ""
}

func (x *Siswa) GetNISN() string {
	if x != nil {
		return x.NISN
	}
	return ""
}

func (x *Siswa) GetNamaSiswa() string {
	if x != nil {
		return x.NamaSiswa
	}
	return ""
}

func (x *Siswa) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *Siswa) GetTanggalLahir() string {
	if x != nil {
		return x.TanggalLahir
	}
	return ""
}

func (x *Siswa) GetJenisKelamin() string {
	if x != nil {
		return x.JenisKelamin
	}
	return ""
}

func (x *Siswa) GetAgama() string {
	if x != nil {
		return x.Agama
	}
	return ""
}

func (x *Siswa) GetAlamatSiswa() string {
	if x != nil {
		return x.AlamatSiswa
	}
	return ""
}

func (x *Siswa) GetTeleponSiswa() string {
	if x != nil {
		return x.TeleponSiswa
	}
	return ""
}

func (x *Siswa) GetDiterimaTanggal() string {
	if x != nil {
		return x.DiterimaTanggal
	}
	return ""
}

func (x *Siswa) GetNamaAyah() string {
	if x != nil {
		return x.NamaAyah
	}
	return ""
}

func (x *Siswa) GetNamaIbu() string {
	if x != nil {
		return x.NamaIbu
	}
	return ""
}

func (x *Siswa) GetPekerjaanAyah() string {
	if x != nil {
		return x.PekerjaanAyah
	}
	return ""
}

func (x *Siswa) GetPekerjaanIbu() string {
	if x != nil {
		return x.PekerjaanIbu
	}
	return ""
}

func (x *Siswa) GetNamaWali() string {
	if x != nil {
		return x.NamaWali
	}
	return ""
}

func (x *Siswa) GetPekerjaanWali() string {
	if x != nil {
		return x.PekerjaanWali
	}
	return ""
}

type SiswaPelengkap struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PelengkapSiswaID string                 `protobuf:"bytes,1,opt,name=PelengkapSiswaID,proto3" json:"PelengkapSiswaID,omitempty"`
	PesertaDidikID   string                 `protobuf:"bytes,2,opt,name=PesertaDidikID,proto3" json:"PesertaDidikID,omitempty"`
	StatusDalamKel   string                 `protobuf:"bytes,3,opt,name=StatusDalamKel,proto3" json:"StatusDalamKel,omitempty"`
	AnakKe           string                 `protobuf:"bytes,4,opt,name=AnakKe,proto3" json:"AnakKe,omitempty"`
	SekolahAsal      string                 `protobuf:"bytes,5,opt,name=SekolahAsal,proto3" json:"SekolahAsal,omitempty"`
	DiterimaKelas    string                 `protobuf:"bytes,6,opt,name=DiterimaKelas,proto3" json:"DiterimaKelas,omitempty"`
	AlamatOrtu       string                 `protobuf:"bytes,7,opt,name=AlamatOrtu,proto3" json:"AlamatOrtu,omitempty"`
	TeleponOrtu      string                 `protobuf:"bytes,8,opt,name=TeleponOrtu,proto3" json:"TeleponOrtu,omitempty"`
	AlamatWali       string                 `protobuf:"bytes,9,opt,name=AlamatWali,proto3" json:"AlamatWali,omitempty"`
	TeleponWali      string                 `protobuf:"bytes,10,opt,name=TeleponWali,proto3" json:"TeleponWali,omitempty"`
	FotoSiswa        string                 `protobuf:"bytes,11,opt,name=FotoSiswa,proto3" json:"FotoSiswa,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SiswaPelengkap) Reset() {
	*x = SiswaPelengkap{}
	mi := &file_sekolah_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiswaPelengkap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiswaPelengkap) ProtoMessage() {}

func (x *SiswaPelengkap) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiswaPelengkap.ProtoReflect.Descriptor instead.
func (*SiswaPelengkap) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{13}
}

func (x *SiswaPelengkap) GetPelengkapSiswaID() string {
	if x != nil {
		return x.PelengkapSiswaID
	}
	return ""
}

func (x *SiswaPelengkap) GetPesertaDidikID() string {
	if x != nil {
		return x.PesertaDidikID
	}
	return ""
}

func (x *SiswaPelengkap) GetStatusDalamKel() string {
	if x != nil {
		return x.StatusDalamKel
	}
	return ""
}

func (x *SiswaPelengkap) GetAnakKe() string {
	if x != nil {
		return x.AnakKe
	}
	return ""
}

func (x *SiswaPelengkap) GetSekolahAsal() string {
	if x != nil {
		return x.SekolahAsal
	}
	return ""
}

func (x *SiswaPelengkap) GetDiterimaKelas() string {
	if x != nil {
		return x.DiterimaKelas
	}
	return ""
}

func (x *SiswaPelengkap) GetAlamatOrtu() string {
	if x != nil {
		return x.AlamatOrtu
	}
	return ""
}

func (x *SiswaPelengkap) GetTeleponOrtu() string {
	if x != nil {
		return x.TeleponOrtu
	}
	return ""
}

func (x *SiswaPelengkap) GetAlamatWali() string {
	if x != nil {
		return x.AlamatWali
	}
	return ""
}

func (x *SiswaPelengkap) GetTeleponWali() string {
	if x != nil {
		return x.TeleponWali
	}
	return ""
}

func (x *SiswaPelengkap) GetFotoSiswa() string {
	if x != nil {
		return x.FotoSiswa
	}
	return ""
}

// Siswa CRUD
type CreateSiswaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Siswa         *Siswa                 `protobuf:"bytes,2,opt,name=siswa,proto3" json:"siswa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSiswaRequest) Reset() {
	*x = CreateSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSiswaRequest) ProtoMessage() {}

func (x *CreateSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSiswaRequest.ProtoReflect.Descriptor instead.
func (*CreateSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{14}
}

func (x *CreateSiswaRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateSiswaRequest) GetSiswa() *Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

type CreateSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSiswaResponse) Reset() {
	*x = CreateSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSiswaResponse) ProtoMessage() {}

func (x *CreateSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSiswaResponse.ProtoReflect.Descriptor instead.
func (*CreateSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{15}
}

func (x *CreateSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetSiswaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SiswaId       string                 `protobuf:"bytes,2,opt,name=siswa_id,json=siswaId,proto3" json:"siswa_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSiswaRequest) Reset() {
	*x = GetSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSiswaRequest) ProtoMessage() {}

func (x *GetSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSiswaRequest.ProtoReflect.Descriptor instead.
func (*GetSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{16}
}

func (x *GetSiswaRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetSiswaRequest) GetSiswaId() string {
	if x != nil {
		return x.SiswaId
	}
	return ""
}

type GetSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Siswa         *Siswa                 `protobuf:"bytes,1,opt,name=siswa,proto3" json:"siswa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSiswaResponse) Reset() {
	*x = GetSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSiswaResponse) ProtoMessage() {}

func (x *GetSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSiswaResponse.ProtoReflect.Descriptor instead.
func (*GetSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{17}
}

func (x *GetSiswaResponse) GetSiswa() *Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

type UpdateSiswaRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Schemaname     string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Siswa          *Siswa                 `protobuf:"bytes,2,opt,name=siswa,proto3" json:"siswa,omitempty"`
	SiswaPelengkap *SiswaPelengkap        `protobuf:"bytes,3,opt,name=siswa_pelengkap,json=siswaPelengkap,proto3" json:"siswa_pelengkap,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateSiswaRequest) Reset() {
	*x = UpdateSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSiswaRequest) ProtoMessage() {}

func (x *UpdateSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSiswaRequest.ProtoReflect.Descriptor instead.
func (*UpdateSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateSiswaRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateSiswaRequest) GetSiswa() *Siswa {
	if x != nil {
		return x.Siswa
	}
	return nil
}

func (x *UpdateSiswaRequest) GetSiswaPelengkap() *SiswaPelengkap {
	if x != nil {
		return x.SiswaPelengkap
	}
	return nil
}

type UpdateSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSiswaResponse) Reset() {
	*x = UpdateSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSiswaResponse) ProtoMessage() {}

func (x *UpdateSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSiswaResponse.ProtoReflect.Descriptor instead.
func (*UpdateSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteSiswaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	SiswaId       string                 `protobuf:"bytes,2,opt,name=siswa_id,json=siswaId,proto3" json:"siswa_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSiswaRequest) Reset() {
	*x = DeleteSiswaRequest{}
	mi := &file_sekolah_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSiswaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSiswaRequest) ProtoMessage() {}

func (x *DeleteSiswaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSiswaRequest.ProtoReflect.Descriptor instead.
func (*DeleteSiswaRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteSiswaRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteSiswaRequest) GetSiswaId() string {
	if x != nil {
		return x.SiswaId
	}
	return ""
}

type DeleteSiswaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSiswaResponse) Reset() {
	*x = DeleteSiswaResponse{}
	mi := &file_sekolah_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSiswaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSiswaResponse) ProtoMessage() {}

func (x *DeleteSiswaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSiswaResponse.ProtoReflect.Descriptor instead.
func (*DeleteSiswaResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteSiswaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteSiswaResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type NilaiAkhir struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NilaiId       string                 `protobuf:"bytes,1,opt,name=nilai_id,json=nilaiId,proto3" json:"nilai_id,omitempty"`
	SiswaId       string                 `protobuf:"bytes,2,opt,name=siswa_id,json=siswaId,proto3" json:"siswa_id,omitempty"`
	MapelId       string                 `protobuf:"bytes,3,opt,name=mapel_id,json=mapelId,proto3" json:"mapel_id,omitempty"`
	Nilai         float64                `protobuf:"fixed64,4,opt,name=nilai,proto3" json:"nilai,omitempty"`
	Keterangan    string                 `protobuf:"bytes,5,opt,name=keterangan,proto3" json:"keterangan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NilaiAkhir) Reset() {
	*x = NilaiAkhir{}
	mi := &file_sekolah_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NilaiAkhir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilaiAkhir) ProtoMessage() {}

func (x *NilaiAkhir) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilaiAkhir.ProtoReflect.Descriptor instead.
func (*NilaiAkhir) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{22}
}

func (x *NilaiAkhir) GetNilaiId() string {
	if x != nil {
		return x.NilaiId
	}
	return ""
}

func (x *NilaiAkhir) GetSiswaId() string {
	if x != nil {
		return x.SiswaId
	}
	return ""
}

func (x *NilaiAkhir) GetMapelId() string {
	if x != nil {
		return x.MapelId
	}
	return ""
}

func (x *NilaiAkhir) GetNilai() float64 {
	if x != nil {
		return x.Nilai
	}
	return 0
}

func (x *NilaiAkhir) GetKeterangan() string {
	if x != nil {
		return x.Keterangan
	}
	return ""
}

type CreateNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Nilai         *NilaiAkhir            `protobuf:"bytes,2,opt,name=nilai,proto3" json:"nilai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNilaiAkhirRequest) Reset() {
	*x = CreateNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNilaiAkhirRequest) ProtoMessage() {}

func (x *CreateNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*CreateNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{23}
}

func (x *CreateNilaiAkhirRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateNilaiAkhirRequest) GetNilai() *NilaiAkhir {
	if x != nil {
		return x.Nilai
	}
	return nil
}

type CreateNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNilaiAkhirResponse) Reset() {
	*x = CreateNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNilaiAkhirResponse) ProtoMessage() {}

func (x *CreateNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*CreateNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{24}
}

func (x *CreateNilaiAkhirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateNilaiAkhirResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	NilaiId       string                 `protobuf:"bytes,2,opt,name=nilai_id,json=nilaiId,proto3" json:"nilai_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNilaiAkhirRequest) Reset() {
	*x = GetNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNilaiAkhirRequest) ProtoMessage() {}

func (x *GetNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*GetNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{25}
}

func (x *GetNilaiAkhirRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetNilaiAkhirRequest) GetNilaiId() string {
	if x != nil {
		return x.NilaiId
	}
	return ""
}

type GetNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nilai         *NilaiAkhir            `protobuf:"bytes,1,opt,name=nilai,proto3" json:"nilai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNilaiAkhirResponse) Reset() {
	*x = GetNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNilaiAkhirResponse) ProtoMessage() {}

func (x *GetNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*GetNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{26}
}

func (x *GetNilaiAkhirResponse) GetNilai() *NilaiAkhir {
	if x != nil {
		return x.Nilai
	}
	return nil
}

type UpdateNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Nilai         *NilaiAkhir            `protobuf:"bytes,2,opt,name=nilai,proto3" json:"nilai,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNilaiAkhirRequest) Reset() {
	*x = UpdateNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNilaiAkhirRequest) ProtoMessage() {}

func (x *UpdateNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*UpdateNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateNilaiAkhirRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateNilaiAkhirRequest) GetNilai() *NilaiAkhir {
	if x != nil {
		return x.Nilai
	}
	return nil
}

type UpdateNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNilaiAkhirResponse) Reset() {
	*x = UpdateNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNilaiAkhirResponse) ProtoMessage() {}

func (x *UpdateNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*UpdateNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateNilaiAkhirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateNilaiAkhirResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteNilaiAkhirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	NilaiId       string                 `protobuf:"bytes,2,opt,name=nilai_id,json=nilaiId,proto3" json:"nilai_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNilaiAkhirRequest) Reset() {
	*x = DeleteNilaiAkhirRequest{}
	mi := &file_sekolah_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNilaiAkhirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNilaiAkhirRequest) ProtoMessage() {}

func (x *DeleteNilaiAkhirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNilaiAkhirRequest.ProtoReflect.Descriptor instead.
func (*DeleteNilaiAkhirRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteNilaiAkhirRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteNilaiAkhirRequest) GetNilaiId() string {
	if x != nil {
		return x.NilaiId
	}
	return ""
}

type DeleteNilaiAkhirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNilaiAkhirResponse) Reset() {
	*x = DeleteNilaiAkhirResponse{}
	mi := &file_sekolah_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNilaiAkhirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNilaiAkhirResponse) ProtoMessage() {}

func (x *DeleteNilaiAkhirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNilaiAkhirResponse.ProtoReflect.Descriptor instead.
func (*DeleteNilaiAkhirResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteNilaiAkhirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteNilaiAkhirResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Mapel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MapelId       string                 `protobuf:"bytes,1,opt,name=mapel_id,json=mapelId,proto3" json:"mapel_id,omitempty"`
	NamaMapel     string                 `protobuf:"bytes,2,opt,name=nama_mapel,json=namaMapel,proto3" json:"nama_mapel,omitempty"`
	Deskripsi     string                 `protobuf:"bytes,3,opt,name=deskripsi,proto3" json:"deskripsi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mapel) Reset() {
	*x = Mapel{}
	mi := &file_sekolah_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mapel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mapel) ProtoMessage() {}

func (x *Mapel) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mapel.ProtoReflect.Descriptor instead.
func (*Mapel) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{31}
}

func (x *Mapel) GetMapelId() string {
	if x != nil {
		return x.MapelId
	}
	return ""
}

func (x *Mapel) GetNamaMapel() string {
	if x != nil {
		return x.NamaMapel
	}
	return ""
}

func (x *Mapel) GetDeskripsi() string {
	if x != nil {
		return x.Deskripsi
	}
	return ""
}

type CreateMapelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mapel         *Mapel                 `protobuf:"bytes,1,opt,name=mapel,proto3" json:"mapel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMapelRequest) Reset() {
	*x = CreateMapelRequest{}
	mi := &file_sekolah_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMapelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMapelRequest) ProtoMessage() {}

func (x *CreateMapelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMapelRequest.ProtoReflect.Descriptor instead.
func (*CreateMapelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{32}
}

func (x *CreateMapelRequest) GetMapel() *Mapel {
	if x != nil {
		return x.Mapel
	}
	return nil
}

type CreateMapelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMapelResponse) Reset() {
	*x = CreateMapelResponse{}
	mi := &file_sekolah_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMapelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMapelResponse) ProtoMessage() {}

func (x *CreateMapelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMapelResponse.ProtoReflect.Descriptor instead.
func (*CreateMapelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{33}
}

func (x *CreateMapelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateMapelResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetMapelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MapelId       string                 `protobuf:"bytes,1,opt,name=mapel_id,json=mapelId,proto3" json:"mapel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMapelRequest) Reset() {
	*x = GetMapelRequest{}
	mi := &file_sekolah_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMapelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapelRequest) ProtoMessage() {}

func (x *GetMapelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapelRequest.ProtoReflect.Descriptor instead.
func (*GetMapelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{34}
}

func (x *GetMapelRequest) GetMapelId() string {
	if x != nil {
		return x.MapelId
	}
	return ""
}

type GetMapelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mapel         *Mapel                 `protobuf:"bytes,1,opt,name=mapel,proto3" json:"mapel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMapelResponse) Reset() {
	*x = GetMapelResponse{}
	mi := &file_sekolah_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMapelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapelResponse) ProtoMessage() {}

func (x *GetMapelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapelResponse.ProtoReflect.Descriptor instead.
func (*GetMapelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{35}
}

func (x *GetMapelResponse) GetMapel() *Mapel {
	if x != nil {
		return x.Mapel
	}
	return nil
}

type UpdateMapelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mapel         *Mapel                 `protobuf:"bytes,1,opt,name=mapel,proto3" json:"mapel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMapelRequest) Reset() {
	*x = UpdateMapelRequest{}
	mi := &file_sekolah_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMapelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMapelRequest) ProtoMessage() {}

func (x *UpdateMapelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMapelRequest.ProtoReflect.Descriptor instead.
func (*UpdateMapelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateMapelRequest) GetMapel() *Mapel {
	if x != nil {
		return x.Mapel
	}
	return nil
}

type UpdateMapelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMapelResponse) Reset() {
	*x = UpdateMapelResponse{}
	mi := &file_sekolah_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMapelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMapelResponse) ProtoMessage() {}

func (x *UpdateMapelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMapelResponse.ProtoReflect.Descriptor instead.
func (*UpdateMapelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateMapelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateMapelResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteMapelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MapelId       string                 `protobuf:"bytes,1,opt,name=mapel_id,json=mapelId,proto3" json:"mapel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMapelRequest) Reset() {
	*x = DeleteMapelRequest{}
	mi := &file_sekolah_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMapelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMapelRequest) ProtoMessage() {}

func (x *DeleteMapelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMapelRequest.ProtoReflect.Descriptor instead.
func (*DeleteMapelRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteMapelRequest) GetMapelId() string {
	if x != nil {
		return x.MapelId
	}
	return ""
}

type DeleteMapelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMapelResponse) Reset() {
	*x = DeleteMapelResponse{}
	mi := &file_sekolah_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMapelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMapelResponse) ProtoMessage() {}

func (x *DeleteMapelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMapelResponse.ProtoReflect.Descriptor instead.
func (*DeleteMapelResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteMapelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteMapelResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Kelas struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RombonganBelajarID  string                 `protobuf:"bytes,1,opt,name=RombonganBelajarID,proto3" json:"RombonganBelajarID,omitempty"`
	SekolahID           string                 `protobuf:"bytes,2,opt,name=SekolahID,proto3" json:"SekolahID,omitempty"`
	SemesterID          string                 `protobuf:"bytes,3,opt,name=SemesterID,proto3" json:"SemesterID,omitempty"`
	JurusanID           string                 `protobuf:"bytes,4,opt,name=JurusanID,proto3" json:"JurusanID,omitempty"`
	PtkID               string                 `protobuf:"bytes,5,opt,name=PtkID,proto3" json:"PtkID,omitempty"`
	NmKelas             string                 `protobuf:"bytes,6,opt,name=NmKelas,proto3" json:"NmKelas,omitempty"`
	TingkatPendidikanID string                 `protobuf:"bytes,7,opt,name=TingkatPendidikanID,proto3" json:"TingkatPendidikanID,omitempty"`
	JenisRombel         string                 `protobuf:"bytes,8,opt,name=JenisRombel,proto3" json:"JenisRombel,omitempty"`
	NamaJurusanSP       string                 `protobuf:"bytes,9,opt,name=NamaJurusanSP,proto3" json:"NamaJurusanSP,omitempty"`
	JurusanSpID         string                 `protobuf:"bytes,10,opt,name=JurusanSpID,proto3" json:"JurusanSpID,omitempty"`
	KurikulumID         string                 `protobuf:"bytes,11,opt,name=KurikulumID,proto3" json:"KurikulumID,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Kelas) Reset() {
	*x = Kelas{}
	mi := &file_sekolah_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kelas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kelas) ProtoMessage() {}

func (x *Kelas) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kelas.ProtoReflect.Descriptor instead.
func (*Kelas) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{40}
}

func (x *Kelas) GetRombonganBelajarID() string {
	if x != nil {
		return x.RombonganBelajarID
	}
	return ""
}

func (x *Kelas) GetSekolahID() string {
	if x != nil {
		return x.SekolahID
	}
	return ""
}

func (x *Kelas) GetSemesterID() string {
	if x != nil {
		return x.SemesterID
	}
	return ""
}

func (x *Kelas) GetJurusanID() string {
	if x != nil {
		return x.JurusanID
	}
	return ""
}

func (x *Kelas) GetPtkID() string {
	if x != nil {
		return x.PtkID
	}
	return ""
}

func (x *Kelas) GetNmKelas() string {
	if x != nil {
		return x.NmKelas
	}
	return ""
}

func (x *Kelas) GetTingkatPendidikanID() string {
	if x != nil {
		return x.TingkatPendidikanID
	}
	return ""
}

func (x *Kelas) GetJenisRombel() string {
	if x != nil {
		return x.JenisRombel
	}
	return ""
}

func (x *Kelas) GetNamaJurusanSP() string {
	if x != nil {
		return x.NamaJurusanSP
	}
	return ""
}

func (x *Kelas) GetJurusanSpID() string {
	if x != nil {
		return x.JurusanSpID
	}
	return ""
}

func (x *Kelas) GetKurikulumID() string {
	if x != nil {
		return x.KurikulumID
	}
	return ""
}

type CreateKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Kelas         *Kelas                 `protobuf:"bytes,2,opt,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKelasRequest) Reset() {
	*x = CreateKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKelasRequest) ProtoMessage() {}

func (x *CreateKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKelasRequest.ProtoReflect.Descriptor instead.
func (*CreateKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{41}
}

func (x *CreateKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateKelasRequest) GetKelas() *Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type CreateKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKelasResponse) Reset() {
	*x = CreateKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKelasResponse) ProtoMessage() {}

func (x *CreateKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKelasResponse.ProtoReflect.Descriptor instead.
func (*CreateKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{42}
}

func (x *CreateKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	KelasId       string                 `protobuf:"bytes,2,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKelasRequest) Reset() {
	*x = GetKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKelasRequest) ProtoMessage() {}

func (x *GetKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKelasRequest.ProtoReflect.Descriptor instead.
func (*GetKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{43}
}

func (x *GetKelasRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

type GetKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kelas         *Kelas                 `protobuf:"bytes,1,opt,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKelasResponse) Reset() {
	*x = GetKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKelasResponse) ProtoMessage() {}

func (x *GetKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKelasResponse.ProtoReflect.Descriptor instead.
func (*GetKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{44}
}

func (x *GetKelasResponse) GetKelas() *Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type UpdateKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KelasId       string                 `protobuf:"bytes,1,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	Kelas         *Kelas                 `protobuf:"bytes,2,opt,name=kelas,proto3" json:"kelas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKelasRequest) Reset() {
	*x = UpdateKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKelasRequest) ProtoMessage() {}

func (x *UpdateKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKelasRequest.ProtoReflect.Descriptor instead.
func (*UpdateKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

func (x *UpdateKelasRequest) GetKelas() *Kelas {
	if x != nil {
		return x.Kelas
	}
	return nil
}

type UpdateKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateKelasResponse) Reset() {
	*x = UpdateKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKelasResponse) ProtoMessage() {}

func (x *UpdateKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKelasResponse.ProtoReflect.Descriptor instead.
func (*UpdateKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteKelasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KelasId       string                 `protobuf:"bytes,1,opt,name=kelas_id,json=kelasId,proto3" json:"kelas_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteKelasRequest) Reset() {
	*x = DeleteKelasRequest{}
	mi := &file_sekolah_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKelasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKelasRequest) ProtoMessage() {}

func (x *DeleteKelasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKelasRequest.ProtoReflect.Descriptor instead.
func (*DeleteKelasRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteKelasRequest) GetKelasId() string {
	if x != nil {
		return x.KelasId
	}
	return ""
}

type DeleteKelasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteKelasResponse) Reset() {
	*x = DeleteKelasResponse{}
	mi := &file_sekolah_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKelasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKelasResponse) ProtoMessage() {}

func (x *DeleteKelasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKelasResponse.ProtoReflect.Descriptor instead.
func (*DeleteKelasResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteKelasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteKelasResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Ijazah struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	ID                          string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PesertaDidikID              string                 `protobuf:"bytes,2,opt,name=PesertaDidikID,proto3" json:"PesertaDidikID,omitempty"`
	Nama                        string                 `protobuf:"bytes,3,opt,name=Nama,proto3" json:"Nama,omitempty"`
	Nis                         string                 `protobuf:"bytes,4,opt,name=Nis,proto3" json:"Nis,omitempty"`
	NISN                        string                 `protobuf:"bytes,5,opt,name=NISN,proto3" json:"NISN,omitempty"`
	NPSN                        string                 `protobuf:"bytes,6,opt,name=NPSN,proto3" json:"NPSN,omitempty"`
	NoIjazah                    string                 `protobuf:"bytes,7,opt,name=NoIjazah,proto3" json:"NoIjazah,omitempty"`
	TempatLahir                 string                 `protobuf:"bytes,8,opt,name=TempatLahir,proto3" json:"TempatLahir,omitempty"`
	TanggalLahir                string                 `protobuf:"bytes,9,opt,name=TanggalLahir,proto3" json:"TanggalLahir,omitempty"`
	NamaOrtuWali                string                 `protobuf:"bytes,10,opt,name=NamaOrtuWali,proto3" json:"NamaOrtuWali,omitempty"`
	PaketKeahlian               string                 `protobuf:"bytes,11,opt,name=PaketKeahlian,proto3" json:"PaketKeahlian,omitempty"`
	KabupatenKota               string                 `protobuf:"bytes,12,opt,name=KabupatenKota,proto3" json:"KabupatenKota,omitempty"`
	Provinsi                    string                 `protobuf:"bytes,13,opt,name=Provinsi,proto3" json:"Provinsi,omitempty"`
	ProgramKeahlian             string                 `protobuf:"bytes,14,opt,name=ProgramKeahlian,proto3" json:"ProgramKeahlian,omitempty"`
	SekolahPenyelenggaraUjianUS string                 `protobuf:"bytes,15,opt,name=SekolahPenyelenggaraUjianUS,proto3" json:"SekolahPenyelenggaraUjianUS,omitempty"`
	SekolahPenyelenggaraUjianUN string                 `protobuf:"bytes,16,opt,name=SekolahPenyelenggaraUjianUN,proto3" json:"SekolahPenyelenggaraUjianUN,omitempty"`
	AsalSekolah                 string                 `protobuf:"bytes,17,opt,name=AsalSekolah,proto3" json:"AsalSekolah,omitempty"`
	NomorIjazah                 string                 `protobuf:"bytes,18,opt,name=NomorIjazah,proto3" json:"NomorIjazah,omitempty"`
	TempatIjazah                string                 `protobuf:"bytes,19,opt,name=TempatIjazah,proto3" json:"TempatIjazah,omitempty"`
	TanggalIjazah               string                 `protobuf:"bytes,20,opt,name=TanggalIjazah,proto3" json:"TanggalIjazah,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Ijazah) Reset() {
	*x = Ijazah{}
	mi := &file_sekolah_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ijazah) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ijazah) ProtoMessage() {}

func (x *Ijazah) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ijazah.ProtoReflect.Descriptor instead.
func (*Ijazah) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{49}
}

func (x *Ijazah) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Ijazah) GetPesertaDidikID() string {
	if x != nil {
		return x.PesertaDidikID
	}
	return ""
}

func (x *Ijazah) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *Ijazah) GetNis() string {
	if x != nil {
		return x.Nis
	}
	return ""
}

func (x *Ijazah) GetNISN() string {
	if x != nil {
		return x.NISN
	}
	return ""
}

func (x *Ijazah) GetNPSN() string {
	if x != nil {
		return x.NPSN
	}
	return ""
}

func (x *Ijazah) GetNoIjazah() string {
	if x != nil {
		return x.NoIjazah
	}
	return ""
}

func (x *Ijazah) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *Ijazah) GetTanggalLahir() string {
	if x != nil {
		return x.TanggalLahir
	}
	return ""
}

func (x *Ijazah) GetNamaOrtuWali() string {
	if x != nil {
		return x.NamaOrtuWali
	}
	return ""
}

func (x *Ijazah) GetPaketKeahlian() string {
	if x != nil {
		return x.PaketKeahlian
	}
	return ""
}

func (x *Ijazah) GetKabupatenKota() string {
	if x != nil {
		return x.KabupatenKota
	}
	return ""
}

func (x *Ijazah) GetProvinsi() string {
	if x != nil {
		return x.Provinsi
	}
	return ""
}

func (x *Ijazah) GetProgramKeahlian() string {
	if x != nil {
		return x.ProgramKeahlian
	}
	return ""
}

func (x *Ijazah) GetSekolahPenyelenggaraUjianUS() string {
	if x != nil {
		return x.SekolahPenyelenggaraUjianUS
	}
	return ""
}

func (x *Ijazah) GetSekolahPenyelenggaraUjianUN() string {
	if x != nil {
		return x.SekolahPenyelenggaraUjianUN
	}
	return ""
}

func (x *Ijazah) GetAsalSekolah() string {
	if x != nil {
		return x.AsalSekolah
	}
	return ""
}

func (x *Ijazah) GetNomorIjazah() string {
	if x != nil {
		return x.NomorIjazah
	}
	return ""
}

func (x *Ijazah) GetTempatIjazah() string {
	if x != nil {
		return x.TempatIjazah
	}
	return ""
}

func (x *Ijazah) GetTanggalIjazah() string {
	if x != nil {
		return x.TanggalIjazah
	}
	return ""
}

type CreateIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ijazah        *Ijazah                `protobuf:"bytes,1,opt,name=ijazah,proto3" json:"ijazah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIjazahRequest) Reset() {
	*x = CreateIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIjazahRequest) ProtoMessage() {}

func (x *CreateIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIjazahRequest.ProtoReflect.Descriptor instead.
func (*CreateIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{50}
}

func (x *CreateIjazahRequest) GetIjazah() *Ijazah {
	if x != nil {
		return x.Ijazah
	}
	return nil
}

type CreateIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIjazahResponse) Reset() {
	*x = CreateIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIjazahResponse) ProtoMessage() {}

func (x *CreateIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIjazahResponse.ProtoReflect.Descriptor instead.
func (*CreateIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{51}
}

func (x *CreateIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IjazahId      string                 `protobuf:"bytes,1,opt,name=ijazah_id,json=ijazahId,proto3" json:"ijazah_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIjazahRequest) Reset() {
	*x = GetIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIjazahRequest) ProtoMessage() {}

func (x *GetIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIjazahRequest.ProtoReflect.Descriptor instead.
func (*GetIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{52}
}

func (x *GetIjazahRequest) GetIjazahId() string {
	if x != nil {
		return x.IjazahId
	}
	return ""
}

type GetIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ijazah        *Ijazah                `protobuf:"bytes,1,opt,name=ijazah,proto3" json:"ijazah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIjazahResponse) Reset() {
	*x = GetIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIjazahResponse) ProtoMessage() {}

func (x *GetIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIjazahResponse.ProtoReflect.Descriptor instead.
func (*GetIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{53}
}

func (x *GetIjazahResponse) GetIjazah() *Ijazah {
	if x != nil {
		return x.Ijazah
	}
	return nil
}

type UpdateIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ijazah        *Ijazah                `protobuf:"bytes,1,opt,name=ijazah,proto3" json:"ijazah,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateIjazahRequest) Reset() {
	*x = UpdateIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIjazahRequest) ProtoMessage() {}

func (x *UpdateIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIjazahRequest.ProtoReflect.Descriptor instead.
func (*UpdateIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateIjazahRequest) GetIjazah() *Ijazah {
	if x != nil {
		return x.Ijazah
	}
	return nil
}

type UpdateIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateIjazahResponse) Reset() {
	*x = UpdateIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIjazahResponse) ProtoMessage() {}

func (x *UpdateIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIjazahResponse.ProtoReflect.Descriptor instead.
func (*UpdateIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{55}
}

func (x *UpdateIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteIjazahRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IjazahId      string                 `protobuf:"bytes,1,opt,name=ijazah_id,json=ijazahId,proto3" json:"ijazah_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIjazahRequest) Reset() {
	*x = DeleteIjazahRequest{}
	mi := &file_sekolah_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIjazahRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIjazahRequest) ProtoMessage() {}

func (x *DeleteIjazahRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIjazahRequest.ProtoReflect.Descriptor instead.
func (*DeleteIjazahRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteIjazahRequest) GetIjazahId() string {
	if x != nil {
		return x.IjazahId
	}
	return ""
}

type DeleteIjazahResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIjazahResponse) Reset() {
	*x = DeleteIjazahResponse{}
	mi := &file_sekolah_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIjazahResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIjazahResponse) ProtoMessage() {}

func (x *DeleteIjazahResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIjazahResponse.ProtoReflect.Descriptor instead.
func (*DeleteIjazahResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{57}
}

func (x *DeleteIjazahResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteIjazahResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// Guru Structure
type Guru struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuruIdEnkrip  string                 `protobuf:"bytes,1,opt,name=guru_id_enkrip,json=guruIdEnkrip,proto3" json:"guru_id_enkrip,omitempty"`
	Nama          string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	MapelId       string                 `protobuf:"bytes,3,opt,name=mapel_id,json=mapelId,proto3" json:"mapel_id,omitempty"`
	Alamat        string                 `protobuf:"bytes,4,opt,name=alamat,proto3" json:"alamat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Guru) Reset() {
	*x = Guru{}
	mi := &file_sekolah_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Guru) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guru) ProtoMessage() {}

func (x *Guru) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guru.ProtoReflect.Descriptor instead.
func (*Guru) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{58}
}

func (x *Guru) GetGuruIdEnkrip() string {
	if x != nil {
		return x.GuruIdEnkrip
	}
	return ""
}

func (x *Guru) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *Guru) GetMapelId() string {
	if x != nil {
		return x.MapelId
	}
	return ""
}

func (x *Guru) GetAlamat() string {
	if x != nil {
		return x.Alamat
	}
	return ""
}

// Request and Response for CRUD
// Guru CRUD
type CreateGuruRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Guru          *Guru                  `protobuf:"bytes,2,opt,name=guru,proto3" json:"guru,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGuruRequest) Reset() {
	*x = CreateGuruRequest{}
	mi := &file_sekolah_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGuruRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuruRequest) ProtoMessage() {}

func (x *CreateGuruRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuruRequest.ProtoReflect.Descriptor instead.
func (*CreateGuruRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{59}
}

func (x *CreateGuruRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *CreateGuruRequest) GetGuru() *Guru {
	if x != nil {
		return x.Guru
	}
	return nil
}

type CreateGuruResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGuruResponse) Reset() {
	*x = CreateGuruResponse{}
	mi := &file_sekolah_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGuruResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuruResponse) ProtoMessage() {}

func (x *CreateGuruResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuruResponse.ProtoReflect.Descriptor instead.
func (*CreateGuruResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{60}
}

func (x *CreateGuruResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateGuruResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetGuruRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	GuruId        string                 `protobuf:"bytes,2,opt,name=guru_id,json=guruId,proto3" json:"guru_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGuruRequest) Reset() {
	*x = GetGuruRequest{}
	mi := &file_sekolah_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGuruRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuruRequest) ProtoMessage() {}

func (x *GetGuruRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuruRequest.ProtoReflect.Descriptor instead.
func (*GetGuruRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{61}
}

func (x *GetGuruRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *GetGuruRequest) GetGuruId() string {
	if x != nil {
		return x.GuruId
	}
	return ""
}

type GetGuruResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Guru          *Guru                  `protobuf:"bytes,1,opt,name=guru,proto3" json:"guru,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGuruResponse) Reset() {
	*x = GetGuruResponse{}
	mi := &file_sekolah_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGuruResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuruResponse) ProtoMessage() {}

func (x *GetGuruResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuruResponse.ProtoReflect.Descriptor instead.
func (*GetGuruResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{62}
}

func (x *GetGuruResponse) GetGuru() *Guru {
	if x != nil {
		return x.Guru
	}
	return nil
}

type UpdateGuruRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	Guru          *Guru                  `protobuf:"bytes,2,opt,name=guru,proto3" json:"guru,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGuruRequest) Reset() {
	*x = UpdateGuruRequest{}
	mi := &file_sekolah_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGuruRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGuruRequest) ProtoMessage() {}

func (x *UpdateGuruRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGuruRequest.ProtoReflect.Descriptor instead.
func (*UpdateGuruRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateGuruRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UpdateGuruRequest) GetGuru() *Guru {
	if x != nil {
		return x.Guru
	}
	return nil
}

type UpdateGuruResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGuruResponse) Reset() {
	*x = UpdateGuruResponse{}
	mi := &file_sekolah_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGuruResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGuruResponse) ProtoMessage() {}

func (x *UpdateGuruResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGuruResponse.ProtoReflect.Descriptor instead.
func (*UpdateGuruResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateGuruResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateGuruResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteGuruRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemaname    string                 `protobuf:"bytes,1,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	GuruId        string                 `protobuf:"bytes,2,opt,name=guru_id,json=guruId,proto3" json:"guru_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGuruRequest) Reset() {
	*x = DeleteGuruRequest{}
	mi := &file_sekolah_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGuruRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGuruRequest) ProtoMessage() {}

func (x *DeleteGuruRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGuruRequest.ProtoReflect.Descriptor instead.
func (*DeleteGuruRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{65}
}

func (x *DeleteGuruRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *DeleteGuruRequest) GetGuruId() string {
	if x != nil {
		return x.GuruId
	}
	return ""
}

type DeleteGuruResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGuruResponse) Reset() {
	*x = DeleteGuruResponse{}
	mi := &file_sekolah_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGuruResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGuruResponse) ProtoMessage() {}

func (x *DeleteGuruResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGuruResponse.ProtoReflect.Descriptor instead.
func (*DeleteGuruResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{66}
}

func (x *DeleteGuruResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteGuruResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UploadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadType    string                 `protobuf:"bytes,1,opt,name=upload_type,json=uploadType,proto3" json:"upload_type,omitempty"` // siswa, nilai_akhir, guru, kelas
	Schemaname    string                 `protobuf:"bytes,2,opt,name=schemaname,proto3" json:"schemaname,omitempty"`
	File          []byte                 `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_sekolah_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{67}
}

func (x *UploadFileRequest) GetUploadType() string {
	if x != nil {
		return x.UploadType
	}
	return ""
}

func (x *UploadFileRequest) GetSchemaname() string {
	if x != nil {
		return x.Schemaname
	}
	return ""
}

func (x *UploadFileRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type UploadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_sekolah_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{68}
}

func (x *UploadFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadFileResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TemplateType  string                 `protobuf:"bytes,1,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"` // siswa, nilai_akhir, guru, kelas, ijazah
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemplateRequest) Reset() {
	*x = GetTemplateRequest{}
	mi := &file_sekolah_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateRequest) ProtoMessage() {}

func (x *GetTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateRequest) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{69}
}

func (x *GetTemplateRequest) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

type GetTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileData      []byte                 `protobuf:"bytes,2,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemplateResponse) Reset() {
	*x = GetTemplateResponse{}
	mi := &file_sekolah_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateResponse) ProtoMessage() {}

func (x *GetTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sekolah_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetTemplateResponse) Descriptor() ([]byte, []int) {
	return file_sekolah_proto_rawDescGZIP(), []int{70}
}

func (x *GetTemplateResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *GetTemplateResponse) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

var File_sekolah_proto protoreflect.FileDescriptor

var file_sekolah_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x5f,
	0x65, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x45, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6b,
	0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6b, 0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x70, 0x69, 0x6e, 0x73, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x70, 0x69, 0x6e, 0x73, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65,
	0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b,
	0x6f, 0x64, 0x65, 0x4b, 0x65, 0x63, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x61, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x6f, 0x64, 0x65, 0x4b, 0x61, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x6f, 0x64, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x6f, 0x64, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x61,
	0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x6a, 0x61, 0x6c, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x4a, 0x61, 0x6c, 0x61, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe4, 0x04, 0x0a, 0x0b, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x44, 0x61, 0x70, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x70, 0x73,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x70, 0x73, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x64, 0x5f, 0x70, 0x6f,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x64, 0x50, 0x6f, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x78, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x61, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65,
	0x6c, 0x75, 0x72, 0x61, 0x68, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b,
	0x65, 0x6c, 0x75, 0x72, 0x61, 0x68, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x63, 0x61,
	0x6d, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x63,
	0x61, 0x6d, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x61, 0x62, 0x5f, 0x6b, 0x6f,
	0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x61, 0x62, 0x4b, 0x6f, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x12, 0x18, 0x0a,
	0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x6d, 0x5f, 0x6b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x6d, 0x4b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x69,
	0x70, 0x5f, 0x6b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x69, 0x70, 0x4b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x69, 0x79,
	0x5f, 0x6b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x69, 0x79, 0x4b, 0x65, 0x70, 0x73, 0x65, 0x6b, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x6b, 0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b,
	0x65, 0x70, 0x65, 0x6d, 0x69, 0x6c, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x73, 0x69, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x6f, 0x64, 0x65, 0x41, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x73,
	0x69, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x62,
	0x65, 0x6e, 0x74, 0x75, 0x6b, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x65, 0x6e, 0x74, 0x75,
	0x6b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x41, 0x0a,
	0x13, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x22, 0x48, 0x0a, 0x14, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x0d, 0x53, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3a, 0x0a, 0x19, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x54, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49,
	0x64, 0x22, 0x70, 0x0a, 0x1a, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x61, 0x62, 0x65,
	0x6c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x61, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x22, 0x66, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x44, 0x61,
	0x70, 0x6f, 0x52, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x22, 0x49, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x44, 0x61, 0x70, 0x6f, 0x52, 0x07, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x22, 0xa5, 0x04, 0x0a, 0x05, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x65,
	0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x50, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x49, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4e, 0x49, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x49, 0x53, 0x4e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x49, 0x53, 0x4e, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x61,
	0x53, 0x69, 0x73, 0x77, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d,
	0x61, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x61, 0x74,
	0x4c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x65, 0x6d,
	0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x65, 0x6c, 0x61, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x65, 0x6c, 0x61, 0x6d, 0x69, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x67, 0x61, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x67, 0x61, 0x6d, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x6c, 0x61, 0x6d, 0x61, 0x74,
	0x53, 0x69, 0x73, 0x77, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x6c, 0x61,
	0x6d, 0x61, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x6c, 0x65,
	0x70, 0x6f, 0x6e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x28, 0x0a, 0x0f,
	0x44, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x54,
	0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x61, 0x41, 0x79,
	0x61, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x61, 0x6d, 0x61, 0x41, 0x79,
	0x61, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x61, 0x6d, 0x61, 0x49, 0x62, 0x75, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x61, 0x6d, 0x61, 0x49, 0x62, 0x75, 0x12, 0x24, 0x0a, 0x0d,
	0x50, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x41, 0x79, 0x61, 0x68, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x41, 0x79,
	0x61, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x49,
	0x62, 0x75, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x65, 0x6b, 0x65, 0x72, 0x6a,
	0x61, 0x61, 0x6e, 0x49, 0x62, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x61, 0x57, 0x61,
	0x6c, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x61, 0x6d, 0x61, 0x57, 0x61,
	0x6c, 0x69, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x57,
	0x61, 0x6c, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x65, 0x6b, 0x65, 0x72,
	0x6a, 0x61, 0x61, 0x6e, 0x57, 0x61, 0x6c, 0x69, 0x22, 0x8e, 0x03, 0x0a, 0x0e, 0x53, 0x69, 0x73,
	0x77, 0x61, 0x50, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x50,
	0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x53, 0x69, 0x73, 0x77, 0x61, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70,
	0x53, 0x69, 0x73, 0x77, 0x61, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x65, 0x73, 0x65, 0x72,
	0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x50, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x44, 0x12,
	0x26, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x6c, 0x61, 0x6d, 0x4b, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x61, 0x6c, 0x61, 0x6d, 0x4b, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6e, 0x61, 0x6b, 0x4b,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6e, 0x61, 0x6b, 0x4b, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x41, 0x73, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x41, 0x73, 0x61,
	0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x6d, 0x61, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x6c, 0x61, 0x6d, 0x61,
	0x74, 0x4f, 0x72, 0x74, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x6c, 0x61,
	0x6d, 0x61, 0x74, 0x4f, 0x72, 0x74, 0x75, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x6e, 0x4f, 0x72, 0x74, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x4f, 0x72, 0x74, 0x75, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x6c, 0x61,
	0x6d, 0x61, 0x74, 0x57, 0x61, 0x6c, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41,
	0x6c, 0x61, 0x6d, 0x61, 0x74, 0x57, 0x61, 0x6c, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x6e, 0x57, 0x61, 0x6c, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x57, 0x61, 0x6c, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x46,
	0x6f, 0x74, 0x6f, 0x53, 0x69, 0x73, 0x77, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x46, 0x6f, 0x74, 0x6f, 0x53, 0x69, 0x73, 0x77, 0x61, 0x22, 0x5a, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x05,
	0x73, 0x69, 0x73, 0x77, 0x61, 0x22, 0x47, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x73, 0x77, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x73, 0x77, 0x61, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52,
	0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x73, 0x69, 0x73, 0x77, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x05, 0x73, 0x69,
	0x73, 0x77, 0x61, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x5f, 0x70, 0x65, 0x6c,
	0x65, 0x6e, 0x67, 0x6b, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x69, 0x73, 0x77, 0x61, 0x50, 0x65, 0x6c, 0x65,
	0x6e, 0x67, 0x6b, 0x61, 0x70, 0x52, 0x0e, 0x73, 0x69, 0x73, 0x77, 0x61, 0x50, 0x65, 0x6c, 0x65,
	0x6e, 0x67, 0x6b, 0x61, 0x70, 0x22, 0x47, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4f,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x73, 0x77, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x73, 0x77, 0x61, 0x49, 0x64, 0x22,
	0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x0a, 0x4e, 0x69, 0x6c,
	0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x73, 0x77, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x73, 0x77, 0x61, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x69, 0x6c, 0x61,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x12, 0x1e,
	0x0a, 0x0a, 0x6b, 0x65, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6b, 0x65, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x22, 0x64,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68,
	0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x6e, 0x69, 0x6c,
	0x61, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x05, 0x6e,
	0x69, 0x6c, 0x61, 0x69, 0x22, 0x4c, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b,
	0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x69,
	0x6c, 0x61, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x69,
	0x6c, 0x61, 0x69, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68,
	0x69, 0x72, 0x52, 0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x22, 0x64, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4e, 0x69,
	0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x05, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x22,
	0x4c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b,
	0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x69, 0x6c, 0x61,
	0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x69, 0x6c, 0x61,
	0x69, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x69, 0x6c,
	0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x5f, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61,
	0x70, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x6d, 0x61,
	0x70, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x61, 0x4d,
	0x61, 0x70, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x6b, 0x72, 0x69, 0x70, 0x73,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x6b, 0x72, 0x69, 0x70,
	0x73, 0x69, 0x22, 0x3a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x22, 0x47,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61,
	0x70, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6d, 0x61, 0x70,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x22,
	0x3a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4d,
	0x61, 0x70, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x22, 0x47, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61,
	0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61,
	0x70, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x81,
	0x03, 0x0a, 0x05, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x52, 0x6f, 0x6d, 0x62,
	0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42, 0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x52, 0x6f, 0x6d, 0x62, 0x6f, 0x6e, 0x67, 0x61, 0x6e, 0x42,
	0x65, 0x6c, 0x61, 0x6a, 0x61, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61,
	0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x75, 0x72, 0x75, 0x73,
	0x61, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x74, 0x6b, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x74, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x6d,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x6d, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x64, 0x69, 0x6b, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x54, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x64,
	0x69, 0x6b, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x52,
	0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4a, 0x65, 0x6e,
	0x69, 0x73, 0x52, 0x6f, 0x6d, 0x62, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x61,
	0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x53, 0x50, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x4e, 0x61, 0x6d, 0x61, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x53, 0x50, 0x12, 0x20,
	0x0a, 0x0b, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x53, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4a, 0x75, 0x72, 0x75, 0x73, 0x61, 0x6e, 0x53, 0x70, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x4b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x49, 0x44, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d,
	0x49, 0x44, 0x22, 0x5a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x47,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4b, 0x65,
	0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65,
	0x6c, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65,
	0x6c, 0x61, 0x73, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22,
	0x55, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x05, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x22, 0x47, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x49, 0x64,
	0x22, 0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb8, 0x05, 0x0a, 0x06, 0x49, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44,
	0x69, 0x64, 0x69, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x65,
	0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x69, 0x64, 0x69, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x4e, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4e,
	0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x49, 0x53, 0x4e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x49, 0x53, 0x4e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x50, 0x53, 0x4e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x50, 0x53, 0x4e, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f,
	0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f,
	0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x61, 0x74,
	0x4c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x65, 0x6d,
	0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x4e, 0x61, 0x6d, 0x61, 0x4f, 0x72, 0x74, 0x75, 0x57, 0x61, 0x6c, 0x69, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x4e, 0x61, 0x6d, 0x61, 0x4f, 0x72, 0x74, 0x75, 0x57, 0x61, 0x6c, 0x69,
	0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x6b, 0x65, 0x74, 0x4b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x6b, 0x65, 0x74, 0x4b, 0x65,
	0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4b, 0x61, 0x62, 0x75, 0x70, 0x61,
	0x74, 0x65, 0x6e, 0x4b, 0x6f, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4b,
	0x61, 0x62, 0x75, 0x70, 0x61, 0x74, 0x65, 0x6e, 0x4b, 0x6f, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x73, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x73, 0x69, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4b, 0x65, 0x61, 0x68, 0x6c, 0x69,
	0x61, 0x6e, 0x12, 0x40, 0x0a, 0x1b, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x50, 0x65, 0x6e,
	0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x55, 0x6a, 0x69, 0x61, 0x6e, 0x55,
	0x53, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x50, 0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x55, 0x6a, 0x69,
	0x61, 0x6e, 0x55, 0x53, 0x12, 0x40, 0x0a, 0x1b, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x50,
	0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x55, 0x6a, 0x69, 0x61,
	0x6e, 0x55, 0x4e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x53, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x50, 0x65, 0x6e, 0x79, 0x65, 0x6c, 0x65, 0x6e, 0x67, 0x67, 0x61, 0x72, 0x61, 0x55,
	0x6a, 0x69, 0x61, 0x6e, 0x55, 0x4e, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x73, 0x61, 0x6c, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x73, 0x61,
	0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x6d, 0x6f,
	0x72, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e,
	0x6f, 0x6d, 0x6f, 0x72, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65,
	0x6d, 0x70, 0x61, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x24,
	0x0a, 0x0d, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x49, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x22, 0x3e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x69,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x06, 0x69, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x22, 0x48, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6a,
	0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x49, 0x64, 0x22,
	0x3c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x22, 0x3e, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x49,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x06, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x22, 0x48, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x32, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x73, 0x0a, 0x04, 0x47, 0x75, 0x72, 0x75, 0x12, 0x24, 0x0a,
	0x0e, 0x67, 0x75, 0x72, 0x75, 0x5f, 0x69, 0x64, 0x5f, 0x65, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x75, 0x72, 0x75, 0x49, 0x64, 0x45, 0x6e, 0x6b,
	0x72, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x22, 0x56, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x04, 0x67, 0x75, 0x72, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x75, 0x72, 0x75, 0x52, 0x04, 0x67, 0x75,
	0x72, 0x75, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x67, 0x75, 0x72, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x75, 0x72, 0x75, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x75, 0x72, 0x75,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x67, 0x75, 0x72, 0x75,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x47, 0x75, 0x72, 0x75, 0x52, 0x04, 0x67, 0x75, 0x72, 0x75, 0x22, 0x56, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x04, 0x67, 0x75, 0x72, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x75, 0x72, 0x75, 0x52, 0x04, 0x67,
	0x75, 0x72, 0x75, 0x22, 0x46, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x72,
	0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x75, 0x72, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x75, 0x72, 0x75, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x68, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x32,
	0xbf, 0x04, 0x0a, 0x0e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x73, 0x69, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01,
	0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x73, 0x69, 0x2d, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12, 0x8b, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12,
	0x22, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x53, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x54, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2f, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2d, 0x74, 0x65, 0x72, 0x64, 0x61, 0x66,
	0x74, 0x61, 0x72, 0x12, 0x6c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x6e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21,
	0x12, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2f, 0x7b, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x5f, 0x69, 0x64,
	0x7d, 0x32, 0xc6, 0x03, 0x0a, 0x0c, 0x53, 0x69, 0x73, 0x77, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77,
	0x61, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x73, 0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x64, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x18, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x7b, 0x73, 0x69, 0x73,
	0x77, 0x61, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x6c, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x73, 0x77, 0x61, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x1a, 0x17, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x74, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69,
	0x73, 0x77, 0x61, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x69, 0x73, 0x77, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x2a, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x73, 0x69, 0x73, 0x77, 0x61, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f,
	0x7b, 0x73, 0x69, 0x73, 0x77, 0x61, 0x5f, 0x69, 0x64, 0x7d, 0x32, 0xb3, 0x04, 0x0a, 0x11, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x81, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68,
	0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x73, 0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x79, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61,
	0x6b, 0x68, 0x69, 0x72, 0x2f, 0x7b, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x92, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41,
	0x6b, 0x68, 0x69, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x33, 0x3a, 0x01, 0x2a, 0x1a, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73,
	0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x7b, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2e, 0x6e, 0x69, 0x6c, 0x61, 0x69,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0x89, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41,
	0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x2a, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x2d, 0x61, 0x6b, 0x68, 0x69, 0x72, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x6e, 0x69, 0x6c, 0x61, 0x69, 0x5f, 0x69, 0x64, 0x7d,
	0x32, 0xcb, 0x03, 0x0a, 0x0c, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x69, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c,
	0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x61, 0x70, 0x65, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x61, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x61, 0x70, 0x65, 0x6c, 0x2f, 0x7b, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x7a, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x1b,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x3a, 0x01, 0x2a, 0x1a, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61,
	0x70, 0x65, 0x6c, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x6d, 0x61, 0x70, 0x65,
	0x6c, 0x2e, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x71, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x2a, 0x1f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x2f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x2f, 0x7b, 0x6d, 0x61, 0x70, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x32, 0xcb,
	0x03, 0x0a, 0x0c, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x1b,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65,
	0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73,
	0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x64, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65,
	0x74, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x73, 0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x7b, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x74, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c,
	0x61, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x1a, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x7b,
	0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x71, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x2a, 0x1f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x2f, 0x7b, 0x6b, 0x65, 0x6c, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x7d, 0x32, 0xc1, 0x03, 0x0a,
	0x0d, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d,
	0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x1c,
	0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73,
	0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61,
	0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x5a, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x6d, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61,
	0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01,
	0x2a, 0x1a, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6a, 0x61, 0x7a, 0x61,
	0x68, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x76, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x2a, 0x21, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x6a, 0x61, 0x7a, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x7d,
	0x32, 0xc8, 0x03, 0x0a, 0x0a, 0x50, 0x54, 0x4b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x68, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x12, 0x1a, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75,
	0x72, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01,
	0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x67, 0x75,
	0x72, 0x75, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x5f, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x47, 0x75, 0x72, 0x75, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x72, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12,
	0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x67, 0x75, 0x72, 0x75,
	0x2f, 0x7b, 0x67, 0x75, 0x72, 0x75, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x7e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x1a, 0x2c, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x67, 0x75, 0x72, 0x75, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x67, 0x75, 0x72, 0x75, 0x2e, 0x67, 0x75, 0x72, 0x75, 0x5f,
	0x69, 0x64, 0x5f, 0x65, 0x6e, 0x6b, 0x72, 0x69, 0x70, 0x7d, 0x12, 0x6f, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c,
	0x61, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x72, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x73, 0x2f, 0x67, 0x75, 0x72, 0x75, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x2f, 0x7b, 0x67, 0x75, 0x72, 0x75, 0x5f, 0x69, 0x64, 0x7d, 0x32, 0x56, 0x0a, 0x0d, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x6b,
	0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x5b, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x19, 0x5a, 0x17, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x2f, 0x73, 0x65, 0x6b, 0x6f,
	0x6c, 0x61, 0x68, 0x3b, 0x73, 0x65, 0x6b, 0x6f, 0x6c, 0x61, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_sekolah_proto_rawDescOnce sync.Once
	file_sekolah_proto_rawDescData = file_sekolah_proto_rawDesc
)

func file_sekolah_proto_rawDescGZIP() []byte {
	file_sekolah_proto_rawDescOnce.Do(func() {
		file_sekolah_proto_rawDescData = protoimpl.X.CompressGZIP(file_sekolah_proto_rawDescData)
	})
	return file_sekolah_proto_rawDescData
}

var file_sekolah_proto_msgTypes = make([]protoimpl.MessageInfo, 71)
var file_sekolah_proto_goTypes = []any{
	(*Sekolah)(nil),                    // 0: sekolah.Sekolah
	(*SekolahDapo)(nil),                // 1: sekolah.SekolahDapo
	(*TabelSekolahRequest)(nil),        // 2: sekolah.TabelSekolahRequest
	(*TabelSekolahResponse)(nil),       // 3: sekolah.TabelSekolahResponse
	(*SchoolRequest)(nil),              // 4: sekolah.SchoolRequest
	(*SchoolResponse)(nil),             // 5: sekolah.SchoolResponse
	(*SekolahTabelTenantRequest)(nil),  // 6: sekolah.SekolahTabelTenantRequest
	(*SekolahTabelTenantResponse)(nil), // 7: sekolah.SekolahTabelTenantResponse
	(*CreateSekolahRequest)(nil),       // 8: sekolah.CreateSekolahRequest
	(*CreateSekolahResponse)(nil),      // 9: sekolah.CreateSekolahResponse
	(*GetSekolahRequest)(nil),          // 10: sekolah.GetSekolahRequest
	(*GetSekolahResponse)(nil),         // 11: sekolah.GetSekolahResponse
	(*Siswa)(nil),                      // 12: sekolah.Siswa
	(*SiswaPelengkap)(nil),             // 13: sekolah.SiswaPelengkap
	(*CreateSiswaRequest)(nil),         // 14: sekolah.CreateSiswaRequest
	(*CreateSiswaResponse)(nil),        // 15: sekolah.CreateSiswaResponse
	(*GetSiswaRequest)(nil),            // 16: sekolah.GetSiswaRequest
	(*GetSiswaResponse)(nil),           // 17: sekolah.GetSiswaResponse
	(*UpdateSiswaRequest)(nil),         // 18: sekolah.UpdateSiswaRequest
	(*UpdateSiswaResponse)(nil),        // 19: sekolah.UpdateSiswaResponse
	(*DeleteSiswaRequest)(nil),         // 20: sekolah.DeleteSiswaRequest
	(*DeleteSiswaResponse)(nil),        // 21: sekolah.DeleteSiswaResponse
	(*NilaiAkhir)(nil),                 // 22: sekolah.NilaiAkhir
	(*CreateNilaiAkhirRequest)(nil),    // 23: sekolah.CreateNilaiAkhirRequest
	(*CreateNilaiAkhirResponse)(nil),   // 24: sekolah.CreateNilaiAkhirResponse
	(*GetNilaiAkhirRequest)(nil),       // 25: sekolah.GetNilaiAkhirRequest
	(*GetNilaiAkhirResponse)(nil),      // 26: sekolah.GetNilaiAkhirResponse
	(*UpdateNilaiAkhirRequest)(nil),    // 27: sekolah.UpdateNilaiAkhirRequest
	(*UpdateNilaiAkhirResponse)(nil),   // 28: sekolah.UpdateNilaiAkhirResponse
	(*DeleteNilaiAkhirRequest)(nil),    // 29: sekolah.DeleteNilaiAkhirRequest
	(*DeleteNilaiAkhirResponse)(nil),   // 30: sekolah.DeleteNilaiAkhirResponse
	(*Mapel)(nil),                      // 31: sekolah.Mapel
	(*CreateMapelRequest)(nil),         // 32: sekolah.CreateMapelRequest
	(*CreateMapelResponse)(nil),        // 33: sekolah.CreateMapelResponse
	(*GetMapelRequest)(nil),            // 34: sekolah.GetMapelRequest
	(*GetMapelResponse)(nil),           // 35: sekolah.GetMapelResponse
	(*UpdateMapelRequest)(nil),         // 36: sekolah.UpdateMapelRequest
	(*UpdateMapelResponse)(nil),        // 37: sekolah.UpdateMapelResponse
	(*DeleteMapelRequest)(nil),         // 38: sekolah.DeleteMapelRequest
	(*DeleteMapelResponse)(nil),        // 39: sekolah.DeleteMapelResponse
	(*Kelas)(nil),                      // 40: sekolah.Kelas
	(*CreateKelasRequest)(nil),         // 41: sekolah.CreateKelasRequest
	(*CreateKelasResponse)(nil),        // 42: sekolah.CreateKelasResponse
	(*GetKelasRequest)(nil),            // 43: sekolah.GetKelasRequest
	(*GetKelasResponse)(nil),           // 44: sekolah.GetKelasResponse
	(*UpdateKelasRequest)(nil),         // 45: sekolah.UpdateKelasRequest
	(*UpdateKelasResponse)(nil),        // 46: sekolah.UpdateKelasResponse
	(*DeleteKelasRequest)(nil),         // 47: sekolah.DeleteKelasRequest
	(*DeleteKelasResponse)(nil),        // 48: sekolah.DeleteKelasResponse
	(*Ijazah)(nil),                     // 49: sekolah.Ijazah
	(*CreateIjazahRequest)(nil),        // 50: sekolah.CreateIjazahRequest
	(*CreateIjazahResponse)(nil),       // 51: sekolah.CreateIjazahResponse
	(*GetIjazahRequest)(nil),           // 52: sekolah.GetIjazahRequest
	(*GetIjazahResponse)(nil),          // 53: sekolah.GetIjazahResponse
	(*UpdateIjazahRequest)(nil),        // 54: sekolah.UpdateIjazahRequest
	(*UpdateIjazahResponse)(nil),       // 55: sekolah.UpdateIjazahResponse
	(*DeleteIjazahRequest)(nil),        // 56: sekolah.DeleteIjazahRequest
	(*DeleteIjazahResponse)(nil),       // 57: sekolah.DeleteIjazahResponse
	(*Guru)(nil),                       // 58: sekolah.Guru
	(*CreateGuruRequest)(nil),          // 59: sekolah.CreateGuruRequest
	(*CreateGuruResponse)(nil),         // 60: sekolah.CreateGuruResponse
	(*GetGuruRequest)(nil),             // 61: sekolah.GetGuruRequest
	(*GetGuruResponse)(nil),            // 62: sekolah.GetGuruResponse
	(*UpdateGuruRequest)(nil),          // 63: sekolah.UpdateGuruRequest
	(*UpdateGuruResponse)(nil),         // 64: sekolah.UpdateGuruResponse
	(*DeleteGuruRequest)(nil),          // 65: sekolah.DeleteGuruRequest
	(*DeleteGuruResponse)(nil),         // 66: sekolah.DeleteGuruResponse
	(*UploadFileRequest)(nil),          // 67: sekolah.UploadFileRequest
	(*UploadFileResponse)(nil),         // 68: sekolah.UploadFileResponse
	(*GetTemplateRequest)(nil),         // 69: sekolah.GetTemplateRequest
	(*GetTemplateResponse)(nil),        // 70: sekolah.GetTemplateResponse
}
var file_sekolah_proto_depIdxs = []int32{
	0,  // 0: sekolah.TabelSekolahRequest.sekolah:type_name -> sekolah.Sekolah
	1,  // 1: sekolah.CreateSekolahRequest.sekolah:type_name -> sekolah.SekolahDapo
	1,  // 2: sekolah.GetSekolahResponse.sekolah:type_name -> sekolah.SekolahDapo
	12, // 3: sekolah.CreateSiswaRequest.siswa:type_name -> sekolah.Siswa
	12, // 4: sekolah.GetSiswaResponse.siswa:type_name -> sekolah.Siswa
	12, // 5: sekolah.UpdateSiswaRequest.siswa:type_name -> sekolah.Siswa
	13, // 6: sekolah.UpdateSiswaRequest.siswa_pelengkap:type_name -> sekolah.SiswaPelengkap
	22, // 7: sekolah.CreateNilaiAkhirRequest.nilai:type_name -> sekolah.NilaiAkhir
	22, // 8: sekolah.GetNilaiAkhirResponse.nilai:type_name -> sekolah.NilaiAkhir
	22, // 9: sekolah.UpdateNilaiAkhirRequest.nilai:type_name -> sekolah.NilaiAkhir
	31, // 10: sekolah.CreateMapelRequest.mapel:type_name -> sekolah.Mapel
	31, // 11: sekolah.GetMapelResponse.mapel:type_name -> sekolah.Mapel
	31, // 12: sekolah.UpdateMapelRequest.mapel:type_name -> sekolah.Mapel
	40, // 13: sekolah.CreateKelasRequest.kelas:type_name -> sekolah.Kelas
	40, // 14: sekolah.GetKelasResponse.kelas:type_name -> sekolah.Kelas
	40, // 15: sekolah.UpdateKelasRequest.kelas:type_name -> sekolah.Kelas
	49, // 16: sekolah.CreateIjazahRequest.ijazah:type_name -> sekolah.Ijazah
	49, // 17: sekolah.GetIjazahResponse.ijazah:type_name -> sekolah.Ijazah
	49, // 18: sekolah.UpdateIjazahRequest.ijazah:type_name -> sekolah.Ijazah
	58, // 19: sekolah.CreateGuruRequest.guru:type_name -> sekolah.Guru
	58, // 20: sekolah.GetGuruResponse.guru:type_name -> sekolah.Guru
	58, // 21: sekolah.UpdateGuruRequest.guru:type_name -> sekolah.Guru
	4,  // 22: sekolah.SekolahService.GetSchoolInfo:input_type -> sekolah.SchoolRequest
	2,  // 23: sekolah.SekolahService.RegistrasiSekolah:input_type -> sekolah.TabelSekolahRequest
	6,  // 24: sekolah.SekolahService.GetSekolahTabelTenant:input_type -> sekolah.SekolahTabelTenantRequest
	8,  // 25: sekolah.SekolahService.CreateSekolah:input_type -> sekolah.CreateSekolahRequest
	10, // 26: sekolah.SekolahService.GetSekolah:input_type -> sekolah.GetSekolahRequest
	14, // 27: sekolah.SiswaService.CreateSiswa:input_type -> sekolah.CreateSiswaRequest
	16, // 28: sekolah.SiswaService.GetSiswa:input_type -> sekolah.GetSiswaRequest
	18, // 29: sekolah.SiswaService.UpdateSiswa:input_type -> sekolah.UpdateSiswaRequest
	20, // 30: sekolah.SiswaService.DeleteSiswa:input_type -> sekolah.DeleteSiswaRequest
	23, // 31: sekolah.NilaiAkhirService.CreateNilaiAkhir:input_type -> sekolah.CreateNilaiAkhirRequest
	25, // 32: sekolah.NilaiAkhirService.GetNilaiAkhir:input_type -> sekolah.GetNilaiAkhirRequest
	27, // 33: sekolah.NilaiAkhirService.UpdateNilaiAkhir:input_type -> sekolah.UpdateNilaiAkhirRequest
	29, // 34: sekolah.NilaiAkhirService.DeleteNilaiAkhir:input_type -> sekolah.DeleteNilaiAkhirRequest
	32, // 35: sekolah.MapelService.CreateMapel:input_type -> sekolah.CreateMapelRequest
	34, // 36: sekolah.MapelService.GetMapel:input_type -> sekolah.GetMapelRequest
	36, // 37: sekolah.MapelService.UpdateMapel:input_type -> sekolah.UpdateMapelRequest
	38, // 38: sekolah.MapelService.DeleteMapel:input_type -> sekolah.DeleteMapelRequest
	41, // 39: sekolah.KelasService.CreateKelas:input_type -> sekolah.CreateKelasRequest
	43, // 40: sekolah.KelasService.GetKelas:input_type -> sekolah.GetKelasRequest
	45, // 41: sekolah.KelasService.UpdateKelas:input_type -> sekolah.UpdateKelasRequest
	47, // 42: sekolah.KelasService.DeleteKelas:input_type -> sekolah.DeleteKelasRequest
	50, // 43: sekolah.IjazahService.CreateIjazah:input_type -> sekolah.CreateIjazahRequest
	52, // 44: sekolah.IjazahService.GetIjazah:input_type -> sekolah.GetIjazahRequest
	54, // 45: sekolah.IjazahService.UpdateIjazah:input_type -> sekolah.UpdateIjazahRequest
	56, // 46: sekolah.IjazahService.DeleteIjazah:input_type -> sekolah.DeleteIjazahRequest
	59, // 47: sekolah.PTKService.CreateGuru:input_type -> sekolah.CreateGuruRequest
	61, // 48: sekolah.PTKService.GetGuru:input_type -> sekolah.GetGuruRequest
	63, // 49: sekolah.PTKService.UpdateGuru:input_type -> sekolah.UpdateGuruRequest
	65, // 50: sekolah.PTKService.DeleteGuru:input_type -> sekolah.DeleteGuruRequest
	67, // 51: sekolah.UploadService.UploadFile:input_type -> sekolah.UploadFileRequest
	69, // 52: sekolah.TemplateService.GetTemplate:input_type -> sekolah.GetTemplateRequest
	5,  // 53: sekolah.SekolahService.GetSchoolInfo:output_type -> sekolah.SchoolResponse
	3,  // 54: sekolah.SekolahService.RegistrasiSekolah:output_type -> sekolah.TabelSekolahResponse
	7,  // 55: sekolah.SekolahService.GetSekolahTabelTenant:output_type -> sekolah.SekolahTabelTenantResponse
	9,  // 56: sekolah.SekolahService.CreateSekolah:output_type -> sekolah.CreateSekolahResponse
	11, // 57: sekolah.SekolahService.GetSekolah:output_type -> sekolah.GetSekolahResponse
	15, // 58: sekolah.SiswaService.CreateSiswa:output_type -> sekolah.CreateSiswaResponse
	17, // 59: sekolah.SiswaService.GetSiswa:output_type -> sekolah.GetSiswaResponse
	19, // 60: sekolah.SiswaService.UpdateSiswa:output_type -> sekolah.UpdateSiswaResponse
	21, // 61: sekolah.SiswaService.DeleteSiswa:output_type -> sekolah.DeleteSiswaResponse
	24, // 62: sekolah.NilaiAkhirService.CreateNilaiAkhir:output_type -> sekolah.CreateNilaiAkhirResponse
	26, // 63: sekolah.NilaiAkhirService.GetNilaiAkhir:output_type -> sekolah.GetNilaiAkhirResponse
	28, // 64: sekolah.NilaiAkhirService.UpdateNilaiAkhir:output_type -> sekolah.UpdateNilaiAkhirResponse
	30, // 65: sekolah.NilaiAkhirService.DeleteNilaiAkhir:output_type -> sekolah.DeleteNilaiAkhirResponse
	33, // 66: sekolah.MapelService.CreateMapel:output_type -> sekolah.CreateMapelResponse
	35, // 67: sekolah.MapelService.GetMapel:output_type -> sekolah.GetMapelResponse
	37, // 68: sekolah.MapelService.UpdateMapel:output_type -> sekolah.UpdateMapelResponse
	39, // 69: sekolah.MapelService.DeleteMapel:output_type -> sekolah.DeleteMapelResponse
	42, // 70: sekolah.KelasService.CreateKelas:output_type -> sekolah.CreateKelasResponse
	44, // 71: sekolah.KelasService.GetKelas:output_type -> sekolah.GetKelasResponse
	46, // 72: sekolah.KelasService.UpdateKelas:output_type -> sekolah.UpdateKelasResponse
	48, // 73: sekolah.KelasService.DeleteKelas:output_type -> sekolah.DeleteKelasResponse
	51, // 74: sekolah.IjazahService.CreateIjazah:output_type -> sekolah.CreateIjazahResponse
	53, // 75: sekolah.IjazahService.GetIjazah:output_type -> sekolah.GetIjazahResponse
	55, // 76: sekolah.IjazahService.UpdateIjazah:output_type -> sekolah.UpdateIjazahResponse
	57, // 77: sekolah.IjazahService.DeleteIjazah:output_type -> sekolah.DeleteIjazahResponse
	60, // 78: sekolah.PTKService.CreateGuru:output_type -> sekolah.CreateGuruResponse
	62, // 79: sekolah.PTKService.GetGuru:output_type -> sekolah.GetGuruResponse
	64, // 80: sekolah.PTKService.UpdateGuru:output_type -> sekolah.UpdateGuruResponse
	66, // 81: sekolah.PTKService.DeleteGuru:output_type -> sekolah.DeleteGuruResponse
	68, // 82: sekolah.UploadService.UploadFile:output_type -> sekolah.UploadFileResponse
	70, // 83: sekolah.TemplateService.GetTemplate:output_type -> sekolah.GetTemplateResponse
	53, // [53:84] is the sub-list for method output_type
	22, // [22:53] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_sekolah_proto_init() }
func file_sekolah_proto_init() {
	if File_sekolah_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sekolah_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   71,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_sekolah_proto_goTypes,
		DependencyIndexes: file_sekolah_proto_depIdxs,
		MessageInfos:      file_sekolah_proto_msgTypes,
	}.Build()
	File_sekolah_proto = out.File
	file_sekolah_proto_rawDesc = nil
	file_sekolah_proto_goTypes = nil
	file_sekolah_proto_depIdxs = nil
}
